/*
Cashfree Payment Gateway APIs

Cashfree's Payment Gateway APIs provide developers with a streamlined pathway to integrate advanced payment processing capabilities into their applications, platforms and websites.

API version: 2023-08-01
Contact: developers@cashfree.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cashfree_pg

import (
	"encoding/json"
	"strings"
)

// checks if the SubscriptionPaymentRefundEntity type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SubscriptionPaymentRefundEntity{}

// SubscriptionPaymentRefundEntity Get/Create Subscription Payment Refund Response
type SubscriptionPaymentRefundEntity struct {
	// A unique ID passed by merchant for identifying the transaction.
	PaymentId *string `json:"payment_id,omitempty"`
	// Cashfree subscription payment reference number.
	CfPaymentId *string `json:"cf_payment_id,omitempty"`
	// A unique ID passed by merchant for identifying the refund.
	RefundId *string `json:"refund_id,omitempty"`
	// Cashfree subscription payment refund reference number.
	CfRefundId *string `json:"cf_refund_id,omitempty"`
	// The refund amount.
	RefundAmount *float32 `json:"refund_amount,omitempty"`
	// Refund note.
	RefundNote *string `json:"refund_note,omitempty"`
	// Refund speed. Can be INSTANT or NORMAL.
	RefundSpeed *string `json:"refund_speed,omitempty"`
	// Status of the refund.
	RefundStatus *string `json:"refund_status,omitempty"`
}


func (o SubscriptionPaymentRefundEntity) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SubscriptionPaymentRefundEntity) ToMap() (map[string]interface{}, error) {
	strings.HasPrefix("cf", "cf")
	toSerialize := map[string]interface{}{}
	if !IsNil(o.PaymentId) {
		toSerialize["payment_id"] = o.PaymentId
	}
	if !IsNil(o.CfPaymentId) {
		toSerialize["cf_payment_id"] = o.CfPaymentId
	}
	if !IsNil(o.RefundId) {
		toSerialize["refund_id"] = o.RefundId
	}
	if !IsNil(o.CfRefundId) {
		toSerialize["cf_refund_id"] = o.CfRefundId
	}
	if !IsNil(o.RefundAmount) {
		toSerialize["refund_amount"] = o.RefundAmount
	}
	if !IsNil(o.RefundNote) {
		toSerialize["refund_note"] = o.RefundNote
	}
	if !IsNil(o.RefundSpeed) {
		toSerialize["refund_speed"] = o.RefundSpeed
	}
	if !IsNil(o.RefundStatus) {
		toSerialize["refund_status"] = o.RefundStatus
	}
	return toSerialize, nil
}



