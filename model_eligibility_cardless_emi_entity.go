/*
Cashfree Payment Gateway APIs

Cashfree's Payment Gateway APIs provide developers with a streamlined pathway to integrate advanced payment processing capabilities into their applications, platforms and websites.

API version: 2022-09-01
Contact: developers@cashfree.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cashfree_pg

import (
	"encoding/json"
)

// checks if the EligibilityCardlessEMIEntity type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &EligibilityCardlessEMIEntity{}

// EligibilityCardlessEMIEntity Carless EMI eligible entity
type EligibilityCardlessEMIEntity struct {
	Eligibility *bool `json:"eligibility,omitempty"`
	EntityType *string `json:"entity_type,omitempty"`
	EntityValue *string `json:"entity_value,omitempty"`
	EntityDetails *CardlessEMIEntity `json:"entity_details,omitempty"`
}

// NewEligibilityCardlessEMIEntity instantiates a new EligibilityCardlessEMIEntity object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEligibilityCardlessEMIEntity() *EligibilityCardlessEMIEntity {
	this := EligibilityCardlessEMIEntity{}
	return &this
}

// NewEligibilityCardlessEMIEntityWithDefaults instantiates a new EligibilityCardlessEMIEntity object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEligibilityCardlessEMIEntityWithDefaults() *EligibilityCardlessEMIEntity {
	this := EligibilityCardlessEMIEntity{}
	return &this
}

// GetEligibility returns the Eligibility field value if set, zero value otherwise.
func (o *EligibilityCardlessEMIEntity) GetEligibility() bool {
	if o == nil || IsNil(o.Eligibility) {
		var ret bool
		return ret
	}
	return *o.Eligibility
}

// GetEligibilityOk returns a tuple with the Eligibility field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EligibilityCardlessEMIEntity) GetEligibilityOk() (*bool, bool) {
	if o == nil || IsNil(o.Eligibility) {
		return nil, false
	}
	return o.Eligibility, true
}

// HasEligibility returns a boolean if a field has been set.
func (o *EligibilityCardlessEMIEntity) HasEligibility() bool {
	if o != nil && !IsNil(o.Eligibility) {
		return true
	}

	return false
}

// SetEligibility gets a reference to the given bool and assigns it to the Eligibility field.
func (o *EligibilityCardlessEMIEntity) SetEligibility(v bool) {
	o.Eligibility = &v
}

// GetEntityType returns the EntityType field value if set, zero value otherwise.
func (o *EligibilityCardlessEMIEntity) GetEntityType() string {
	if o == nil || IsNil(o.EntityType) {
		var ret string
		return ret
	}
	return *o.EntityType
}

// GetEntityTypeOk returns a tuple with the EntityType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EligibilityCardlessEMIEntity) GetEntityTypeOk() (*string, bool) {
	if o == nil || IsNil(o.EntityType) {
		return nil, false
	}
	return o.EntityType, true
}

// HasEntityType returns a boolean if a field has been set.
func (o *EligibilityCardlessEMIEntity) HasEntityType() bool {
	if o != nil && !IsNil(o.EntityType) {
		return true
	}

	return false
}

// SetEntityType gets a reference to the given string and assigns it to the EntityType field.
func (o *EligibilityCardlessEMIEntity) SetEntityType(v string) {
	o.EntityType = &v
}

// GetEntityValue returns the EntityValue field value if set, zero value otherwise.
func (o *EligibilityCardlessEMIEntity) GetEntityValue() string {
	if o == nil || IsNil(o.EntityValue) {
		var ret string
		return ret
	}
	return *o.EntityValue
}

// GetEntityValueOk returns a tuple with the EntityValue field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EligibilityCardlessEMIEntity) GetEntityValueOk() (*string, bool) {
	if o == nil || IsNil(o.EntityValue) {
		return nil, false
	}
	return o.EntityValue, true
}

// HasEntityValue returns a boolean if a field has been set.
func (o *EligibilityCardlessEMIEntity) HasEntityValue() bool {
	if o != nil && !IsNil(o.EntityValue) {
		return true
	}

	return false
}

// SetEntityValue gets a reference to the given string and assigns it to the EntityValue field.
func (o *EligibilityCardlessEMIEntity) SetEntityValue(v string) {
	o.EntityValue = &v
}

// GetEntityDetails returns the EntityDetails field value if set, zero value otherwise.
func (o *EligibilityCardlessEMIEntity) GetEntityDetails() CardlessEMIEntity {
	if o == nil || IsNil(o.EntityDetails) {
		var ret CardlessEMIEntity
		return ret
	}
	return *o.EntityDetails
}

// GetEntityDetailsOk returns a tuple with the EntityDetails field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EligibilityCardlessEMIEntity) GetEntityDetailsOk() (*CardlessEMIEntity, bool) {
	if o == nil || IsNil(o.EntityDetails) {
		return nil, false
	}
	return o.EntityDetails, true
}

// HasEntityDetails returns a boolean if a field has been set.
func (o *EligibilityCardlessEMIEntity) HasEntityDetails() bool {
	if o != nil && !IsNil(o.EntityDetails) {
		return true
	}

	return false
}

// SetEntityDetails gets a reference to the given CardlessEMIEntity and assigns it to the EntityDetails field.
func (o *EligibilityCardlessEMIEntity) SetEntityDetails(v CardlessEMIEntity) {
	o.EntityDetails = &v
}

func (o EligibilityCardlessEMIEntity) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o EligibilityCardlessEMIEntity) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Eligibility) {
		toSerialize["eligibility"] = o.Eligibility
	}
	if !IsNil(o.EntityType) {
		toSerialize["entity_type"] = o.EntityType
	}
	if !IsNil(o.EntityValue) {
		toSerialize["entity_value"] = o.EntityValue
	}
	if !IsNil(o.EntityDetails) {
		toSerialize["entity_details"] = o.EntityDetails
	}
	return toSerialize, nil
}

type NullableEligibilityCardlessEMIEntity struct {
	value *EligibilityCardlessEMIEntity
	isSet bool
}

func (v NullableEligibilityCardlessEMIEntity) Get() *EligibilityCardlessEMIEntity {
	return v.value
}

func (v *NullableEligibilityCardlessEMIEntity) Set(val *EligibilityCardlessEMIEntity) {
	v.value = val
	v.isSet = true
}

func (v NullableEligibilityCardlessEMIEntity) IsSet() bool {
	return v.isSet
}

func (v *NullableEligibilityCardlessEMIEntity) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEligibilityCardlessEMIEntity(val *EligibilityCardlessEMIEntity) *NullableEligibilityCardlessEMIEntity {
	return &NullableEligibilityCardlessEMIEntity{value: val, isSet: true}
}

func (v NullableEligibilityCardlessEMIEntity) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEligibilityCardlessEMIEntity) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


