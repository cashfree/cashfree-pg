/*
Cashfree Payment Gateway APIs

Cashfree's Payment Gateway APIs provide developers with a streamlined pathway to integrate advanced payment processing capabilities into their applications, platforms and websites.

API version: 2023-08-01
Contact: developers@cashfree.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cashfree_pg

import (
	"encoding/json"
)

// checks if the AuthorizationInPaymentsEntity type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AuthorizationInPaymentsEntity{}

// AuthorizationInPaymentsEntity If preauth enabled for account you will get this body
type AuthorizationInPaymentsEntity struct {
	// One of CAPTURE or VOID
	Action *string `json:"action,omitempty"`
	// One of SUCCESS or PENDING
	Status *string `json:"status,omitempty"`
	// The captured amount for this authorization request
	CapturedAmount *float32 `json:"captured_amount,omitempty"`
	// Start time of this authorization hold (only for UPI)
	StartTime *string `json:"start_time,omitempty"`
	// End time of this authorization hold (only for UPI)
	EndTime *string `json:"end_time,omitempty"`
	// Approve by time as passed in the authorization request (only for UPI)
	ApproveBy *string `json:"approve_by,omitempty"`
	// CAPTURE or VOID reference number based on action 
	ActionReference *string `json:"action_reference,omitempty"`
	// Time of action (CAPTURE or VOID)
	ActionTime *string `json:"action_time,omitempty"`
}


func (o AuthorizationInPaymentsEntity) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AuthorizationInPaymentsEntity) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Action) {
		toSerialize["action"] = o.Action
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !IsNil(o.CapturedAmount) {
		toSerialize["captured_amount"] = o.CapturedAmount
	}
	if !IsNil(o.StartTime) {
		toSerialize["start_time"] = o.StartTime
	}
	if !IsNil(o.EndTime) {
		toSerialize["end_time"] = o.EndTime
	}
	if !IsNil(o.ApproveBy) {
		toSerialize["approve_by"] = o.ApproveBy
	}
	if !IsNil(o.ActionReference) {
		toSerialize["action_reference"] = o.ActionReference
	}
	if !IsNil(o.ActionTime) {
		toSerialize["action_time"] = o.ActionTime
	}
	return toSerialize, nil
}



