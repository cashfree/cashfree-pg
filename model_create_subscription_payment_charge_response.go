/*
Cashfree Payment Gateway APIs

Cashfree's Payment Gateway APIs provide developers with a streamlined pathway to integrate advanced payment processing capabilities into their applications, platforms and websites.

API version: 2023-08-01
Contact: developers@cashfree.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cashfree_pg

import (
	"encoding/json"
	"strings"
)

// checks if the CreateSubscriptionPaymentChargeResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateSubscriptionPaymentChargeResponse{}

// CreateSubscriptionPaymentChargeResponse The response returned in Get, Create or Manage Subscription Payment APIs.
type CreateSubscriptionPaymentChargeResponse struct {
	// Cashfree subscription payment reference number
	CfPaymentId *string `json:"cf_payment_id,omitempty"`
	// Cashfree subscription reference number
	CfSubscriptionId *string `json:"cf_subscription_id,omitempty"`
	FailureDetails *CreateSubscriptionPaymentAuthResponseFailureDetails `json:"failure_details,omitempty"`
	// The charge amount of the payment.
	PaymentAmount *float32 `json:"payment_amount,omitempty"`
	// A unique ID passed by merchant for identifying the transaction.
	PaymentId *string `json:"payment_id,omitempty"`
	// The date on which the payment was initiated.
	PaymentInitiatedDate *string `json:"payment_initiated_date,omitempty"`
	// Status of the payment.
	PaymentStatus *string `json:"payment_status,omitempty"`
	// Payment type. Can be AUTH or CHARGE.
	PaymentType *string `json:"payment_type,omitempty"`
	// A unique ID passed by merchant for identifying the subscription.
	SubscriptionId *string `json:"subscription_id,omitempty"`
	// Payment method used for the authorization.
	PaymentMethod *string `json:"payment_method,omitempty"`
}


func (o CreateSubscriptionPaymentChargeResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateSubscriptionPaymentChargeResponse) ToMap() (map[string]interface{}, error) {
	strings.HasPrefix("cf", "cf")
	toSerialize := map[string]interface{}{}
	if !IsNil(o.CfPaymentId) {
		toSerialize["cf_payment_id"] = o.CfPaymentId
	}
	if !IsNil(o.CfSubscriptionId) {
		toSerialize["cf_subscription_id"] = o.CfSubscriptionId
	}
	if !IsNil(o.FailureDetails) {
		toSerialize["failure_details"] = o.FailureDetails
	}
	if !IsNil(o.PaymentAmount) {
		toSerialize["payment_amount"] = o.PaymentAmount
	}
	if !IsNil(o.PaymentId) {
		toSerialize["payment_id"] = o.PaymentId
	}
	if !IsNil(o.PaymentInitiatedDate) {
		toSerialize["payment_initiated_date"] = o.PaymentInitiatedDate
	}
	if !IsNil(o.PaymentStatus) {
		toSerialize["payment_status"] = o.PaymentStatus
	}
	if !IsNil(o.PaymentType) {
		toSerialize["payment_type"] = o.PaymentType
	}
	if !IsNil(o.SubscriptionId) {
		toSerialize["subscription_id"] = o.SubscriptionId
	}
	if !IsNil(o.PaymentMethod) {
		toSerialize["payment_method"] = o.PaymentMethod
	}
	return toSerialize, nil
}



