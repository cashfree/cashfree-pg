/*
Cashfree Payment Gateway APIs

Cashfree's Payment Gateway APIs provide developers with a streamlined pathway to integrate advanced payment processing capabilities into their applications, platforms and websites.

API version: 2022-09-01
Contact: developers@cashfree.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cashfree_pg

import (
	"encoding/json"
)

// checks if the Netbanking type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &Netbanking{}

// Netbanking Netbanking payment method request body
type Netbanking struct {
	// The channel for netbanking will always be `link`
	Channel string `json:"channel"`
	// Bank code
	NetbankingBankCode *int32 `json:"netbanking_bank_code,omitempty"`
	// String code for bank
	NetbankingBankName *string `json:"netbanking_bank_name,omitempty"`
}

// NewNetbanking instantiates a new Netbanking object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewNetbanking(channel string) *Netbanking {
	this := Netbanking{}
	return &this
}

// NewNetbankingWithDefaults instantiates a new Netbanking object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewNetbankingWithDefaults() *Netbanking {
	this := Netbanking{}
	return &this
}

// GetChannel returns the Channel field value
func (o *Netbanking) GetChannel() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Channel
}

// GetChannelOk returns a tuple with the Channel field value
// and a boolean to check if the value has been set.
func (o *Netbanking) GetChannelOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Channel, true
}

// SetChannel sets field value
func (o *Netbanking) SetChannel(v string) {
	o.Channel = v
}

// GetNetbankingBankCode returns the NetbankingBankCode field value if set, zero value otherwise.
func (o *Netbanking) GetNetbankingBankCode() int32 {
	if o == nil || IsNil(o.NetbankingBankCode) {
		var ret int32
		return ret
	}
	return *o.NetbankingBankCode
}

// GetNetbankingBankCodeOk returns a tuple with the NetbankingBankCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Netbanking) GetNetbankingBankCodeOk() (*int32, bool) {
	if o == nil || IsNil(o.NetbankingBankCode) {
		return nil, false
	}
	return o.NetbankingBankCode, true
}

// HasNetbankingBankCode returns a boolean if a field has been set.
func (o *Netbanking) HasNetbankingBankCode() bool {
	if o != nil && !IsNil(o.NetbankingBankCode) {
		return true
	}

	return false
}

// SetNetbankingBankCode gets a reference to the given int32 and assigns it to the NetbankingBankCode field.
func (o *Netbanking) SetNetbankingBankCode(v int32) {
	o.NetbankingBankCode = &v
}

// GetNetbankingBankName returns the NetbankingBankName field value if set, zero value otherwise.
func (o *Netbanking) GetNetbankingBankName() string {
	if o == nil || IsNil(o.NetbankingBankName) {
		var ret string
		return ret
	}
	return *o.NetbankingBankName
}

// GetNetbankingBankNameOk returns a tuple with the NetbankingBankName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Netbanking) GetNetbankingBankNameOk() (*string, bool) {
	if o == nil || IsNil(o.NetbankingBankName) {
		return nil, false
	}
	return o.NetbankingBankName, true
}

// HasNetbankingBankName returns a boolean if a field has been set.
func (o *Netbanking) HasNetbankingBankName() bool {
	if o != nil && !IsNil(o.NetbankingBankName) {
		return true
	}

	return false
}

// SetNetbankingBankName gets a reference to the given string and assigns it to the NetbankingBankName field.
func (o *Netbanking) SetNetbankingBankName(v string) {
	o.NetbankingBankName = &v
}

func (o Netbanking) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o Netbanking) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["channel"] = o.Channel
	if !IsNil(o.NetbankingBankCode) {
		toSerialize["netbanking_bank_code"] = o.NetbankingBankCode
	}
	if !IsNil(o.NetbankingBankName) {
		toSerialize["netbanking_bank_name"] = o.NetbankingBankName
	}
	return toSerialize, nil
}

type NullableNetbanking struct {
	value *Netbanking
	isSet bool
}

func (v NullableNetbanking) Get() *Netbanking {
	return v.value
}

func (v *NullableNetbanking) Set(val *Netbanking) {
	v.value = val
	v.isSet = true
}

func (v NullableNetbanking) IsSet() bool {
	return v.isSet
}

func (v *NullableNetbanking) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableNetbanking(val *Netbanking) *NullableNetbanking {
	return &NullableNetbanking{value: val, isSet: true}
}

func (v NullableNetbanking) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableNetbanking) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


