/*
Cashfree Payment Gateway APIs

Cashfree's Payment Gateway APIs provide developers with a streamlined pathway to integrate advanced payment processing capabilities into their applications, platforms and websites.

API version: 2022-09-01
Contact: developers@cashfree.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cashfree_pg

import (
	"encoding/json"
)

// checks if the PayOrderRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PayOrderRequest{}

// PayOrderRequest Complete object for the pay api that uses payment method objects
type PayOrderRequest struct {
	PaymentSessionId string `json:"payment_session_id"`
	PaymentMethod PayOrderRequestPaymentMethod `json:"payment_method"`
	SaveInstrument *bool `json:"save_instrument,omitempty"`
	// This is required if any offers needs to be applied to the order.
	OfferId *string `json:"offer_id,omitempty"`
}

// NewPayOrderRequest instantiates a new PayOrderRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPayOrderRequest(paymentSessionId string, paymentMethod PayOrderRequestPaymentMethod) *PayOrderRequest {
	this := PayOrderRequest{}
	this.PaymentSessionId = paymentSessionId
	this.PaymentMethod = paymentMethod
	return &this
}

// NewPayOrderRequestWithDefaults instantiates a new PayOrderRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPayOrderRequestWithDefaults() *PayOrderRequest {
	this := PayOrderRequest{}
	return &this
}

// GetPaymentSessionId returns the PaymentSessionId field value
func (o *PayOrderRequest) GetPaymentSessionId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.PaymentSessionId
}

// GetPaymentSessionIdOk returns a tuple with the PaymentSessionId field value
// and a boolean to check if the value has been set.
func (o *PayOrderRequest) GetPaymentSessionIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PaymentSessionId, true
}

// SetPaymentSessionId sets field value
func (o *PayOrderRequest) SetPaymentSessionId(v string) {
	o.PaymentSessionId = v
}

// GetPaymentMethod returns the PaymentMethod field value
func (o *PayOrderRequest) GetPaymentMethod() PayOrderRequestPaymentMethod {
	if o == nil {
		var ret PayOrderRequestPaymentMethod
		return ret
	}

	return o.PaymentMethod
}

// GetPaymentMethodOk returns a tuple with the PaymentMethod field value
// and a boolean to check if the value has been set.
func (o *PayOrderRequest) GetPaymentMethodOk() (*PayOrderRequestPaymentMethod, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PaymentMethod, true
}

// SetPaymentMethod sets field value
func (o *PayOrderRequest) SetPaymentMethod(v PayOrderRequestPaymentMethod) {
	o.PaymentMethod = v
}

// GetSaveInstrument returns the SaveInstrument field value if set, zero value otherwise.
func (o *PayOrderRequest) GetSaveInstrument() bool {
	if o == nil || IsNil(o.SaveInstrument) {
		var ret bool
		return ret
	}
	return *o.SaveInstrument
}

// GetSaveInstrumentOk returns a tuple with the SaveInstrument field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PayOrderRequest) GetSaveInstrumentOk() (*bool, bool) {
	if o == nil || IsNil(o.SaveInstrument) {
		return nil, false
	}
	return o.SaveInstrument, true
}

// HasSaveInstrument returns a boolean if a field has been set.
func (o *PayOrderRequest) HasSaveInstrument() bool {
	if o != nil && !IsNil(o.SaveInstrument) {
		return true
	}

	return false
}

// SetSaveInstrument gets a reference to the given bool and assigns it to the SaveInstrument field.
func (o *PayOrderRequest) SetSaveInstrument(v bool) {
	o.SaveInstrument = &v
}

// GetOfferId returns the OfferId field value if set, zero value otherwise.
func (o *PayOrderRequest) GetOfferId() string {
	if o == nil || IsNil(o.OfferId) {
		var ret string
		return ret
	}
	return *o.OfferId
}

// GetOfferIdOk returns a tuple with the OfferId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PayOrderRequest) GetOfferIdOk() (*string, bool) {
	if o == nil || IsNil(o.OfferId) {
		return nil, false
	}
	return o.OfferId, true
}

// HasOfferId returns a boolean if a field has been set.
func (o *PayOrderRequest) HasOfferId() bool {
	if o != nil && !IsNil(o.OfferId) {
		return true
	}

	return false
}

// SetOfferId gets a reference to the given string and assigns it to the OfferId field.
func (o *PayOrderRequest) SetOfferId(v string) {
	o.OfferId = &v
}

func (o PayOrderRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PayOrderRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["payment_session_id"] = o.PaymentSessionId
	toSerialize["payment_method"] = o.PaymentMethod
	if !IsNil(o.SaveInstrument) {
		toSerialize["save_instrument"] = o.SaveInstrument
	}
	if !IsNil(o.OfferId) {
		toSerialize["offer_id"] = o.OfferId
	}
	return toSerialize, nil
}

type NullablePayOrderRequest struct {
	value *PayOrderRequest
	isSet bool
}

func (v NullablePayOrderRequest) Get() *PayOrderRequest {
	return v.value
}

func (v *NullablePayOrderRequest) Set(val *PayOrderRequest) {
	v.value = val
	v.isSet = true
}

func (v NullablePayOrderRequest) IsSet() bool {
	return v.isSet
}

func (v *NullablePayOrderRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePayOrderRequest(val *PayOrderRequest) *NullablePayOrderRequest {
	return &NullablePayOrderRequest{value: val, isSet: true}
}

func (v NullablePayOrderRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePayOrderRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


