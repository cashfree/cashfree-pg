/*
Cashfree Payment Gateway APIs

Cashfree's Payment Gateway APIs provide developers with a streamlined pathway to integrate advanced payment processing capabilities into their applications, platforms and websites.

API version: 2025-01-01
Contact: developers@cashfree.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cashfree_pg

import (
	"encoding/json"
	"strings"
)

// checks if the SplitOrderReconSuccessResponseSettlement type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SplitOrderReconSuccessResponseSettlement{}

// SplitOrderReconSuccessResponseSettlement Details of the settlement information.
type SplitOrderReconSuccessResponseSettlement struct {
	// Type of entity. Example: \"settlement\".
	Entity *string `json:"entity,omitempty"`
	// Unique Cashfree settlement ID.
	CfSettlementId *int64 `json:"cf_settlement_id,omitempty"`
	// Unique Cashfree payment ID associated with the order.
	CfPaymentId *int64 `json:"cf_payment_id,omitempty"`
	// Unique identifier for the order.
	OrderId *string `json:"order_id,omitempty"`
	// Currency of the order. Example: \"INR\".
	OrderCurrency *string `json:"order_currency,omitempty"`
	// Unique transfer ID if available, otherwise null.
	TransferId NullableString `json:"transfer_id,omitempty"`
	// Total amount of the order.
	OrderAmount *float32 `json:"order_amount,omitempty"`
	// Service charge for the order.
	ServiceCharge *float32 `json:"service_charge,omitempty"`
	// Service tax for the order.
	ServiceTax *float32 `json:"service_tax,omitempty"`
	// Amount to be settled after charges and tax.
	SettlementAmount *float32 `json:"settlement_amount,omitempty"`
	// Currency of the settlement. Example: \"INR\".
	SettlementCurrency *string `json:"settlement_currency,omitempty"`
	// UTR (Unique Transaction Reference) for the transfer if available, otherwise null.
	TransferUtr NullableString `json:"transfer_utr,omitempty"`
	// Time of transfer if available, otherwise null.
	TransferTime NullableString `json:"transfer_time,omitempty"`
	// Timestamp when payment was made.
	PaymentTime *string `json:"payment_time,omitempty"`
}


func (o SplitOrderReconSuccessResponseSettlement) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SplitOrderReconSuccessResponseSettlement) ToMap() (map[string]interface{}, error) {
	strings.HasPrefix("cf", "cf")
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Entity) {
		toSerialize["entity"] = o.Entity
	}
	if !IsNil(o.CfSettlementId) {
		toSerialize["cf_settlement_id"] = o.CfSettlementId
	}
	if !IsNil(o.CfPaymentId) {
		toSerialize["cf_payment_id"] = o.CfPaymentId
	}
	if !IsNil(o.OrderId) {
		toSerialize["order_id"] = o.OrderId
	}
	if !IsNil(o.OrderCurrency) {
		toSerialize["order_currency"] = o.OrderCurrency
	}
	if o.TransferId.IsSet() {
		toSerialize["transfer_id"] = o.TransferId.Get()
	}
	if !IsNil(o.OrderAmount) {
		toSerialize["order_amount"] = o.OrderAmount
	}
	if !IsNil(o.ServiceCharge) {
		toSerialize["service_charge"] = o.ServiceCharge
	}
	if !IsNil(o.ServiceTax) {
		toSerialize["service_tax"] = o.ServiceTax
	}
	if !IsNil(o.SettlementAmount) {
		toSerialize["settlement_amount"] = o.SettlementAmount
	}
	if !IsNil(o.SettlementCurrency) {
		toSerialize["settlement_currency"] = o.SettlementCurrency
	}
	if o.TransferUtr.IsSet() {
		toSerialize["transfer_utr"] = o.TransferUtr.Get()
	}
	if o.TransferTime.IsSet() {
		toSerialize["transfer_time"] = o.TransferTime.Get()
	}
	if !IsNil(o.PaymentTime) {
		toSerialize["payment_time"] = o.PaymentTime
	}
	return toSerialize, nil
}



