/*
Cashfree Payment Gateway APIs

Cashfree's Payment Gateway APIs provide developers with a streamlined pathway to integrate advanced payment processing capabilities into their applications, platforms and websites.

API version: 2022-09-01
Contact: developers@cashfree.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cashfree_pg

import (
	"encoding/json"
)

// checks if the EMIPlansArray type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &EMIPlansArray{}

// EMIPlansArray Single EMI object
type EMIPlansArray struct {
	Tenure *int32 `json:"tenure,omitempty"`
	InterestRate *float32 `json:"interest_rate,omitempty"`
	Currency *string `json:"currency,omitempty"`
	Emi *int32 `json:"emi,omitempty"`
	TotalInterest *int32 `json:"total_interest,omitempty"`
	TotalAmount *int32 `json:"total_amount,omitempty"`
}

// NewEMIPlansArray instantiates a new EMIPlansArray object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEMIPlansArray() *EMIPlansArray {
	this := EMIPlansArray{}
	return &this
}

// NewEMIPlansArrayWithDefaults instantiates a new EMIPlansArray object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEMIPlansArrayWithDefaults() *EMIPlansArray {
	this := EMIPlansArray{}
	return &this
}

// GetTenure returns the Tenure field value if set, zero value otherwise.
func (o *EMIPlansArray) GetTenure() int32 {
	if o == nil || IsNil(o.Tenure) {
		var ret int32
		return ret
	}
	return *o.Tenure
}

// GetTenureOk returns a tuple with the Tenure field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EMIPlansArray) GetTenureOk() (*int32, bool) {
	if o == nil || IsNil(o.Tenure) {
		return nil, false
	}
	return o.Tenure, true
}

// HasTenure returns a boolean if a field has been set.
func (o *EMIPlansArray) HasTenure() bool {
	if o != nil && !IsNil(o.Tenure) {
		return true
	}

	return false
}

// SetTenure gets a reference to the given int32 and assigns it to the Tenure field.
func (o *EMIPlansArray) SetTenure(v int32) {
	o.Tenure = &v
}

// GetInterestRate returns the InterestRate field value if set, zero value otherwise.
func (o *EMIPlansArray) GetInterestRate() float32 {
	if o == nil || IsNil(o.InterestRate) {
		var ret float32
		return ret
	}
	return *o.InterestRate
}

// GetInterestRateOk returns a tuple with the InterestRate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EMIPlansArray) GetInterestRateOk() (*float32, bool) {
	if o == nil || IsNil(o.InterestRate) {
		return nil, false
	}
	return o.InterestRate, true
}

// HasInterestRate returns a boolean if a field has been set.
func (o *EMIPlansArray) HasInterestRate() bool {
	if o != nil && !IsNil(o.InterestRate) {
		return true
	}

	return false
}

// SetInterestRate gets a reference to the given float32 and assigns it to the InterestRate field.
func (o *EMIPlansArray) SetInterestRate(v float32) {
	o.InterestRate = &v
}

// GetCurrency returns the Currency field value if set, zero value otherwise.
func (o *EMIPlansArray) GetCurrency() string {
	if o == nil || IsNil(o.Currency) {
		var ret string
		return ret
	}
	return *o.Currency
}

// GetCurrencyOk returns a tuple with the Currency field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EMIPlansArray) GetCurrencyOk() (*string, bool) {
	if o == nil || IsNil(o.Currency) {
		return nil, false
	}
	return o.Currency, true
}

// HasCurrency returns a boolean if a field has been set.
func (o *EMIPlansArray) HasCurrency() bool {
	if o != nil && !IsNil(o.Currency) {
		return true
	}

	return false
}

// SetCurrency gets a reference to the given string and assigns it to the Currency field.
func (o *EMIPlansArray) SetCurrency(v string) {
	o.Currency = &v
}

// GetEmi returns the Emi field value if set, zero value otherwise.
func (o *EMIPlansArray) GetEmi() int32 {
	if o == nil || IsNil(o.Emi) {
		var ret int32
		return ret
	}
	return *o.Emi
}

// GetEmiOk returns a tuple with the Emi field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EMIPlansArray) GetEmiOk() (*int32, bool) {
	if o == nil || IsNil(o.Emi) {
		return nil, false
	}
	return o.Emi, true
}

// HasEmi returns a boolean if a field has been set.
func (o *EMIPlansArray) HasEmi() bool {
	if o != nil && !IsNil(o.Emi) {
		return true
	}

	return false
}

// SetEmi gets a reference to the given int32 and assigns it to the Emi field.
func (o *EMIPlansArray) SetEmi(v int32) {
	o.Emi = &v
}

// GetTotalInterest returns the TotalInterest field value if set, zero value otherwise.
func (o *EMIPlansArray) GetTotalInterest() int32 {
	if o == nil || IsNil(o.TotalInterest) {
		var ret int32
		return ret
	}
	return *o.TotalInterest
}

// GetTotalInterestOk returns a tuple with the TotalInterest field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EMIPlansArray) GetTotalInterestOk() (*int32, bool) {
	if o == nil || IsNil(o.TotalInterest) {
		return nil, false
	}
	return o.TotalInterest, true
}

// HasTotalInterest returns a boolean if a field has been set.
func (o *EMIPlansArray) HasTotalInterest() bool {
	if o != nil && !IsNil(o.TotalInterest) {
		return true
	}

	return false
}

// SetTotalInterest gets a reference to the given int32 and assigns it to the TotalInterest field.
func (o *EMIPlansArray) SetTotalInterest(v int32) {
	o.TotalInterest = &v
}

// GetTotalAmount returns the TotalAmount field value if set, zero value otherwise.
func (o *EMIPlansArray) GetTotalAmount() int32 {
	if o == nil || IsNil(o.TotalAmount) {
		var ret int32
		return ret
	}
	return *o.TotalAmount
}

// GetTotalAmountOk returns a tuple with the TotalAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EMIPlansArray) GetTotalAmountOk() (*int32, bool) {
	if o == nil || IsNil(o.TotalAmount) {
		return nil, false
	}
	return o.TotalAmount, true
}

// HasTotalAmount returns a boolean if a field has been set.
func (o *EMIPlansArray) HasTotalAmount() bool {
	if o != nil && !IsNil(o.TotalAmount) {
		return true
	}

	return false
}

// SetTotalAmount gets a reference to the given int32 and assigns it to the TotalAmount field.
func (o *EMIPlansArray) SetTotalAmount(v int32) {
	o.TotalAmount = &v
}

func (o EMIPlansArray) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o EMIPlansArray) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Tenure) {
		toSerialize["tenure"] = o.Tenure
	}
	if !IsNil(o.InterestRate) {
		toSerialize["interest_rate"] = o.InterestRate
	}
	if !IsNil(o.Currency) {
		toSerialize["currency"] = o.Currency
	}
	if !IsNil(o.Emi) {
		toSerialize["emi"] = o.Emi
	}
	if !IsNil(o.TotalInterest) {
		toSerialize["total_interest"] = o.TotalInterest
	}
	if !IsNil(o.TotalAmount) {
		toSerialize["total_amount"] = o.TotalAmount
	}
	return toSerialize, nil
}

type NullableEMIPlansArray struct {
	value *EMIPlansArray
	isSet bool
}

func (v NullableEMIPlansArray) Get() *EMIPlansArray {
	return v.value
}

func (v *NullableEMIPlansArray) Set(val *EMIPlansArray) {
	v.value = val
	v.isSet = true
}

func (v NullableEMIPlansArray) IsSet() bool {
	return v.isSet
}

func (v *NullableEMIPlansArray) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEMIPlansArray(val *EMIPlansArray) *NullableEMIPlansArray {
	return &NullableEMIPlansArray{value: val, isSet: true}
}

func (v NullableEMIPlansArray) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEMIPlansArray) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


