/*
New Payment Gateway APIs

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2022-01-01
Contact: nextgenapi@cashfree.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cashfree_pg_sdk_go

import (
	"encoding/json"
)

// CFAuthorizationRequest struct for CFAuthorizationRequest
type CFAuthorizationRequest struct {
	// Type of authorization to run. Can be one of 'CAPTURE' , 'VOID'
	Action *string `json:"action,omitempty"`
	// The amount if you are running a 'CAPTURE'
	Amount *float32 `json:"amount,omitempty"`
}

// NewCFAuthorizationRequest instantiates a new CFAuthorizationRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCFAuthorizationRequest() *CFAuthorizationRequest {
	this := CFAuthorizationRequest{}
	return &this
}

// NewCFAuthorizationRequestWithDefaults instantiates a new CFAuthorizationRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCFAuthorizationRequestWithDefaults() *CFAuthorizationRequest {
	this := CFAuthorizationRequest{}
	return &this
}

// GetAction returns the Action field value if set, zero value otherwise.
func (o *CFAuthorizationRequest) GetAction() string {
	if o == nil || o.Action == nil {
		var ret string
		return ret
	}
	return *o.Action
}

// GetActionOk returns a tuple with the Action field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CFAuthorizationRequest) GetActionOk() (*string, bool) {
	if o == nil || o.Action == nil {
		return nil, false
	}
	return o.Action, true
}

// HasAction returns a boolean if a field has been set.
func (o *CFAuthorizationRequest) HasAction() bool {
	if o != nil && o.Action != nil {
		return true
	}

	return false
}

// SetAction gets a reference to the given string and assigns it to the Action field.
func (o *CFAuthorizationRequest) SetAction(v string) {
	o.Action = &v
}

// GetAmount returns the Amount field value if set, zero value otherwise.
func (o *CFAuthorizationRequest) GetAmount() float32 {
	if o == nil || o.Amount == nil {
		var ret float32
		return ret
	}
	return *o.Amount
}

// GetAmountOk returns a tuple with the Amount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CFAuthorizationRequest) GetAmountOk() (*float32, bool) {
	if o == nil || o.Amount == nil {
		return nil, false
	}
	return o.Amount, true
}

// HasAmount returns a boolean if a field has been set.
func (o *CFAuthorizationRequest) HasAmount() bool {
	if o != nil && o.Amount != nil {
		return true
	}

	return false
}

// SetAmount gets a reference to the given float32 and assigns it to the Amount field.
func (o *CFAuthorizationRequest) SetAmount(v float32) {
	o.Amount = &v
}

func (o CFAuthorizationRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Action != nil {
		toSerialize["action"] = o.Action
	}
	if o.Amount != nil {
		toSerialize["amount"] = o.Amount
	}
	return json.Marshal(toSerialize)
}

type NullableCFAuthorizationRequest struct {
	value *CFAuthorizationRequest
	isSet bool
}

func (v NullableCFAuthorizationRequest) Get() *CFAuthorizationRequest {
	return v.value
}

func (v *NullableCFAuthorizationRequest) Set(val *CFAuthorizationRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCFAuthorizationRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCFAuthorizationRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCFAuthorizationRequest(val *CFAuthorizationRequest) *NullableCFAuthorizationRequest {
	return &NullableCFAuthorizationRequest{value: val, isSet: true}
}

func (v NullableCFAuthorizationRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCFAuthorizationRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


