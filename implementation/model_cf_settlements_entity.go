/*
New Payment Gateway APIs

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2022-01-01
Contact: nextgenapi@cashfree.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cashfree_pg_sdk_go

import (
	"encoding/json"
)

// CFSettlementsEntity struct for CFSettlementsEntity
type CFSettlementsEntity struct {
	CfPaymentId *string `json:"cf_payment_id,omitempty"`
	CfSettlementId *string `json:"cf_settlement_id,omitempty"`
	SettlementCurrency *string `json:"settlement_currency,omitempty"`
	OrderId *string `json:"order_id,omitempty"`
	Entity *string `json:"entity,omitempty"`
	OrderAmount *float32 `json:"order_amount,omitempty"`
	PaymentTime *string `json:"payment_time,omitempty"`
	ServiceCharge *float32 `json:"service_charge,omitempty"`
	ServiceTax *float32 `json:"service_tax,omitempty"`
	SettlementAmount *float32 `json:"settlement_amount,omitempty"`
	SettlementId *int32 `json:"settlement_id,omitempty"`
	TransferId *int32 `json:"transfer_id,omitempty"`
	TransferTime *string `json:"transfer_time,omitempty"`
	TransferUtr *string `json:"transfer_utr,omitempty"`
}

// NewCFSettlementsEntity instantiates a new CFSettlementsEntity object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCFSettlementsEntity() *CFSettlementsEntity {
	this := CFSettlementsEntity{}
	return &this
}

// NewCFSettlementsEntityWithDefaults instantiates a new CFSettlementsEntity object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCFSettlementsEntityWithDefaults() *CFSettlementsEntity {
	this := CFSettlementsEntity{}
	return &this
}

// GetCfPaymentId returns the CfPaymentId field value if set, zero value otherwise.
func (o *CFSettlementsEntity) GetCfPaymentId() string {
	if o == nil || o.CfPaymentId == nil {
		var ret string
		return ret
	}
	return *o.CfPaymentId
}

// GetCfPaymentIdOk returns a tuple with the CfPaymentId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CFSettlementsEntity) GetCfPaymentIdOk() (*string, bool) {
	if o == nil || o.CfPaymentId == nil {
		return nil, false
	}
	return o.CfPaymentId, true
}

// HasCfPaymentId returns a boolean if a field has been set.
func (o *CFSettlementsEntity) HasCfPaymentId() bool {
	if o != nil && o.CfPaymentId != nil {
		return true
	}

	return false
}

// SetCfPaymentId gets a reference to the given string and assigns it to the CfPaymentId field.
func (o *CFSettlementsEntity) SetCfPaymentId(v string) {
	o.CfPaymentId = &v
}

// GetCfSettlementId returns the CfSettlementId field value if set, zero value otherwise.
func (o *CFSettlementsEntity) GetCfSettlementId() string {
	if o == nil || o.CfSettlementId == nil {
		var ret string
		return ret
	}
	return *o.CfSettlementId
}

// GetCfSettlementIdOk returns a tuple with the CfSettlementId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CFSettlementsEntity) GetCfSettlementIdOk() (*string, bool) {
	if o == nil || o.CfSettlementId == nil {
		return nil, false
	}
	return o.CfSettlementId, true
}

// HasCfSettlementId returns a boolean if a field has been set.
func (o *CFSettlementsEntity) HasCfSettlementId() bool {
	if o != nil && o.CfSettlementId != nil {
		return true
	}

	return false
}

// SetCfSettlementId gets a reference to the given string and assigns it to the CfSettlementId field.
func (o *CFSettlementsEntity) SetCfSettlementId(v string) {
	o.CfSettlementId = &v
}

// GetSettlementCurrency returns the SettlementCurrency field value if set, zero value otherwise.
func (o *CFSettlementsEntity) GetSettlementCurrency() string {
	if o == nil || o.SettlementCurrency == nil {
		var ret string
		return ret
	}
	return *o.SettlementCurrency
}

// GetSettlementCurrencyOk returns a tuple with the SettlementCurrency field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CFSettlementsEntity) GetSettlementCurrencyOk() (*string, bool) {
	if o == nil || o.SettlementCurrency == nil {
		return nil, false
	}
	return o.SettlementCurrency, true
}

// HasSettlementCurrency returns a boolean if a field has been set.
func (o *CFSettlementsEntity) HasSettlementCurrency() bool {
	if o != nil && o.SettlementCurrency != nil {
		return true
	}

	return false
}

// SetSettlementCurrency gets a reference to the given string and assigns it to the SettlementCurrency field.
func (o *CFSettlementsEntity) SetSettlementCurrency(v string) {
	o.SettlementCurrency = &v
}

// GetOrderId returns the OrderId field value if set, zero value otherwise.
func (o *CFSettlementsEntity) GetOrderId() string {
	if o == nil || o.OrderId == nil {
		var ret string
		return ret
	}
	return *o.OrderId
}

// GetOrderIdOk returns a tuple with the OrderId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CFSettlementsEntity) GetOrderIdOk() (*string, bool) {
	if o == nil || o.OrderId == nil {
		return nil, false
	}
	return o.OrderId, true
}

// HasOrderId returns a boolean if a field has been set.
func (o *CFSettlementsEntity) HasOrderId() bool {
	if o != nil && o.OrderId != nil {
		return true
	}

	return false
}

// SetOrderId gets a reference to the given string and assigns it to the OrderId field.
func (o *CFSettlementsEntity) SetOrderId(v string) {
	o.OrderId = &v
}

// GetEntity returns the Entity field value if set, zero value otherwise.
func (o *CFSettlementsEntity) GetEntity() string {
	if o == nil || o.Entity == nil {
		var ret string
		return ret
	}
	return *o.Entity
}

// GetEntityOk returns a tuple with the Entity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CFSettlementsEntity) GetEntityOk() (*string, bool) {
	if o == nil || o.Entity == nil {
		return nil, false
	}
	return o.Entity, true
}

// HasEntity returns a boolean if a field has been set.
func (o *CFSettlementsEntity) HasEntity() bool {
	if o != nil && o.Entity != nil {
		return true
	}

	return false
}

// SetEntity gets a reference to the given string and assigns it to the Entity field.
func (o *CFSettlementsEntity) SetEntity(v string) {
	o.Entity = &v
}

// GetOrderAmount returns the OrderAmount field value if set, zero value otherwise.
func (o *CFSettlementsEntity) GetOrderAmount() float32 {
	if o == nil || o.OrderAmount == nil {
		var ret float32
		return ret
	}
	return *o.OrderAmount
}

// GetOrderAmountOk returns a tuple with the OrderAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CFSettlementsEntity) GetOrderAmountOk() (*float32, bool) {
	if o == nil || o.OrderAmount == nil {
		return nil, false
	}
	return o.OrderAmount, true
}

// HasOrderAmount returns a boolean if a field has been set.
func (o *CFSettlementsEntity) HasOrderAmount() bool {
	if o != nil && o.OrderAmount != nil {
		return true
	}

	return false
}

// SetOrderAmount gets a reference to the given float32 and assigns it to the OrderAmount field.
func (o *CFSettlementsEntity) SetOrderAmount(v float32) {
	o.OrderAmount = &v
}

// GetPaymentTime returns the PaymentTime field value if set, zero value otherwise.
func (o *CFSettlementsEntity) GetPaymentTime() string {
	if o == nil || o.PaymentTime == nil {
		var ret string
		return ret
	}
	return *o.PaymentTime
}

// GetPaymentTimeOk returns a tuple with the PaymentTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CFSettlementsEntity) GetPaymentTimeOk() (*string, bool) {
	if o == nil || o.PaymentTime == nil {
		return nil, false
	}
	return o.PaymentTime, true
}

// HasPaymentTime returns a boolean if a field has been set.
func (o *CFSettlementsEntity) HasPaymentTime() bool {
	if o != nil && o.PaymentTime != nil {
		return true
	}

	return false
}

// SetPaymentTime gets a reference to the given string and assigns it to the PaymentTime field.
func (o *CFSettlementsEntity) SetPaymentTime(v string) {
	o.PaymentTime = &v
}

// GetServiceCharge returns the ServiceCharge field value if set, zero value otherwise.
func (o *CFSettlementsEntity) GetServiceCharge() float32 {
	if o == nil || o.ServiceCharge == nil {
		var ret float32
		return ret
	}
	return *o.ServiceCharge
}

// GetServiceChargeOk returns a tuple with the ServiceCharge field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CFSettlementsEntity) GetServiceChargeOk() (*float32, bool) {
	if o == nil || o.ServiceCharge == nil {
		return nil, false
	}
	return o.ServiceCharge, true
}

// HasServiceCharge returns a boolean if a field has been set.
func (o *CFSettlementsEntity) HasServiceCharge() bool {
	if o != nil && o.ServiceCharge != nil {
		return true
	}

	return false
}

// SetServiceCharge gets a reference to the given float32 and assigns it to the ServiceCharge field.
func (o *CFSettlementsEntity) SetServiceCharge(v float32) {
	o.ServiceCharge = &v
}

// GetServiceTax returns the ServiceTax field value if set, zero value otherwise.
func (o *CFSettlementsEntity) GetServiceTax() float32 {
	if o == nil || o.ServiceTax == nil {
		var ret float32
		return ret
	}
	return *o.ServiceTax
}

// GetServiceTaxOk returns a tuple with the ServiceTax field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CFSettlementsEntity) GetServiceTaxOk() (*float32, bool) {
	if o == nil || o.ServiceTax == nil {
		return nil, false
	}
	return o.ServiceTax, true
}

// HasServiceTax returns a boolean if a field has been set.
func (o *CFSettlementsEntity) HasServiceTax() bool {
	if o != nil && o.ServiceTax != nil {
		return true
	}

	return false
}

// SetServiceTax gets a reference to the given float32 and assigns it to the ServiceTax field.
func (o *CFSettlementsEntity) SetServiceTax(v float32) {
	o.ServiceTax = &v
}

// GetSettlementAmount returns the SettlementAmount field value if set, zero value otherwise.
func (o *CFSettlementsEntity) GetSettlementAmount() float32 {
	if o == nil || o.SettlementAmount == nil {
		var ret float32
		return ret
	}
	return *o.SettlementAmount
}

// GetSettlementAmountOk returns a tuple with the SettlementAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CFSettlementsEntity) GetSettlementAmountOk() (*float32, bool) {
	if o == nil || o.SettlementAmount == nil {
		return nil, false
	}
	return o.SettlementAmount, true
}

// HasSettlementAmount returns a boolean if a field has been set.
func (o *CFSettlementsEntity) HasSettlementAmount() bool {
	if o != nil && o.SettlementAmount != nil {
		return true
	}

	return false
}

// SetSettlementAmount gets a reference to the given float32 and assigns it to the SettlementAmount field.
func (o *CFSettlementsEntity) SetSettlementAmount(v float32) {
	o.SettlementAmount = &v
}

// GetSettlementId returns the SettlementId field value if set, zero value otherwise.
func (o *CFSettlementsEntity) GetSettlementId() int32 {
	if o == nil || o.SettlementId == nil {
		var ret int32
		return ret
	}
	return *o.SettlementId
}

// GetSettlementIdOk returns a tuple with the SettlementId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CFSettlementsEntity) GetSettlementIdOk() (*int32, bool) {
	if o == nil || o.SettlementId == nil {
		return nil, false
	}
	return o.SettlementId, true
}

// HasSettlementId returns a boolean if a field has been set.
func (o *CFSettlementsEntity) HasSettlementId() bool {
	if o != nil && o.SettlementId != nil {
		return true
	}

	return false
}

// SetSettlementId gets a reference to the given int32 and assigns it to the SettlementId field.
func (o *CFSettlementsEntity) SetSettlementId(v int32) {
	o.SettlementId = &v
}

// GetTransferId returns the TransferId field value if set, zero value otherwise.
func (o *CFSettlementsEntity) GetTransferId() int32 {
	if o == nil || o.TransferId == nil {
		var ret int32
		return ret
	}
	return *o.TransferId
}

// GetTransferIdOk returns a tuple with the TransferId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CFSettlementsEntity) GetTransferIdOk() (*int32, bool) {
	if o == nil || o.TransferId == nil {
		return nil, false
	}
	return o.TransferId, true
}

// HasTransferId returns a boolean if a field has been set.
func (o *CFSettlementsEntity) HasTransferId() bool {
	if o != nil && o.TransferId != nil {
		return true
	}

	return false
}

// SetTransferId gets a reference to the given int32 and assigns it to the TransferId field.
func (o *CFSettlementsEntity) SetTransferId(v int32) {
	o.TransferId = &v
}

// GetTransferTime returns the TransferTime field value if set, zero value otherwise.
func (o *CFSettlementsEntity) GetTransferTime() string {
	if o == nil || o.TransferTime == nil {
		var ret string
		return ret
	}
	return *o.TransferTime
}

// GetTransferTimeOk returns a tuple with the TransferTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CFSettlementsEntity) GetTransferTimeOk() (*string, bool) {
	if o == nil || o.TransferTime == nil {
		return nil, false
	}
	return o.TransferTime, true
}

// HasTransferTime returns a boolean if a field has been set.
func (o *CFSettlementsEntity) HasTransferTime() bool {
	if o != nil && o.TransferTime != nil {
		return true
	}

	return false
}

// SetTransferTime gets a reference to the given string and assigns it to the TransferTime field.
func (o *CFSettlementsEntity) SetTransferTime(v string) {
	o.TransferTime = &v
}

// GetTransferUtr returns the TransferUtr field value if set, zero value otherwise.
func (o *CFSettlementsEntity) GetTransferUtr() string {
	if o == nil || o.TransferUtr == nil {
		var ret string
		return ret
	}
	return *o.TransferUtr
}

// GetTransferUtrOk returns a tuple with the TransferUtr field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CFSettlementsEntity) GetTransferUtrOk() (*string, bool) {
	if o == nil || o.TransferUtr == nil {
		return nil, false
	}
	return o.TransferUtr, true
}

// HasTransferUtr returns a boolean if a field has been set.
func (o *CFSettlementsEntity) HasTransferUtr() bool {
	if o != nil && o.TransferUtr != nil {
		return true
	}

	return false
}

// SetTransferUtr gets a reference to the given string and assigns it to the TransferUtr field.
func (o *CFSettlementsEntity) SetTransferUtr(v string) {
	o.TransferUtr = &v
}

func (o CFSettlementsEntity) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.CfPaymentId != nil {
		toSerialize["cf_payment_id"] = o.CfPaymentId
	}
	if o.CfSettlementId != nil {
		toSerialize["cf_settlement_id"] = o.CfSettlementId
	}
	if o.SettlementCurrency != nil {
		toSerialize["settlement_currency"] = o.SettlementCurrency
	}
	if o.OrderId != nil {
		toSerialize["order_id"] = o.OrderId
	}
	if o.Entity != nil {
		toSerialize["entity"] = o.Entity
	}
	if o.OrderAmount != nil {
		toSerialize["order_amount"] = o.OrderAmount
	}
	if o.PaymentTime != nil {
		toSerialize["payment_time"] = o.PaymentTime
	}
	if o.ServiceCharge != nil {
		toSerialize["service_charge"] = o.ServiceCharge
	}
	if o.ServiceTax != nil {
		toSerialize["service_tax"] = o.ServiceTax
	}
	if o.SettlementAmount != nil {
		toSerialize["settlement_amount"] = o.SettlementAmount
	}
	if o.SettlementId != nil {
		toSerialize["settlement_id"] = o.SettlementId
	}
	if o.TransferId != nil {
		toSerialize["transfer_id"] = o.TransferId
	}
	if o.TransferTime != nil {
		toSerialize["transfer_time"] = o.TransferTime
	}
	if o.TransferUtr != nil {
		toSerialize["transfer_utr"] = o.TransferUtr
	}
	return json.Marshal(toSerialize)
}

type NullableCFSettlementsEntity struct {
	value *CFSettlementsEntity
	isSet bool
}

func (v NullableCFSettlementsEntity) Get() *CFSettlementsEntity {
	return v.value
}

func (v *NullableCFSettlementsEntity) Set(val *CFSettlementsEntity) {
	v.value = val
	v.isSet = true
}

func (v NullableCFSettlementsEntity) IsSet() bool {
	return v.isSet
}

func (v *NullableCFSettlementsEntity) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCFSettlementsEntity(val *CFSettlementsEntity) *NullableCFSettlementsEntity {
	return &NullableCFSettlementsEntity{value: val, isSet: true}
}

func (v NullableCFSettlementsEntity) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCFSettlementsEntity) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


