/*
New Payment Gateway APIs

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2022-01-01
Contact: nextgenapi@cashfree.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cashfree_pg_sdk_go

import (
	"encoding/json"
)

// CFLinkMetaEntity struct for CFLinkMetaEntity
type CFLinkMetaEntity struct {
	// Notification URL for server-server communication. It should be an https URL.
	NotifyUrl *string `json:"notify_url,omitempty"`
	// If \"true\", link will directly open UPI Intent flow on mobile, and normal link flow elsewhere
	UpiIntent *bool `json:"upi_intent,omitempty"`
	// The URL to which user will be redirected to after the payment is done on the link. Maximum length: 250.
	ReturnUrl *string `json:"return_url,omitempty"`
	// Allowed payment modes for this link. Pass comma-separated values among following options - \"cc\", \"dc\", \"ccc\", \"ppc\", \"nb\", \"upi\", \"paypal\", \"app\". Leave it blank to show all available payment methods
	PaymentMethods *string `json:"payment_methods,omitempty"`
}

// NewCFLinkMetaEntity instantiates a new CFLinkMetaEntity object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCFLinkMetaEntity() *CFLinkMetaEntity {
	this := CFLinkMetaEntity{}
	return &this
}

// NewCFLinkMetaEntityWithDefaults instantiates a new CFLinkMetaEntity object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCFLinkMetaEntityWithDefaults() *CFLinkMetaEntity {
	this := CFLinkMetaEntity{}
	return &this
}

// GetNotifyUrl returns the NotifyUrl field value if set, zero value otherwise.
func (o *CFLinkMetaEntity) GetNotifyUrl() string {
	if o == nil || o.NotifyUrl == nil {
		var ret string
		return ret
	}
	return *o.NotifyUrl
}

// GetNotifyUrlOk returns a tuple with the NotifyUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CFLinkMetaEntity) GetNotifyUrlOk() (*string, bool) {
	if o == nil || o.NotifyUrl == nil {
		return nil, false
	}
	return o.NotifyUrl, true
}

// HasNotifyUrl returns a boolean if a field has been set.
func (o *CFLinkMetaEntity) HasNotifyUrl() bool {
	if o != nil && o.NotifyUrl != nil {
		return true
	}

	return false
}

// SetNotifyUrl gets a reference to the given string and assigns it to the NotifyUrl field.
func (o *CFLinkMetaEntity) SetNotifyUrl(v string) {
	o.NotifyUrl = &v
}

// GetUpiIntent returns the UpiIntent field value if set, zero value otherwise.
func (o *CFLinkMetaEntity) GetUpiIntent() bool {
	if o == nil || o.UpiIntent == nil {
		var ret bool
		return ret
	}
	return *o.UpiIntent
}

// GetUpiIntentOk returns a tuple with the UpiIntent field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CFLinkMetaEntity) GetUpiIntentOk() (*bool, bool) {
	if o == nil || o.UpiIntent == nil {
		return nil, false
	}
	return o.UpiIntent, true
}

// HasUpiIntent returns a boolean if a field has been set.
func (o *CFLinkMetaEntity) HasUpiIntent() bool {
	if o != nil && o.UpiIntent != nil {
		return true
	}

	return false
}

// SetUpiIntent gets a reference to the given bool and assigns it to the UpiIntent field.
func (o *CFLinkMetaEntity) SetUpiIntent(v bool) {
	o.UpiIntent = &v
}

// GetReturnUrl returns the ReturnUrl field value if set, zero value otherwise.
func (o *CFLinkMetaEntity) GetReturnUrl() string {
	if o == nil || o.ReturnUrl == nil {
		var ret string
		return ret
	}
	return *o.ReturnUrl
}

// GetReturnUrlOk returns a tuple with the ReturnUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CFLinkMetaEntity) GetReturnUrlOk() (*string, bool) {
	if o == nil || o.ReturnUrl == nil {
		return nil, false
	}
	return o.ReturnUrl, true
}

// HasReturnUrl returns a boolean if a field has been set.
func (o *CFLinkMetaEntity) HasReturnUrl() bool {
	if o != nil && o.ReturnUrl != nil {
		return true
	}

	return false
}

// SetReturnUrl gets a reference to the given string and assigns it to the ReturnUrl field.
func (o *CFLinkMetaEntity) SetReturnUrl(v string) {
	o.ReturnUrl = &v
}

// GetPaymentMethods returns the PaymentMethods field value if set, zero value otherwise.
func (o *CFLinkMetaEntity) GetPaymentMethods() string {
	if o == nil || o.PaymentMethods == nil {
		var ret string
		return ret
	}
	return *o.PaymentMethods
}

// GetPaymentMethodsOk returns a tuple with the PaymentMethods field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CFLinkMetaEntity) GetPaymentMethodsOk() (*string, bool) {
	if o == nil || o.PaymentMethods == nil {
		return nil, false
	}
	return o.PaymentMethods, true
}

// HasPaymentMethods returns a boolean if a field has been set.
func (o *CFLinkMetaEntity) HasPaymentMethods() bool {
	if o != nil && o.PaymentMethods != nil {
		return true
	}

	return false
}

// SetPaymentMethods gets a reference to the given string and assigns it to the PaymentMethods field.
func (o *CFLinkMetaEntity) SetPaymentMethods(v string) {
	o.PaymentMethods = &v
}

func (o CFLinkMetaEntity) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.NotifyUrl != nil {
		toSerialize["notify_url"] = o.NotifyUrl
	}
	if o.UpiIntent != nil {
		toSerialize["upi_intent"] = o.UpiIntent
	}
	if o.ReturnUrl != nil {
		toSerialize["return_url"] = o.ReturnUrl
	}
	if o.PaymentMethods != nil {
		toSerialize["payment_methods"] = o.PaymentMethods
	}
	return json.Marshal(toSerialize)
}

type NullableCFLinkMetaEntity struct {
	value *CFLinkMetaEntity
	isSet bool
}

func (v NullableCFLinkMetaEntity) Get() *CFLinkMetaEntity {
	return v.value
}

func (v *NullableCFLinkMetaEntity) Set(val *CFLinkMetaEntity) {
	v.value = val
	v.isSet = true
}

func (v NullableCFLinkMetaEntity) IsSet() bool {
	return v.isSet
}

func (v *NullableCFLinkMetaEntity) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCFLinkMetaEntity(val *CFLinkMetaEntity) *NullableCFLinkMetaEntity {
	return &NullableCFLinkMetaEntity{value: val, isSet: true}
}

func (v NullableCFLinkMetaEntity) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCFLinkMetaEntity) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


