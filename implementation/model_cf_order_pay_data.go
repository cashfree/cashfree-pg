/*
New Payment Gateway APIs

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2022-01-01
Contact: nextgenapi@cashfree.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cashfree_pg_sdk_go

import (
	"encoding/json"
)

// CFOrderPayData struct for CFOrderPayData
type CFOrderPayData struct {
	Url NullableString `json:"url,omitempty"`
	Payload map[string]interface{} `json:"payload,omitempty"`
	ContentType *string `json:"content_type,omitempty"`
	Method *string `json:"method,omitempty"`
}

// NewCFOrderPayData instantiates a new CFOrderPayData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCFOrderPayData() *CFOrderPayData {
	this := CFOrderPayData{}
	return &this
}

// NewCFOrderPayDataWithDefaults instantiates a new CFOrderPayData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCFOrderPayDataWithDefaults() *CFOrderPayData {
	this := CFOrderPayData{}
	return &this
}

// GetUrl returns the Url field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CFOrderPayData) GetUrl() string {
	if o == nil || o.Url.Get() == nil {
		var ret string
		return ret
	}
	return *o.Url.Get()
}

// GetUrlOk returns a tuple with the Url field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CFOrderPayData) GetUrlOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Url.Get(), o.Url.IsSet()
}

// HasUrl returns a boolean if a field has been set.
func (o *CFOrderPayData) HasUrl() bool {
	if o != nil && o.Url.IsSet() {
		return true
	}

	return false
}

// SetUrl gets a reference to the given NullableString and assigns it to the Url field.
func (o *CFOrderPayData) SetUrl(v string) {
	o.Url.Set(&v)
}
// SetUrlNil sets the value for Url to be an explicit nil
func (o *CFOrderPayData) SetUrlNil() {
	o.Url.Set(nil)
}

// UnsetUrl ensures that no value is present for Url, not even an explicit nil
func (o *CFOrderPayData) UnsetUrl() {
	o.Url.Unset()
}

// GetPayload returns the Payload field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CFOrderPayData) GetPayload() map[string]interface{} {
	if o == nil  {
		var ret map[string]interface{}
		return ret
	}
	return o.Payload
}

// GetPayloadOk returns a tuple with the Payload field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CFOrderPayData) GetPayloadOk() (map[string]interface{}, bool) {
	if o == nil || o.Payload == nil {
		return nil, false
	}
	return o.Payload, true
}

// HasPayload returns a boolean if a field has been set.
func (o *CFOrderPayData) HasPayload() bool {
	if o != nil && o.Payload != nil {
		return true
	}

	return false
}

// SetPayload gets a reference to the given map[string]interface{} and assigns it to the Payload field.
func (o *CFOrderPayData) SetPayload(v map[string]interface{}) {
	o.Payload = v
}

// GetContentType returns the ContentType field value if set, zero value otherwise.
func (o *CFOrderPayData) GetContentType() string {
	if o == nil || o.ContentType == nil {
		var ret string
		return ret
	}
	return *o.ContentType
}

// GetContentTypeOk returns a tuple with the ContentType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CFOrderPayData) GetContentTypeOk() (*string, bool) {
	if o == nil || o.ContentType == nil {
		return nil, false
	}
	return o.ContentType, true
}

// HasContentType returns a boolean if a field has been set.
func (o *CFOrderPayData) HasContentType() bool {
	if o != nil && o.ContentType != nil {
		return true
	}

	return false
}

// SetContentType gets a reference to the given string and assigns it to the ContentType field.
func (o *CFOrderPayData) SetContentType(v string) {
	o.ContentType = &v
}

// GetMethod returns the Method field value if set, zero value otherwise.
func (o *CFOrderPayData) GetMethod() string {
	if o == nil || o.Method == nil {
		var ret string
		return ret
	}
	return *o.Method
}

// GetMethodOk returns a tuple with the Method field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CFOrderPayData) GetMethodOk() (*string, bool) {
	if o == nil || o.Method == nil {
		return nil, false
	}
	return o.Method, true
}

// HasMethod returns a boolean if a field has been set.
func (o *CFOrderPayData) HasMethod() bool {
	if o != nil && o.Method != nil {
		return true
	}

	return false
}

// SetMethod gets a reference to the given string and assigns it to the Method field.
func (o *CFOrderPayData) SetMethod(v string) {
	o.Method = &v
}

func (o CFOrderPayData) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Url.IsSet() {
		toSerialize["url"] = o.Url.Get()
	}
	if o.Payload != nil {
		toSerialize["payload"] = o.Payload
	}
	if o.ContentType != nil {
		toSerialize["content_type"] = o.ContentType
	}
	if o.Method != nil {
		toSerialize["method"] = o.Method
	}
	return json.Marshal(toSerialize)
}

type NullableCFOrderPayData struct {
	value *CFOrderPayData
	isSet bool
}

func (v NullableCFOrderPayData) Get() *CFOrderPayData {
	return v.value
}

func (v *NullableCFOrderPayData) Set(val *CFOrderPayData) {
	v.value = val
	v.isSet = true
}

func (v NullableCFOrderPayData) IsSet() bool {
	return v.isSet
}

func (v *NullableCFOrderPayData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCFOrderPayData(val *CFOrderPayData) *NullableCFOrderPayData {
	return &NullableCFOrderPayData{value: val, isSet: true}
}

func (v NullableCFOrderPayData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCFOrderPayData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


