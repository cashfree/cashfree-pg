/*
New Payment Gateway APIs

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2022-01-01
Contact: nextgenapi@cashfree.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cashfree_pg_sdk_go

import (
	"encoding/json"
)

// CFPaymentsEntity struct for CFPaymentsEntity
type CFPaymentsEntity struct {
	CfPaymentId *int32 `json:"cf_payment_id,omitempty"`
	OrderId *string `json:"order_id,omitempty"`
	Entity *string `json:"entity,omitempty"`
	IsCaptured *bool `json:"is_captured,omitempty"`
	// Order amount can be different from payment amount if you collect service fee from the customer
	OrderAmount *float32 `json:"order_amount,omitempty"`
	// Type of payment group. One of ['upi', 'card', 'app', 'netbanking', 'paylater', 'cardless_emi']
	PaymentGroup *string `json:"payment_group,omitempty"`
	PaymentCurrency *string `json:"payment_currency,omitempty"`
	PaymentAmount *float32 `json:"payment_amount,omitempty"`
	PaymentTime *string `json:"payment_time,omitempty"`
	// The transaction status can be one of  [\"SUCCESS\", \"NOT_ATTEMPTED\", \"FAILED\", \"USER_DROPPED\", \"VOID\", \"CANCELLED\", \"PENDING\"]
	PaymentStatus *string `json:"payment_status,omitempty"`
	PaymentMessage *string `json:"payment_message,omitempty"`
	BankReference *string `json:"bank_reference,omitempty"`
	AuthId *string `json:"auth_id,omitempty"`
	Authorization *CFAuthorizationInPaymentsEntity `json:"authorization,omitempty"`
	PaymentMethod *CFPaymentsEntityPayment `json:"payment_method,omitempty"`
}

// NewCFPaymentsEntity instantiates a new CFPaymentsEntity object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCFPaymentsEntity() *CFPaymentsEntity {
	this := CFPaymentsEntity{}
	return &this
}

// NewCFPaymentsEntityWithDefaults instantiates a new CFPaymentsEntity object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCFPaymentsEntityWithDefaults() *CFPaymentsEntity {
	this := CFPaymentsEntity{}
	return &this
}

// GetCfPaymentId returns the CfPaymentId field value if set, zero value otherwise.
func (o *CFPaymentsEntity) GetCfPaymentId() int32 {
	if o == nil || o.CfPaymentId == nil {
		var ret int32
		return ret
	}
	return *o.CfPaymentId
}

// GetCfPaymentIdOk returns a tuple with the CfPaymentId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CFPaymentsEntity) GetCfPaymentIdOk() (*int32, bool) {
	if o == nil || o.CfPaymentId == nil {
		return nil, false
	}
	return o.CfPaymentId, true
}

// HasCfPaymentId returns a boolean if a field has been set.
func (o *CFPaymentsEntity) HasCfPaymentId() bool {
	if o != nil && o.CfPaymentId != nil {
		return true
	}

	return false
}

// SetCfPaymentId gets a reference to the given int32 and assigns it to the CfPaymentId field.
func (o *CFPaymentsEntity) SetCfPaymentId(v int32) {
	o.CfPaymentId = &v
}

// GetOrderId returns the OrderId field value if set, zero value otherwise.
func (o *CFPaymentsEntity) GetOrderId() string {
	if o == nil || o.OrderId == nil {
		var ret string
		return ret
	}
	return *o.OrderId
}

// GetOrderIdOk returns a tuple with the OrderId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CFPaymentsEntity) GetOrderIdOk() (*string, bool) {
	if o == nil || o.OrderId == nil {
		return nil, false
	}
	return o.OrderId, true
}

// HasOrderId returns a boolean if a field has been set.
func (o *CFPaymentsEntity) HasOrderId() bool {
	if o != nil && o.OrderId != nil {
		return true
	}

	return false
}

// SetOrderId gets a reference to the given string and assigns it to the OrderId field.
func (o *CFPaymentsEntity) SetOrderId(v string) {
	o.OrderId = &v
}

// GetEntity returns the Entity field value if set, zero value otherwise.
func (o *CFPaymentsEntity) GetEntity() string {
	if o == nil || o.Entity == nil {
		var ret string
		return ret
	}
	return *o.Entity
}

// GetEntityOk returns a tuple with the Entity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CFPaymentsEntity) GetEntityOk() (*string, bool) {
	if o == nil || o.Entity == nil {
		return nil, false
	}
	return o.Entity, true
}

// HasEntity returns a boolean if a field has been set.
func (o *CFPaymentsEntity) HasEntity() bool {
	if o != nil && o.Entity != nil {
		return true
	}

	return false
}

// SetEntity gets a reference to the given string and assigns it to the Entity field.
func (o *CFPaymentsEntity) SetEntity(v string) {
	o.Entity = &v
}

// GetIsCaptured returns the IsCaptured field value if set, zero value otherwise.
func (o *CFPaymentsEntity) GetIsCaptured() bool {
	if o == nil || o.IsCaptured == nil {
		var ret bool
		return ret
	}
	return *o.IsCaptured
}

// GetIsCapturedOk returns a tuple with the IsCaptured field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CFPaymentsEntity) GetIsCapturedOk() (*bool, bool) {
	if o == nil || o.IsCaptured == nil {
		return nil, false
	}
	return o.IsCaptured, true
}

// HasIsCaptured returns a boolean if a field has been set.
func (o *CFPaymentsEntity) HasIsCaptured() bool {
	if o != nil && o.IsCaptured != nil {
		return true
	}

	return false
}

// SetIsCaptured gets a reference to the given bool and assigns it to the IsCaptured field.
func (o *CFPaymentsEntity) SetIsCaptured(v bool) {
	o.IsCaptured = &v
}

// GetOrderAmount returns the OrderAmount field value if set, zero value otherwise.
func (o *CFPaymentsEntity) GetOrderAmount() float32 {
	if o == nil || o.OrderAmount == nil {
		var ret float32
		return ret
	}
	return *o.OrderAmount
}

// GetOrderAmountOk returns a tuple with the OrderAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CFPaymentsEntity) GetOrderAmountOk() (*float32, bool) {
	if o == nil || o.OrderAmount == nil {
		return nil, false
	}
	return o.OrderAmount, true
}

// HasOrderAmount returns a boolean if a field has been set.
func (o *CFPaymentsEntity) HasOrderAmount() bool {
	if o != nil && o.OrderAmount != nil {
		return true
	}

	return false
}

// SetOrderAmount gets a reference to the given float32 and assigns it to the OrderAmount field.
func (o *CFPaymentsEntity) SetOrderAmount(v float32) {
	o.OrderAmount = &v
}

// GetPaymentGroup returns the PaymentGroup field value if set, zero value otherwise.
func (o *CFPaymentsEntity) GetPaymentGroup() string {
	if o == nil || o.PaymentGroup == nil {
		var ret string
		return ret
	}
	return *o.PaymentGroup
}

// GetPaymentGroupOk returns a tuple with the PaymentGroup field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CFPaymentsEntity) GetPaymentGroupOk() (*string, bool) {
	if o == nil || o.PaymentGroup == nil {
		return nil, false
	}
	return o.PaymentGroup, true
}

// HasPaymentGroup returns a boolean if a field has been set.
func (o *CFPaymentsEntity) HasPaymentGroup() bool {
	if o != nil && o.PaymentGroup != nil {
		return true
	}

	return false
}

// SetPaymentGroup gets a reference to the given string and assigns it to the PaymentGroup field.
func (o *CFPaymentsEntity) SetPaymentGroup(v string) {
	o.PaymentGroup = &v
}

// GetPaymentCurrency returns the PaymentCurrency field value if set, zero value otherwise.
func (o *CFPaymentsEntity) GetPaymentCurrency() string {
	if o == nil || o.PaymentCurrency == nil {
		var ret string
		return ret
	}
	return *o.PaymentCurrency
}

// GetPaymentCurrencyOk returns a tuple with the PaymentCurrency field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CFPaymentsEntity) GetPaymentCurrencyOk() (*string, bool) {
	if o == nil || o.PaymentCurrency == nil {
		return nil, false
	}
	return o.PaymentCurrency, true
}

// HasPaymentCurrency returns a boolean if a field has been set.
func (o *CFPaymentsEntity) HasPaymentCurrency() bool {
	if o != nil && o.PaymentCurrency != nil {
		return true
	}

	return false
}

// SetPaymentCurrency gets a reference to the given string and assigns it to the PaymentCurrency field.
func (o *CFPaymentsEntity) SetPaymentCurrency(v string) {
	o.PaymentCurrency = &v
}

// GetPaymentAmount returns the PaymentAmount field value if set, zero value otherwise.
func (o *CFPaymentsEntity) GetPaymentAmount() float32 {
	if o == nil || o.PaymentAmount == nil {
		var ret float32
		return ret
	}
	return *o.PaymentAmount
}

// GetPaymentAmountOk returns a tuple with the PaymentAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CFPaymentsEntity) GetPaymentAmountOk() (*float32, bool) {
	if o == nil || o.PaymentAmount == nil {
		return nil, false
	}
	return o.PaymentAmount, true
}

// HasPaymentAmount returns a boolean if a field has been set.
func (o *CFPaymentsEntity) HasPaymentAmount() bool {
	if o != nil && o.PaymentAmount != nil {
		return true
	}

	return false
}

// SetPaymentAmount gets a reference to the given float32 and assigns it to the PaymentAmount field.
func (o *CFPaymentsEntity) SetPaymentAmount(v float32) {
	o.PaymentAmount = &v
}

// GetPaymentTime returns the PaymentTime field value if set, zero value otherwise.
func (o *CFPaymentsEntity) GetPaymentTime() string {
	if o == nil || o.PaymentTime == nil {
		var ret string
		return ret
	}
	return *o.PaymentTime
}

// GetPaymentTimeOk returns a tuple with the PaymentTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CFPaymentsEntity) GetPaymentTimeOk() (*string, bool) {
	if o == nil || o.PaymentTime == nil {
		return nil, false
	}
	return o.PaymentTime, true
}

// HasPaymentTime returns a boolean if a field has been set.
func (o *CFPaymentsEntity) HasPaymentTime() bool {
	if o != nil && o.PaymentTime != nil {
		return true
	}

	return false
}

// SetPaymentTime gets a reference to the given string and assigns it to the PaymentTime field.
func (o *CFPaymentsEntity) SetPaymentTime(v string) {
	o.PaymentTime = &v
}

// GetPaymentStatus returns the PaymentStatus field value if set, zero value otherwise.
func (o *CFPaymentsEntity) GetPaymentStatus() string {
	if o == nil || o.PaymentStatus == nil {
		var ret string
		return ret
	}
	return *o.PaymentStatus
}

// GetPaymentStatusOk returns a tuple with the PaymentStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CFPaymentsEntity) GetPaymentStatusOk() (*string, bool) {
	if o == nil || o.PaymentStatus == nil {
		return nil, false
	}
	return o.PaymentStatus, true
}

// HasPaymentStatus returns a boolean if a field has been set.
func (o *CFPaymentsEntity) HasPaymentStatus() bool {
	if o != nil && o.PaymentStatus != nil {
		return true
	}

	return false
}

// SetPaymentStatus gets a reference to the given string and assigns it to the PaymentStatus field.
func (o *CFPaymentsEntity) SetPaymentStatus(v string) {
	o.PaymentStatus = &v
}

// GetPaymentMessage returns the PaymentMessage field value if set, zero value otherwise.
func (o *CFPaymentsEntity) GetPaymentMessage() string {
	if o == nil || o.PaymentMessage == nil {
		var ret string
		return ret
	}
	return *o.PaymentMessage
}

// GetPaymentMessageOk returns a tuple with the PaymentMessage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CFPaymentsEntity) GetPaymentMessageOk() (*string, bool) {
	if o == nil || o.PaymentMessage == nil {
		return nil, false
	}
	return o.PaymentMessage, true
}

// HasPaymentMessage returns a boolean if a field has been set.
func (o *CFPaymentsEntity) HasPaymentMessage() bool {
	if o != nil && o.PaymentMessage != nil {
		return true
	}

	return false
}

// SetPaymentMessage gets a reference to the given string and assigns it to the PaymentMessage field.
func (o *CFPaymentsEntity) SetPaymentMessage(v string) {
	o.PaymentMessage = &v
}

// GetBankReference returns the BankReference field value if set, zero value otherwise.
func (o *CFPaymentsEntity) GetBankReference() string {
	if o == nil || o.BankReference == nil {
		var ret string
		return ret
	}
	return *o.BankReference
}

// GetBankReferenceOk returns a tuple with the BankReference field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CFPaymentsEntity) GetBankReferenceOk() (*string, bool) {
	if o == nil || o.BankReference == nil {
		return nil, false
	}
	return o.BankReference, true
}

// HasBankReference returns a boolean if a field has been set.
func (o *CFPaymentsEntity) HasBankReference() bool {
	if o != nil && o.BankReference != nil {
		return true
	}

	return false
}

// SetBankReference gets a reference to the given string and assigns it to the BankReference field.
func (o *CFPaymentsEntity) SetBankReference(v string) {
	o.BankReference = &v
}

// GetAuthId returns the AuthId field value if set, zero value otherwise.
func (o *CFPaymentsEntity) GetAuthId() string {
	if o == nil || o.AuthId == nil {
		var ret string
		return ret
	}
	return *o.AuthId
}

// GetAuthIdOk returns a tuple with the AuthId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CFPaymentsEntity) GetAuthIdOk() (*string, bool) {
	if o == nil || o.AuthId == nil {
		return nil, false
	}
	return o.AuthId, true
}

// HasAuthId returns a boolean if a field has been set.
func (o *CFPaymentsEntity) HasAuthId() bool {
	if o != nil && o.AuthId != nil {
		return true
	}

	return false
}

// SetAuthId gets a reference to the given string and assigns it to the AuthId field.
func (o *CFPaymentsEntity) SetAuthId(v string) {
	o.AuthId = &v
}

// GetAuthorization returns the Authorization field value if set, zero value otherwise.
func (o *CFPaymentsEntity) GetAuthorization() CFAuthorizationInPaymentsEntity {
	if o == nil || o.Authorization == nil {
		var ret CFAuthorizationInPaymentsEntity
		return ret
	}
	return *o.Authorization
}

// GetAuthorizationOk returns a tuple with the Authorization field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CFPaymentsEntity) GetAuthorizationOk() (*CFAuthorizationInPaymentsEntity, bool) {
	if o == nil || o.Authorization == nil {
		return nil, false
	}
	return o.Authorization, true
}

// HasAuthorization returns a boolean if a field has been set.
func (o *CFPaymentsEntity) HasAuthorization() bool {
	if o != nil && o.Authorization != nil {
		return true
	}

	return false
}

// SetAuthorization gets a reference to the given CFAuthorizationInPaymentsEntity and assigns it to the Authorization field.
func (o *CFPaymentsEntity) SetAuthorization(v CFAuthorizationInPaymentsEntity) {
	o.Authorization = &v
}

// GetPaymentMethod returns the PaymentMethod field value if set, zero value otherwise.
func (o *CFPaymentsEntity) GetPaymentMethod() CFPaymentsEntityPayment {
	if o == nil || o.PaymentMethod == nil {
		var ret CFPaymentsEntityPayment
		return ret
	}
	return *o.PaymentMethod
}

// GetPaymentMethodOk returns a tuple with the PaymentMethod field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CFPaymentsEntity) GetPaymentMethodOk() (*CFPaymentsEntityPayment, bool) {
	if o == nil || o.PaymentMethod == nil {
		return nil, false
	}
	return o.PaymentMethod, true
}

// HasPaymentMethod returns a boolean if a field has been set.
func (o *CFPaymentsEntity) HasPaymentMethod() bool {
	if o != nil && o.PaymentMethod != nil {
		return true
	}

	return false
}

// SetPaymentMethod gets a reference to the given CFPaymentsEntityPayment and assigns it to the PaymentMethod field.
func (o *CFPaymentsEntity) SetPaymentMethod(v CFPaymentsEntityPayment) {
	o.PaymentMethod = &v
}

func (o CFPaymentsEntity) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.CfPaymentId != nil {
		toSerialize["cf_payment_id"] = o.CfPaymentId
	}
	if o.OrderId != nil {
		toSerialize["order_id"] = o.OrderId
	}
	if o.Entity != nil {
		toSerialize["entity"] = o.Entity
	}
	if o.IsCaptured != nil {
		toSerialize["is_captured"] = o.IsCaptured
	}
	if o.OrderAmount != nil {
		toSerialize["order_amount"] = o.OrderAmount
	}
	if o.PaymentGroup != nil {
		toSerialize["payment_group"] = o.PaymentGroup
	}
	if o.PaymentCurrency != nil {
		toSerialize["payment_currency"] = o.PaymentCurrency
	}
	if o.PaymentAmount != nil {
		toSerialize["payment_amount"] = o.PaymentAmount
	}
	if o.PaymentTime != nil {
		toSerialize["payment_time"] = o.PaymentTime
	}
	if o.PaymentStatus != nil {
		toSerialize["payment_status"] = o.PaymentStatus
	}
	if o.PaymentMessage != nil {
		toSerialize["payment_message"] = o.PaymentMessage
	}
	if o.BankReference != nil {
		toSerialize["bank_reference"] = o.BankReference
	}
	if o.AuthId != nil {
		toSerialize["auth_id"] = o.AuthId
	}
	if o.Authorization != nil {
		toSerialize["authorization"] = o.Authorization
	}
	if o.PaymentMethod != nil {
		toSerialize["payment_method"] = o.PaymentMethod
	}
	return json.Marshal(toSerialize)
}

type NullableCFPaymentsEntity struct {
	value *CFPaymentsEntity
	isSet bool
}

func (v NullableCFPaymentsEntity) Get() *CFPaymentsEntity {
	return v.value
}

func (v *NullableCFPaymentsEntity) Set(val *CFPaymentsEntity) {
	v.value = val
	v.isSet = true
}

func (v NullableCFPaymentsEntity) IsSet() bool {
	return v.isSet
}

func (v *NullableCFPaymentsEntity) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCFPaymentsEntity(val *CFPaymentsEntity) *NullableCFPaymentsEntity {
	return &NullableCFPaymentsEntity{value: val, isSet: true}
}

func (v NullableCFPaymentsEntity) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCFPaymentsEntity) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


