/*
New Payment Gateway APIs

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2022-01-01
Contact: nextgenapi@cashfree.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cashfree_pg_sdk_go

import (
	"encoding/json"
)

// CFOrderMeta struct for CFOrderMeta
type CFOrderMeta struct {
	// The URL to which user will be redirected to after the payment on bank OTP page. Maximum length: 250.
	ReturnUrl string `json:"return_url"`
	// Notification URL for server-server communication. Useful when user's connection drops while re-directing. NotifyUrl should be an https URL. Maximum length: 250.
	NotifyUrl string `json:"notify_url"`
	// Allowed payment modes for this order. Pass comma-separated values among following options - \"cc\", \"dc\", \"ccc\", \"ppc\", \"nb\", \"upi\", \"paypal\", \"app\". Leave it blank to show all available payment methods
	PaymentMethods string `json:"payment_methods"`
}

// NewCFOrderMeta instantiates a new CFOrderMeta object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCFOrderMeta(returnUrl string, notifyUrl string, paymentMethods string) *CFOrderMeta {
	this := CFOrderMeta{}
	this.ReturnUrl = returnUrl
	this.NotifyUrl = notifyUrl
	this.PaymentMethods = paymentMethods
	return &this
}

// NewCFOrderMetaWithDefaults instantiates a new CFOrderMeta object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCFOrderMetaWithDefaults() *CFOrderMeta {
	this := CFOrderMeta{}
	return &this
}

// GetReturnUrl returns the ReturnUrl field value
func (o *CFOrderMeta) GetReturnUrl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ReturnUrl
}

// GetReturnUrlOk returns a tuple with the ReturnUrl field value
// and a boolean to check if the value has been set.
func (o *CFOrderMeta) GetReturnUrlOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.ReturnUrl, true
}

// SetReturnUrl sets field value
func (o *CFOrderMeta) SetReturnUrl(v string) {
	o.ReturnUrl = v
}

// GetNotifyUrl returns the NotifyUrl field value
func (o *CFOrderMeta) GetNotifyUrl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.NotifyUrl
}

// GetNotifyUrlOk returns a tuple with the NotifyUrl field value
// and a boolean to check if the value has been set.
func (o *CFOrderMeta) GetNotifyUrlOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.NotifyUrl, true
}

// SetNotifyUrl sets field value
func (o *CFOrderMeta) SetNotifyUrl(v string) {
	o.NotifyUrl = v
}

// GetPaymentMethods returns the PaymentMethods field value
func (o *CFOrderMeta) GetPaymentMethods() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.PaymentMethods
}

// GetPaymentMethodsOk returns a tuple with the PaymentMethods field value
// and a boolean to check if the value has been set.
func (o *CFOrderMeta) GetPaymentMethodsOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.PaymentMethods, true
}

// SetPaymentMethods sets field value
func (o *CFOrderMeta) SetPaymentMethods(v string) {
	o.PaymentMethods = v
}

func (o CFOrderMeta) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["return_url"] = o.ReturnUrl
	}
	if true {
		toSerialize["notify_url"] = o.NotifyUrl
	}
	if true {
		toSerialize["payment_methods"] = o.PaymentMethods
	}
	return json.Marshal(toSerialize)
}

type NullableCFOrderMeta struct {
	value *CFOrderMeta
	isSet bool
}

func (v NullableCFOrderMeta) Get() *CFOrderMeta {
	return v.value
}

func (v *NullableCFOrderMeta) Set(val *CFOrderMeta) {
	v.value = val
	v.isSet = true
}

func (v NullableCFOrderMeta) IsSet() bool {
	return v.isSet
}

func (v *NullableCFOrderMeta) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCFOrderMeta(val *CFOrderMeta) *NullableCFOrderMeta {
	return &NullableCFOrderMeta{value: val, isSet: true}
}

func (v NullableCFOrderMeta) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCFOrderMeta) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


