/*
New Payment Gateway APIs

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2022-01-01
Contact: nextgenapi@cashfree.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cashfree_pg_sdk_go

import (
	"encoding/json"
)

// CFCard struct for CFCard
type CFCard struct {
	// The channel for card payments will always be \"link\"
	Channel string `json:"channel"`
	// Customer card number for plain card transactions. Token pan number for tokenized card transactions.
	CardNumber string `json:"card_number"`
	// Customer name mentioned on the card.
	CardHolderName string `json:"card_holder_name"`
	// Card expiry month for plain card transactions. Token expiry month for tokenized card transactions.
	CardExpiryMm string `json:"card_expiry_mm"`
	// Card expiry year for plain card transactions. Token expiry year for tokenized card transactions.
	CardExpiryYy string `json:"card_expiry_yy"`
	// CVV mentioned on the card.
	CardCvv string `json:"card_cvv"`
	// instrument id of saved card. Required only to make payment using saved instrument.
	InstrumentId string `json:"instrument_id"`
	// cryptogram received from card network. Required only for tokenized card transactions.
	Cryptogram string `json:"cryptogram"`
	// TRID issued by card networks. Required only for tokenized card transactions.
	TokenRequestorId string `json:"token_requestor_id"`
	// last 4 digits of original card number. Required only for tokenized card transactions.
	CardDisplay string `json:"card_display"`
	// Card alias as returned by Cashfree Vault API.
	CardAlias string `json:"card_alias"`
	// One of [\"Kotak\", \"ICICI\", \"RBL\", \"BOB\", \"Standard Chartered\"]. Card bank name, required for EMI payments. This is the bank user has selected for EMI
	CardBankName string `json:"card_bank_name"`
	// EMI tenure selected by the user
	EmiTenure int32 `json:"emi_tenure"`
}

// NewCFCard instantiates a new CFCard object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCFCard(channel string, cardNumber string, cardHolderName string, cardExpiryMm string, cardExpiryYy string, cardCvv string, instrumentId string, cryptogram string, tokenRequestorId string, cardDisplay string, cardAlias string, cardBankName string, emiTenure int32) *CFCard {
	this := CFCard{}
	this.Channel = channel
	this.CardNumber = cardNumber
	this.CardHolderName = cardHolderName
	this.CardExpiryMm = cardExpiryMm
	this.CardExpiryYy = cardExpiryYy
	this.CardCvv = cardCvv
	this.InstrumentId = instrumentId
	this.Cryptogram = cryptogram
	this.TokenRequestorId = tokenRequestorId
	this.CardDisplay = cardDisplay
	this.CardAlias = cardAlias
	this.CardBankName = cardBankName
	this.EmiTenure = emiTenure
	return &this
}

// NewCFCardWithDefaults instantiates a new CFCard object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCFCardWithDefaults() *CFCard {
	this := CFCard{}
	return &this
}

// GetChannel returns the Channel field value
func (o *CFCard) GetChannel() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Channel
}

// GetChannelOk returns a tuple with the Channel field value
// and a boolean to check if the value has been set.
func (o *CFCard) GetChannelOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Channel, true
}

// SetChannel sets field value
func (o *CFCard) SetChannel(v string) {
	o.Channel = v
}

// GetCardNumber returns the CardNumber field value
func (o *CFCard) GetCardNumber() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CardNumber
}

// GetCardNumberOk returns a tuple with the CardNumber field value
// and a boolean to check if the value has been set.
func (o *CFCard) GetCardNumberOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.CardNumber, true
}

// SetCardNumber sets field value
func (o *CFCard) SetCardNumber(v string) {
	o.CardNumber = v
}

// GetCardHolderName returns the CardHolderName field value
func (o *CFCard) GetCardHolderName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CardHolderName
}

// GetCardHolderNameOk returns a tuple with the CardHolderName field value
// and a boolean to check if the value has been set.
func (o *CFCard) GetCardHolderNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.CardHolderName, true
}

// SetCardHolderName sets field value
func (o *CFCard) SetCardHolderName(v string) {
	o.CardHolderName = v
}

// GetCardExpiryMm returns the CardExpiryMm field value
func (o *CFCard) GetCardExpiryMm() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CardExpiryMm
}

// GetCardExpiryMmOk returns a tuple with the CardExpiryMm field value
// and a boolean to check if the value has been set.
func (o *CFCard) GetCardExpiryMmOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.CardExpiryMm, true
}

// SetCardExpiryMm sets field value
func (o *CFCard) SetCardExpiryMm(v string) {
	o.CardExpiryMm = v
}

// GetCardExpiryYy returns the CardExpiryYy field value
func (o *CFCard) GetCardExpiryYy() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CardExpiryYy
}

// GetCardExpiryYyOk returns a tuple with the CardExpiryYy field value
// and a boolean to check if the value has been set.
func (o *CFCard) GetCardExpiryYyOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.CardExpiryYy, true
}

// SetCardExpiryYy sets field value
func (o *CFCard) SetCardExpiryYy(v string) {
	o.CardExpiryYy = v
}

// GetCardCvv returns the CardCvv field value
func (o *CFCard) GetCardCvv() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CardCvv
}

// GetCardCvvOk returns a tuple with the CardCvv field value
// and a boolean to check if the value has been set.
func (o *CFCard) GetCardCvvOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.CardCvv, true
}

// SetCardCvv sets field value
func (o *CFCard) SetCardCvv(v string) {
	o.CardCvv = v
}

// GetInstrumentId returns the InstrumentId field value
func (o *CFCard) GetInstrumentId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.InstrumentId
}

// GetInstrumentIdOk returns a tuple with the InstrumentId field value
// and a boolean to check if the value has been set.
func (o *CFCard) GetInstrumentIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.InstrumentId, true
}

// SetInstrumentId sets field value
func (o *CFCard) SetInstrumentId(v string) {
	o.InstrumentId = v
}

// GetCryptogram returns the Cryptogram field value
func (o *CFCard) GetCryptogram() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Cryptogram
}

// GetCryptogramOk returns a tuple with the Cryptogram field value
// and a boolean to check if the value has been set.
func (o *CFCard) GetCryptogramOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Cryptogram, true
}

// SetCryptogram sets field value
func (o *CFCard) SetCryptogram(v string) {
	o.Cryptogram = v
}

// GetTokenRequestorId returns the TokenRequestorId field value
func (o *CFCard) GetTokenRequestorId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.TokenRequestorId
}

// GetTokenRequestorIdOk returns a tuple with the TokenRequestorId field value
// and a boolean to check if the value has been set.
func (o *CFCard) GetTokenRequestorIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.TokenRequestorId, true
}

// SetTokenRequestorId sets field value
func (o *CFCard) SetTokenRequestorId(v string) {
	o.TokenRequestorId = v
}

// GetCardDisplay returns the CardDisplay field value
func (o *CFCard) GetCardDisplay() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CardDisplay
}

// GetCardDisplayOk returns a tuple with the CardDisplay field value
// and a boolean to check if the value has been set.
func (o *CFCard) GetCardDisplayOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.CardDisplay, true
}

// SetCardDisplay sets field value
func (o *CFCard) SetCardDisplay(v string) {
	o.CardDisplay = v
}

// GetCardAlias returns the CardAlias field value
func (o *CFCard) GetCardAlias() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CardAlias
}

// GetCardAliasOk returns a tuple with the CardAlias field value
// and a boolean to check if the value has been set.
func (o *CFCard) GetCardAliasOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.CardAlias, true
}

// SetCardAlias sets field value
func (o *CFCard) SetCardAlias(v string) {
	o.CardAlias = v
}

// GetCardBankName returns the CardBankName field value
func (o *CFCard) GetCardBankName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CardBankName
}

// GetCardBankNameOk returns a tuple with the CardBankName field value
// and a boolean to check if the value has been set.
func (o *CFCard) GetCardBankNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.CardBankName, true
}

// SetCardBankName sets field value
func (o *CFCard) SetCardBankName(v string) {
	o.CardBankName = v
}

// GetEmiTenure returns the EmiTenure field value
func (o *CFCard) GetEmiTenure() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.EmiTenure
}

// GetEmiTenureOk returns a tuple with the EmiTenure field value
// and a boolean to check if the value has been set.
func (o *CFCard) GetEmiTenureOk() (*int32, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.EmiTenure, true
}

// SetEmiTenure sets field value
func (o *CFCard) SetEmiTenure(v int32) {
	o.EmiTenure = v
}

func (o CFCard) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["channel"] = o.Channel
	}
	if true {
		toSerialize["card_number"] = o.CardNumber
	}
	if true {
		toSerialize["card_holder_name"] = o.CardHolderName
	}
	if true {
		toSerialize["card_expiry_mm"] = o.CardExpiryMm
	}
	if true {
		toSerialize["card_expiry_yy"] = o.CardExpiryYy
	}
	if true {
		toSerialize["card_cvv"] = o.CardCvv
	}
	if true {
		toSerialize["instrument_id"] = o.InstrumentId
	}
	if true {
		toSerialize["cryptogram"] = o.Cryptogram
	}
	if true {
		toSerialize["token_requestor_id"] = o.TokenRequestorId
	}
	if true {
		toSerialize["card_display"] = o.CardDisplay
	}
	if true {
		toSerialize["card_alias"] = o.CardAlias
	}
	if true {
		toSerialize["card_bank_name"] = o.CardBankName
	}
	if true {
		toSerialize["emi_tenure"] = o.EmiTenure
	}
	return json.Marshal(toSerialize)
}

type NullableCFCard struct {
	value *CFCard
	isSet bool
}

func (v NullableCFCard) Get() *CFCard {
	return v.value
}

func (v *NullableCFCard) Set(val *CFCard) {
	v.value = val
	v.isSet = true
}

func (v NullableCFCard) IsSet() bool {
	return v.isSet
}

func (v *NullableCFCard) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCFCard(val *CFCard) *NullableCFCard {
	return &NullableCFCard{value: val, isSet: true}
}

func (v NullableCFCard) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCFCard) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


