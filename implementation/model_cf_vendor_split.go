/*
New Payment Gateway APIs

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2022-01-01
Contact: nextgenapi@cashfree.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cashfree_pg_sdk_go

import (
	"encoding/json"
)

// CFVendorSplit struct for CFVendorSplit
type CFVendorSplit struct {
	// Vendor id created in Cashfree system
	VendorId *string `json:"vendor_id,omitempty"`
	// Amount which will be associated with this vendor
	Amount *float32 `json:"amount,omitempty"`
	// Percentage of order amount which shall get added to vendor account
	Percentage *float32 `json:"percentage,omitempty"`
}

// NewCFVendorSplit instantiates a new CFVendorSplit object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCFVendorSplit() *CFVendorSplit {
	this := CFVendorSplit{}
	return &this
}

// NewCFVendorSplitWithDefaults instantiates a new CFVendorSplit object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCFVendorSplitWithDefaults() *CFVendorSplit {
	this := CFVendorSplit{}
	return &this
}

// GetVendorId returns the VendorId field value if set, zero value otherwise.
func (o *CFVendorSplit) GetVendorId() string {
	if o == nil || o.VendorId == nil {
		var ret string
		return ret
	}
	return *o.VendorId
}

// GetVendorIdOk returns a tuple with the VendorId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CFVendorSplit) GetVendorIdOk() (*string, bool) {
	if o == nil || o.VendorId == nil {
		return nil, false
	}
	return o.VendorId, true
}

// HasVendorId returns a boolean if a field has been set.
func (o *CFVendorSplit) HasVendorId() bool {
	if o != nil && o.VendorId != nil {
		return true
	}

	return false
}

// SetVendorId gets a reference to the given string and assigns it to the VendorId field.
func (o *CFVendorSplit) SetVendorId(v string) {
	o.VendorId = &v
}

// GetAmount returns the Amount field value if set, zero value otherwise.
func (o *CFVendorSplit) GetAmount() float32 {
	if o == nil || o.Amount == nil {
		var ret float32
		return ret
	}
	return *o.Amount
}

// GetAmountOk returns a tuple with the Amount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CFVendorSplit) GetAmountOk() (*float32, bool) {
	if o == nil || o.Amount == nil {
		return nil, false
	}
	return o.Amount, true
}

// HasAmount returns a boolean if a field has been set.
func (o *CFVendorSplit) HasAmount() bool {
	if o != nil && o.Amount != nil {
		return true
	}

	return false
}

// SetAmount gets a reference to the given float32 and assigns it to the Amount field.
func (o *CFVendorSplit) SetAmount(v float32) {
	o.Amount = &v
}

// GetPercentage returns the Percentage field value if set, zero value otherwise.
func (o *CFVendorSplit) GetPercentage() float32 {
	if o == nil || o.Percentage == nil {
		var ret float32
		return ret
	}
	return *o.Percentage
}

// GetPercentageOk returns a tuple with the Percentage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CFVendorSplit) GetPercentageOk() (*float32, bool) {
	if o == nil || o.Percentage == nil {
		return nil, false
	}
	return o.Percentage, true
}

// HasPercentage returns a boolean if a field has been set.
func (o *CFVendorSplit) HasPercentage() bool {
	if o != nil && o.Percentage != nil {
		return true
	}

	return false
}

// SetPercentage gets a reference to the given float32 and assigns it to the Percentage field.
func (o *CFVendorSplit) SetPercentage(v float32) {
	o.Percentage = &v
}

func (o CFVendorSplit) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.VendorId != nil {
		toSerialize["vendor_id"] = o.VendorId
	}
	if o.Amount != nil {
		toSerialize["amount"] = o.Amount
	}
	if o.Percentage != nil {
		toSerialize["percentage"] = o.Percentage
	}
	return json.Marshal(toSerialize)
}

type NullableCFVendorSplit struct {
	value *CFVendorSplit
	isSet bool
}

func (v NullableCFVendorSplit) Get() *CFVendorSplit {
	return v.value
}

func (v *NullableCFVendorSplit) Set(val *CFVendorSplit) {
	v.value = val
	v.isSet = true
}

func (v NullableCFVendorSplit) IsSet() bool {
	return v.isSet
}

func (v *NullableCFVendorSplit) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCFVendorSplit(val *CFVendorSplit) *NullableCFVendorSplit {
	return &NullableCFVendorSplit{value: val, isSet: true}
}

func (v NullableCFVendorSplit) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCFVendorSplit) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


