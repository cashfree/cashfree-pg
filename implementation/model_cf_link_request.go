/*
New Payment Gateway APIs

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2022-01-01
Contact: nextgenapi@cashfree.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cashfree_pg_sdk_go

import (
	"encoding/json"
)

// CFLinkRequest struct for CFLinkRequest
type CFLinkRequest struct {
	// Unique Identifier (provided by merchant) for the Link. Alphanumeric and only - and _ allowed (50 character limit). Use this for other link-related APIs.
	LinkId string `json:"link_id"`
	// Amount to be collected using this link. Provide upto two decimals for paise.
	LinkAmount float64 `json:"link_amount"`
	// Currency for the payment link. Default is INR. Contact care@cashfree.com to enable new currencies.
	LinkCurrency string `json:"link_currency"`
	// A brief description for which payment must be collected. This is shown to the customer.
	LinkPurpose string `json:"link_purpose"`
	CustomerDetails CFLinkCustomerDetailsEntity `json:"customer_details"`
	// If \"true\", customer can make partial payments for the link.
	LinkPartialPayments *bool `json:"link_partial_payments,omitempty"`
	// Minimum amount in first installment that needs to be paid by the customer if partial payments are enabled. This should be less than the link_amount.
	LinkMinimumPartialAmount *float64 `json:"link_minimum_partial_amount,omitempty"`
	// Time after which the link expires. Customers will not be able to make the payment beyond the time specified here. You can provide them in a valid ISO 8601 time format. Default is 30 days.
	LinkExpiryTime *string `json:"link_expiry_time,omitempty"`
	LinkNotify *CFLinkNotifyEntity `json:"link_notify,omitempty"`
	// If \"true\", reminders will be sent to customers for collecting payments.
	LinkAutoReminders *bool `json:"link_auto_reminders,omitempty"`
	LinkNotes *CFLinkNotifyEntity `json:"link_notes,omitempty"`
	LinkMeta *CFLinkMetaEntity `json:"link_meta,omitempty"`
}

// NewCFLinkRequest instantiates a new CFLinkRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCFLinkRequest(linkId string, linkAmount float64, linkCurrency string, linkPurpose string, customerDetails CFLinkCustomerDetailsEntity) *CFLinkRequest {
	this := CFLinkRequest{}
	this.LinkId = linkId
	this.LinkAmount = linkAmount
	this.LinkCurrency = linkCurrency
	this.LinkPurpose = linkPurpose
	this.CustomerDetails = customerDetails
	return &this
}

// NewCFLinkRequestWithDefaults instantiates a new CFLinkRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCFLinkRequestWithDefaults() *CFLinkRequest {
	this := CFLinkRequest{}
	return &this
}

// GetLinkId returns the LinkId field value
func (o *CFLinkRequest) GetLinkId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.LinkId
}

// GetLinkIdOk returns a tuple with the LinkId field value
// and a boolean to check if the value has been set.
func (o *CFLinkRequest) GetLinkIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.LinkId, true
}

// SetLinkId sets field value
func (o *CFLinkRequest) SetLinkId(v string) {
	o.LinkId = v
}

// GetLinkAmount returns the LinkAmount field value
func (o *CFLinkRequest) GetLinkAmount() float64 {
	if o == nil {
		var ret float64
		return ret
	}

	return o.LinkAmount
}

// GetLinkAmountOk returns a tuple with the LinkAmount field value
// and a boolean to check if the value has been set.
func (o *CFLinkRequest) GetLinkAmountOk() (*float64, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.LinkAmount, true
}

// SetLinkAmount sets field value
func (o *CFLinkRequest) SetLinkAmount(v float64) {
	o.LinkAmount = v
}

// GetLinkCurrency returns the LinkCurrency field value
func (o *CFLinkRequest) GetLinkCurrency() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.LinkCurrency
}

// GetLinkCurrencyOk returns a tuple with the LinkCurrency field value
// and a boolean to check if the value has been set.
func (o *CFLinkRequest) GetLinkCurrencyOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.LinkCurrency, true
}

// SetLinkCurrency sets field value
func (o *CFLinkRequest) SetLinkCurrency(v string) {
	o.LinkCurrency = v
}

// GetLinkPurpose returns the LinkPurpose field value
func (o *CFLinkRequest) GetLinkPurpose() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.LinkPurpose
}

// GetLinkPurposeOk returns a tuple with the LinkPurpose field value
// and a boolean to check if the value has been set.
func (o *CFLinkRequest) GetLinkPurposeOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.LinkPurpose, true
}

// SetLinkPurpose sets field value
func (o *CFLinkRequest) SetLinkPurpose(v string) {
	o.LinkPurpose = v
}

// GetCustomerDetails returns the CustomerDetails field value
func (o *CFLinkRequest) GetCustomerDetails() CFLinkCustomerDetailsEntity {
	if o == nil {
		var ret CFLinkCustomerDetailsEntity
		return ret
	}

	return o.CustomerDetails
}

// GetCustomerDetailsOk returns a tuple with the CustomerDetails field value
// and a boolean to check if the value has been set.
func (o *CFLinkRequest) GetCustomerDetailsOk() (*CFLinkCustomerDetailsEntity, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.CustomerDetails, true
}

// SetCustomerDetails sets field value
func (o *CFLinkRequest) SetCustomerDetails(v CFLinkCustomerDetailsEntity) {
	o.CustomerDetails = v
}

// GetLinkPartialPayments returns the LinkPartialPayments field value if set, zero value otherwise.
func (o *CFLinkRequest) GetLinkPartialPayments() bool {
	if o == nil || o.LinkPartialPayments == nil {
		var ret bool
		return ret
	}
	return *o.LinkPartialPayments
}

// GetLinkPartialPaymentsOk returns a tuple with the LinkPartialPayments field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CFLinkRequest) GetLinkPartialPaymentsOk() (*bool, bool) {
	if o == nil || o.LinkPartialPayments == nil {
		return nil, false
	}
	return o.LinkPartialPayments, true
}

// HasLinkPartialPayments returns a boolean if a field has been set.
func (o *CFLinkRequest) HasLinkPartialPayments() bool {
	if o != nil && o.LinkPartialPayments != nil {
		return true
	}

	return false
}

// SetLinkPartialPayments gets a reference to the given bool and assigns it to the LinkPartialPayments field.
func (o *CFLinkRequest) SetLinkPartialPayments(v bool) {
	o.LinkPartialPayments = &v
}

// GetLinkMinimumPartialAmount returns the LinkMinimumPartialAmount field value if set, zero value otherwise.
func (o *CFLinkRequest) GetLinkMinimumPartialAmount() float64 {
	if o == nil || o.LinkMinimumPartialAmount == nil {
		var ret float64
		return ret
	}
	return *o.LinkMinimumPartialAmount
}

// GetLinkMinimumPartialAmountOk returns a tuple with the LinkMinimumPartialAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CFLinkRequest) GetLinkMinimumPartialAmountOk() (*float64, bool) {
	if o == nil || o.LinkMinimumPartialAmount == nil {
		return nil, false
	}
	return o.LinkMinimumPartialAmount, true
}

// HasLinkMinimumPartialAmount returns a boolean if a field has been set.
func (o *CFLinkRequest) HasLinkMinimumPartialAmount() bool {
	if o != nil && o.LinkMinimumPartialAmount != nil {
		return true
	}

	return false
}

// SetLinkMinimumPartialAmount gets a reference to the given float64 and assigns it to the LinkMinimumPartialAmount field.
func (o *CFLinkRequest) SetLinkMinimumPartialAmount(v float64) {
	o.LinkMinimumPartialAmount = &v
}

// GetLinkExpiryTime returns the LinkExpiryTime field value if set, zero value otherwise.
func (o *CFLinkRequest) GetLinkExpiryTime() string {
	if o == nil || o.LinkExpiryTime == nil {
		var ret string
		return ret
	}
	return *o.LinkExpiryTime
}

// GetLinkExpiryTimeOk returns a tuple with the LinkExpiryTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CFLinkRequest) GetLinkExpiryTimeOk() (*string, bool) {
	if o == nil || o.LinkExpiryTime == nil {
		return nil, false
	}
	return o.LinkExpiryTime, true
}

// HasLinkExpiryTime returns a boolean if a field has been set.
func (o *CFLinkRequest) HasLinkExpiryTime() bool {
	if o != nil && o.LinkExpiryTime != nil {
		return true
	}

	return false
}

// SetLinkExpiryTime gets a reference to the given string and assigns it to the LinkExpiryTime field.
func (o *CFLinkRequest) SetLinkExpiryTime(v string) {
	o.LinkExpiryTime = &v
}

// GetLinkNotify returns the LinkNotify field value if set, zero value otherwise.
func (o *CFLinkRequest) GetLinkNotify() CFLinkNotifyEntity {
	if o == nil || o.LinkNotify == nil {
		var ret CFLinkNotifyEntity
		return ret
	}
	return *o.LinkNotify
}

// GetLinkNotifyOk returns a tuple with the LinkNotify field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CFLinkRequest) GetLinkNotifyOk() (*CFLinkNotifyEntity, bool) {
	if o == nil || o.LinkNotify == nil {
		return nil, false
	}
	return o.LinkNotify, true
}

// HasLinkNotify returns a boolean if a field has been set.
func (o *CFLinkRequest) HasLinkNotify() bool {
	if o != nil && o.LinkNotify != nil {
		return true
	}

	return false
}

// SetLinkNotify gets a reference to the given CFLinkNotifyEntity and assigns it to the LinkNotify field.
func (o *CFLinkRequest) SetLinkNotify(v CFLinkNotifyEntity) {
	o.LinkNotify = &v
}

// GetLinkAutoReminders returns the LinkAutoReminders field value if set, zero value otherwise.
func (o *CFLinkRequest) GetLinkAutoReminders() bool {
	if o == nil || o.LinkAutoReminders == nil {
		var ret bool
		return ret
	}
	return *o.LinkAutoReminders
}

// GetLinkAutoRemindersOk returns a tuple with the LinkAutoReminders field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CFLinkRequest) GetLinkAutoRemindersOk() (*bool, bool) {
	if o == nil || o.LinkAutoReminders == nil {
		return nil, false
	}
	return o.LinkAutoReminders, true
}

// HasLinkAutoReminders returns a boolean if a field has been set.
func (o *CFLinkRequest) HasLinkAutoReminders() bool {
	if o != nil && o.LinkAutoReminders != nil {
		return true
	}

	return false
}

// SetLinkAutoReminders gets a reference to the given bool and assigns it to the LinkAutoReminders field.
func (o *CFLinkRequest) SetLinkAutoReminders(v bool) {
	o.LinkAutoReminders = &v
}

// GetLinkNotes returns the LinkNotes field value if set, zero value otherwise.
func (o *CFLinkRequest) GetLinkNotes() CFLinkNotifyEntity {
	if o == nil || o.LinkNotes == nil {
		var ret CFLinkNotifyEntity
		return ret
	}
	return *o.LinkNotes
}

// GetLinkNotesOk returns a tuple with the LinkNotes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CFLinkRequest) GetLinkNotesOk() (*CFLinkNotifyEntity, bool) {
	if o == nil || o.LinkNotes == nil {
		return nil, false
	}
	return o.LinkNotes, true
}

// HasLinkNotes returns a boolean if a field has been set.
func (o *CFLinkRequest) HasLinkNotes() bool {
	if o != nil && o.LinkNotes != nil {
		return true
	}

	return false
}

// SetLinkNotes gets a reference to the given CFLinkNotesEntity and assigns it to the LinkNotes field.
func (o *CFLinkRequest) SetLinkNotes(v CFLinkNotifyEntity) {
	o.LinkNotes = &v
}

// GetLinkMeta returns the LinkMeta field value if set, zero value otherwise.
func (o *CFLinkRequest) GetLinkMeta() CFLinkMetaEntity {
	if o == nil || o.LinkMeta == nil {
		var ret CFLinkMetaEntity
		return ret
	}
	return *o.LinkMeta
}

// GetLinkMetaOk returns a tuple with the LinkMeta field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CFLinkRequest) GetLinkMetaOk() (*CFLinkMetaEntity, bool) {
	if o == nil || o.LinkMeta == nil {
		return nil, false
	}
	return o.LinkMeta, true
}

// HasLinkMeta returns a boolean if a field has been set.
func (o *CFLinkRequest) HasLinkMeta() bool {
	if o != nil && o.LinkMeta != nil {
		return true
	}

	return false
}

// SetLinkMeta gets a reference to the given CFLinkMetaEntity and assigns it to the LinkMeta field.
func (o *CFLinkRequest) SetLinkMeta(v CFLinkMetaEntity) {
	o.LinkMeta = &v
}

func (o CFLinkRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["link_id"] = o.LinkId
	}
	if true {
		toSerialize["link_amount"] = o.LinkAmount
	}
	if true {
		toSerialize["link_currency"] = o.LinkCurrency
	}
	if true {
		toSerialize["link_purpose"] = o.LinkPurpose
	}
	if true {
		toSerialize["customer_details"] = o.CustomerDetails
	}
	if o.LinkPartialPayments != nil {
		toSerialize["link_partial_payments"] = o.LinkPartialPayments
	}
	if o.LinkMinimumPartialAmount != nil {
		toSerialize["link_minimum_partial_amount"] = o.LinkMinimumPartialAmount
	}
	if o.LinkExpiryTime != nil {
		toSerialize["link_expiry_time"] = o.LinkExpiryTime
	}
	if o.LinkNotify != nil {
		toSerialize["link_notify"] = o.LinkNotify
	}
	if o.LinkAutoReminders != nil {
		toSerialize["link_auto_reminders"] = o.LinkAutoReminders
	}
	if o.LinkNotes != nil {
		toSerialize["link_notes"] = o.LinkNotes
	}
	if o.LinkMeta != nil {
		toSerialize["link_meta"] = o.LinkMeta
	}
	return json.Marshal(toSerialize)
}

type NullableCFLinkRequest struct {
	value *CFLinkRequest
	isSet bool
}

func (v NullableCFLinkRequest) Get() *CFLinkRequest {
	return v.value
}

func (v *NullableCFLinkRequest) Set(val *CFLinkRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCFLinkRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCFLinkRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCFLinkRequest(val *CFLinkRequest) *NullableCFLinkRequest {
	return &NullableCFLinkRequest{value: val, isSet: true}
}

func (v NullableCFLinkRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCFLinkRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


