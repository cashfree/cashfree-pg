/*
New Payment Gateway APIs

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2022-01-01
Contact: nextgenapi@cashfree.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cashfree_pg_sdk_go

import (
	"encoding/json"
)

// CFCardPayment The card payment object is used to make payment using either plain card number, saved card instrument id or using cryptogram 
type CFCardPayment struct {
	Card CFCard `json:"card"`
}

// NewCFCardPayment instantiates a new CFCardPayment object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCFCardPayment(card CFCard) *CFCardPayment {
	this := CFCardPayment{}
	this.Card = card
	return &this
}

// NewCFCardPaymentWithDefaults instantiates a new CFCardPayment object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCFCardPaymentWithDefaults() *CFCardPayment {
	this := CFCardPayment{}
	return &this
}

// GetCard returns the Card field value
func (o *CFCardPayment) GetCard() CFCard {
	if o == nil {
		var ret CFCard
		return ret
	}

	return o.Card
}

// GetCardOk returns a tuple with the Card field value
// and a boolean to check if the value has been set.
func (o *CFCardPayment) GetCardOk() (*CFCard, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Card, true
}

// SetCard sets field value
func (o *CFCardPayment) SetCard(v CFCard) {
	o.Card = v
}

func (o CFCardPayment) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["card"] = o.Card
	}
	return json.Marshal(toSerialize)
}

type NullableCFCardPayment struct {
	value *CFCardPayment
	isSet bool
}

func (v NullableCFCardPayment) Get() *CFCardPayment {
	return v.value
}

func (v *NullableCFCardPayment) Set(val *CFCardPayment) {
	v.value = val
	v.isSet = true
}

func (v NullableCFCardPayment) IsSet() bool {
	return v.isSet
}

func (v *NullableCFCardPayment) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCFCardPayment(val *CFCardPayment) *NullableCFCardPayment {
	return &NullableCFCardPayment{value: val, isSet: true}
}

func (v NullableCFCardPayment) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCFCardPayment) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


