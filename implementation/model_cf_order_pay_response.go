/*
New Payment Gateway APIs

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2022-01-01
Contact: nextgenapi@cashfree.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cashfree_pg_sdk_go

import (
	"encoding/json"
)

// CFOrderPayResponse struct for CFOrderPayResponse
type CFOrderPayResponse struct {
	// Payment identifier created by Cashfree
	CfPaymentId *int64 `json:"cf_payment_id,omitempty"`
	// One of [\"upi\", \"netbanking\", \"card\", \"app\", \"cardless_emi\", \"paylater\"] 
	PaymentMethod *string `json:"payment_method,omitempty"`
	// One of [\"link\", \"collect\", \"qrcode\"]. In an older version we used to support different channels like 'gpay', 'phonepe' etc. However, we now support only the following channels - link, collect and qrcode. To process payments using gpay, you will have to provide channel as 'link' and provider as 'gpay'
	Channel *string `json:"channel,omitempty"`
	// One of [\"link\", \"custom\", \"form\"]
	Action NullableString `json:"action,omitempty"`
	Data *CFOrderPayData `json:"data,omitempty"`
}

// NewCFOrderPayResponse instantiates a new CFOrderPayResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCFOrderPayResponse() *CFOrderPayResponse {
	this := CFOrderPayResponse{}
	return &this
}

// NewCFOrderPayResponseWithDefaults instantiates a new CFOrderPayResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCFOrderPayResponseWithDefaults() *CFOrderPayResponse {
	this := CFOrderPayResponse{}
	return &this
}

// GetCfPaymentId returns the CfPaymentId field value if set, zero value otherwise.
func (o *CFOrderPayResponse) GetCfPaymentId() int64 {
	if o == nil || o.CfPaymentId == nil {
		var ret int64
		return ret
	}
	return *o.CfPaymentId
}

// GetCfPaymentIdOk returns a tuple with the CfPaymentId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CFOrderPayResponse) GetCfPaymentIdOk() (*int64, bool) {
	if o == nil || o.CfPaymentId == nil {
		return nil, false
	}
	return o.CfPaymentId, true
}

// HasCfPaymentId returns a boolean if a field has been set.
func (o *CFOrderPayResponse) HasCfPaymentId() bool {
	if o != nil && o.CfPaymentId != nil {
		return true
	}

	return false
}

// SetCfPaymentId gets a reference to the given int32 and assigns it to the CfPaymentId field.
func (o *CFOrderPayResponse) SetCfPaymentId(v int64) {
	o.CfPaymentId = &v
}

// GetPaymentMethod returns the PaymentMethod field value if set, zero value otherwise.
func (o *CFOrderPayResponse) GetPaymentMethod() string {
	if o == nil || o.PaymentMethod == nil {
		var ret string
		return ret
	}
	return *o.PaymentMethod
}

// GetPaymentMethodOk returns a tuple with the PaymentMethod field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CFOrderPayResponse) GetPaymentMethodOk() (*string, bool) {
	if o == nil || o.PaymentMethod == nil {
		return nil, false
	}
	return o.PaymentMethod, true
}

// HasPaymentMethod returns a boolean if a field has been set.
func (o *CFOrderPayResponse) HasPaymentMethod() bool {
	if o != nil && o.PaymentMethod != nil {
		return true
	}

	return false
}

// SetPaymentMethod gets a reference to the given string and assigns it to the PaymentMethod field.
func (o *CFOrderPayResponse) SetPaymentMethod(v string) {
	o.PaymentMethod = &v
}

// GetChannel returns the Channel field value if set, zero value otherwise.
func (o *CFOrderPayResponse) GetChannel() string {
	if o == nil || o.Channel == nil {
		var ret string
		return ret
	}
	return *o.Channel
}

// GetChannelOk returns a tuple with the Channel field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CFOrderPayResponse) GetChannelOk() (*string, bool) {
	if o == nil || o.Channel == nil {
		return nil, false
	}
	return o.Channel, true
}

// HasChannel returns a boolean if a field has been set.
func (o *CFOrderPayResponse) HasChannel() bool {
	if o != nil && o.Channel != nil {
		return true
	}

	return false
}

// SetChannel gets a reference to the given string and assigns it to the Channel field.
func (o *CFOrderPayResponse) SetChannel(v string) {
	o.Channel = &v
}

// GetAction returns the Action field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CFOrderPayResponse) GetAction() string {
	if o == nil || o.Action.Get() == nil {
		var ret string
		return ret
	}
	return *o.Action.Get()
}

// GetActionOk returns a tuple with the Action field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CFOrderPayResponse) GetActionOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Action.Get(), o.Action.IsSet()
}

// HasAction returns a boolean if a field has been set.
func (o *CFOrderPayResponse) HasAction() bool {
	if o != nil && o.Action.IsSet() {
		return true
	}

	return false
}

// SetAction gets a reference to the given NullableString and assigns it to the Action field.
func (o *CFOrderPayResponse) SetAction(v string) {
	o.Action.Set(&v)
}
// SetActionNil sets the value for Action to be an explicit nil
func (o *CFOrderPayResponse) SetActionNil() {
	o.Action.Set(nil)
}

// UnsetAction ensures that no value is present for Action, not even an explicit nil
func (o *CFOrderPayResponse) UnsetAction() {
	o.Action.Unset()
}

// GetData returns the Data field value if set, zero value otherwise.
func (o *CFOrderPayResponse) GetData() CFOrderPayData {
	if o == nil || o.Data == nil {
		var ret CFOrderPayData
		return ret
	}
	return *o.Data
}

// GetDataOk returns a tuple with the Data field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CFOrderPayResponse) GetDataOk() (*CFOrderPayData, bool) {
	if o == nil || o.Data == nil {
		return nil, false
	}
	return o.Data, true
}

// HasData returns a boolean if a field has been set.
func (o *CFOrderPayResponse) HasData() bool {
	if o != nil && o.Data != nil {
		return true
	}

	return false
}

// SetData gets a reference to the given CFOrderPayData and assigns it to the Data field.
func (o *CFOrderPayResponse) SetData(v CFOrderPayData) {
	o.Data = &v
}

func (o CFOrderPayResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.CfPaymentId != nil {
		toSerialize["cf_payment_id"] = o.CfPaymentId
	}
	if o.PaymentMethod != nil {
		toSerialize["payment_method"] = o.PaymentMethod
	}
	if o.Channel != nil {
		toSerialize["channel"] = o.Channel
	}
	if o.Action.IsSet() {
		toSerialize["action"] = o.Action.Get()
	}
	if o.Data != nil {
		toSerialize["data"] = o.Data
	}
	return json.Marshal(toSerialize)
}

type NullableCFOrderPayResponse struct {
	value *CFOrderPayResponse
	isSet bool
}

func (v NullableCFOrderPayResponse) Get() *CFOrderPayResponse {
	return v.value
}

func (v *NullableCFOrderPayResponse) Set(val *CFOrderPayResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableCFOrderPayResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableCFOrderPayResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCFOrderPayResponse(val *CFOrderPayResponse) *NullableCFOrderPayResponse {
	return &NullableCFOrderPayResponse{value: val, isSet: true}
}

func (v NullableCFOrderPayResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCFOrderPayResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


