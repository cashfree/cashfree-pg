/*
New Payment Gateway APIs

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2022-09-01
Contact: nextgenapi@cashfree.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cashfree_pg_sdk_go

import (
	"encoding/json"
)

// checks if the OfferQueries type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &OfferQueries{}

// OfferQueries struct for OfferQueries
type OfferQueries struct {
	// OrderId of the order. Either of `order_id` or `order_amount` is mandatory.
	OrderId *float64 `json:"order_id,omitempty"`
	// Amount of the order. OrderId of the order. Either of `order_id` or `order_amount` is mandatory.
	Amount *float32 `json:"amount,omitempty"`
}

// NewOfferQueries instantiates a new OfferQueries object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOfferQueries() *OfferQueries {
	this := OfferQueries{}
	return &this
}

// NewOfferQueriesWithDefaults instantiates a new OfferQueries object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOfferQueriesWithDefaults() *OfferQueries {
	this := OfferQueries{}
	return &this
}

// GetOrderId returns the OrderId field value if set, zero value otherwise.
func (o *OfferQueries) GetOrderId() float64 {
	if o == nil || IsNil(o.OrderId) {
		var ret float64
		return ret
	}
	return *o.OrderId
}

// GetOrderIdOk returns a tuple with the OrderId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OfferQueries) GetOrderIdOk() (*float64, bool) {
	if o == nil || IsNil(o.OrderId) {
		return nil, false
	}
	return o.OrderId, true
}

// HasOrderId returns a boolean if a field has been set.
func (o *OfferQueries) HasOrderId() bool {
	if o != nil && !IsNil(o.OrderId) {
		return true
	}

	return false
}

// SetOrderId gets a reference to the given float64 and assigns it to the OrderId field.
func (o *OfferQueries) SetOrderId(v float64) {
	o.OrderId = &v
}

// GetAmount returns the Amount field value if set, zero value otherwise.
func (o *OfferQueries) GetAmount() float32 {
	if o == nil || IsNil(o.Amount) {
		var ret float32
		return ret
	}
	return *o.Amount
}

// GetAmountOk returns a tuple with the Amount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OfferQueries) GetAmountOk() (*float32, bool) {
	if o == nil || IsNil(o.Amount) {
		return nil, false
	}
	return o.Amount, true
}

// HasAmount returns a boolean if a field has been set.
func (o *OfferQueries) HasAmount() bool {
	if o != nil && !IsNil(o.Amount) {
		return true
	}

	return false
}

// SetAmount gets a reference to the given float32 and assigns it to the Amount field.
func (o *OfferQueries) SetAmount(v float32) {
	o.Amount = &v
}

func (o OfferQueries) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o OfferQueries) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.OrderId) {
		toSerialize["order_id"] = o.OrderId
	}
	if !IsNil(o.Amount) {
		toSerialize["amount"] = o.Amount
	}
	return toSerialize, nil
}

type NullableOfferQueries struct {
	value *OfferQueries
	isSet bool
}

func (v NullableOfferQueries) Get() *OfferQueries {
	return v.value
}

func (v *NullableOfferQueries) Set(val *OfferQueries) {
	v.value = val
	v.isSet = true
}

func (v NullableOfferQueries) IsSet() bool {
	return v.isSet
}

func (v *NullableOfferQueries) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOfferQueries(val *OfferQueries) *NullableOfferQueries {
	return &NullableOfferQueries{value: val, isSet: true}
}

func (v NullableOfferQueries) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOfferQueries) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


