/*
New Payment Gateway APIs

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2022-01-01
Contact: nextgenapi@cashfree.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cashfree_pg_sdk_go

import (
	"encoding/json"
)

// CFOrder struct for CFOrder
type CFOrder struct {
	CfOrderId *int64 `json:"cf_order_id,omitempty"`
	OrderId *string `json:"order_id,omitempty"`
	Entity *string `json:"entity,omitempty"`
	OrderCurrency *string `json:"order_currency,omitempty"`
	OrderAmount *float32 `json:"order_amount,omitempty"`
	OrderStatus *string `json:"order_status,omitempty"`
	OrderToken *string `json:"order_token,omitempty"`
	OrderExpiryTime *string `json:"order_expiry_time,omitempty"`
	OrderNote *string `json:"order_note,omitempty"`
	PaymentLink *string `json:"payment_link,omitempty"`
	CustomerDetails *CFCustomerDetails `json:"customer_details,omitempty"`
	OrderMeta *CFOrderMeta `json:"order_meta,omitempty"`
	Payments *CFPaymentURLObject `json:"payments,omitempty"`
	Settlements *CFSettlementURLObject `json:"settlements,omitempty"`
	Refunds *CFRefundURLObject `json:"refunds,omitempty"`
	PaymentSessionId *string `json:"payment_session_id,omitempty"`
}

// NewCFOrder instantiates a new CFOrder object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCFOrder() *CFOrder {
	this := CFOrder{}
	return &this
}

// NewCFOrderWithDefaults instantiates a new CFOrder object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCFOrderWithDefaults() *CFOrder {
	this := CFOrder{}
	return &this
}

// GetCfOrderId returns the CfOrderId field value if set, zero value otherwise.
func (o *CFOrder) GetCfOrderId() int64 {
	if o == nil || o.CfOrderId == nil {
		var ret int64
		return ret
	}
	return *o.CfOrderId
}

// GetCfOrderIdOk returns a tuple with the CfOrderId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CFOrder) GetCfOrderIdOk() (*int64, bool) {
	if o == nil || o.CfOrderId == nil {
		return nil, false
	}
	return o.CfOrderId, true
}

// HasCfOrderId returns a boolean if a field has been set.
func (o *CFOrder) HasCfOrderId() bool {
	if o != nil && o.CfOrderId != nil {
		return true
	}

	return false
}

// SetCfOrderId gets a reference to the given int32 and assigns it to the CfOrderId field.
func (o *CFOrder) SetCfOrderId(v int64) {
	o.CfOrderId = &v
}

// GetOrderId returns the OrderId field value if set, zero value otherwise.
func (o *CFOrder) GetOrderId() string {
	if o == nil || o.OrderId == nil {
		var ret string
		return ret
	}
	return *o.OrderId
}

// GetOrderIdOk returns a tuple with the OrderId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CFOrder) GetOrderIdOk() (*string, bool) {
	if o == nil || o.OrderId == nil {
		return nil, false
	}
	return o.OrderId, true
}

// HasOrderId returns a boolean if a field has been set.
func (o *CFOrder) HasOrderId() bool {
	if o != nil && o.OrderId != nil {
		return true
	}

	return false
}

// SetOrderId gets a reference to the given string and assigns it to the OrderId field.
func (o *CFOrder) SetOrderId(v string) {
	o.OrderId = &v
}

// GetEntity returns the Entity field value if set, zero value otherwise.
func (o *CFOrder) GetEntity() string {
	if o == nil || o.Entity == nil {
		var ret string
		return ret
	}
	return *o.Entity
}

// GetEntityOk returns a tuple with the Entity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CFOrder) GetEntityOk() (*string, bool) {
	if o == nil || o.Entity == nil {
		return nil, false
	}
	return o.Entity, true
}

// HasEntity returns a boolean if a field has been set.
func (o *CFOrder) HasEntity() bool {
	if o != nil && o.Entity != nil {
		return true
	}

	return false
}

// SetEntity gets a reference to the given string and assigns it to the Entity field.
func (o *CFOrder) SetEntity(v string) {
	o.Entity = &v
}

// GetOrderCurrency returns the OrderCurrency field value if set, zero value otherwise.
func (o *CFOrder) GetOrderCurrency() string {
	if o == nil || o.OrderCurrency == nil {
		var ret string
		return ret
	}
	return *o.OrderCurrency
}

// GetOrderCurrencyOk returns a tuple with the OrderCurrency field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CFOrder) GetOrderCurrencyOk() (*string, bool) {
	if o == nil || o.OrderCurrency == nil {
		return nil, false
	}
	return o.OrderCurrency, true
}

// HasOrderCurrency returns a boolean if a field has been set.
func (o *CFOrder) HasOrderCurrency() bool {
	if o != nil && o.OrderCurrency != nil {
		return true
	}

	return false
}

// SetOrderCurrency gets a reference to the given string and assigns it to the OrderCurrency field.
func (o *CFOrder) SetOrderCurrency(v string) {
	o.OrderCurrency = &v
}

// GetOrderAmount returns the OrderAmount field value if set, zero value otherwise.
func (o *CFOrder) GetOrderAmount() float32 {
	if o == nil || o.OrderAmount == nil {
		var ret float32
		return ret
	}
	return *o.OrderAmount
}

// GetOrderAmountOk returns a tuple with the OrderAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CFOrder) GetOrderAmountOk() (*float32, bool) {
	if o == nil || o.OrderAmount == nil {
		return nil, false
	}
	return o.OrderAmount, true
}

// HasOrderAmount returns a boolean if a field has been set.
func (o *CFOrder) HasOrderAmount() bool {
	if o != nil && o.OrderAmount != nil {
		return true
	}

	return false
}

// SetOrderAmount gets a reference to the given float32 and assigns it to the OrderAmount field.
func (o *CFOrder) SetOrderAmount(v float32) {
	o.OrderAmount = &v
}

// GetOrderStatus returns the OrderStatus field value if set, zero value otherwise.
func (o *CFOrder) GetOrderStatus() string {
	if o == nil || o.OrderStatus == nil {
		var ret string
		return ret
	}
	return *o.OrderStatus
}

// GetOrderStatusOk returns a tuple with the OrderStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CFOrder) GetOrderStatusOk() (*string, bool) {
	if o == nil || o.OrderStatus == nil {
		return nil, false
	}
	return o.OrderStatus, true
}

// HasOrderStatus returns a boolean if a field has been set.
func (o *CFOrder) HasOrderStatus() bool {
	if o != nil && o.OrderStatus != nil {
		return true
	}

	return false
}

// SetOrderStatus gets a reference to the given string and assigns it to the OrderStatus field.
func (o *CFOrder) SetOrderStatus(v string) {
	o.OrderStatus = &v
}

// GetOrderToken returns the OrderToken field value if set, zero value otherwise.
func (o *CFOrder) GetOrderToken() string {
	if o == nil || o.OrderToken == nil {
		var ret string
		return ret
	}
	return *o.OrderToken
}

// GetOrderTokenOk returns a tuple with the OrderToken field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CFOrder) GetOrderTokenOk() (*string, bool) {
	if o == nil || o.OrderToken == nil {
		return nil, false
	}
	return o.OrderToken, true
}

// HasOrderToken returns a boolean if a field has been set.
func (o *CFOrder) HasOrderToken() bool {
	if o != nil && o.OrderToken != nil {
		return true
	}

	return false
}

// SetOrderToken gets a reference to the given string and assigns it to the OrderToken field.
func (o *CFOrder) SetOrderToken(v string) {
	o.OrderToken = &v
}

// GetOrderExpiryTime returns the OrderExpiryTime field value if set, zero value otherwise.
func (o *CFOrder) GetOrderExpiryTime() string {
	if o == nil || o.OrderExpiryTime == nil {
		var ret string
		return ret
	}
	return *o.OrderExpiryTime
}

// GetOrderExpiryTimeOk returns a tuple with the OrderExpiryTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CFOrder) GetOrderExpiryTimeOk() (*string, bool) {
	if o == nil || o.OrderExpiryTime == nil {
		return nil, false
	}
	return o.OrderExpiryTime, true
}

// HasOrderExpiryTime returns a boolean if a field has been set.
func (o *CFOrder) HasOrderExpiryTime() bool {
	if o != nil && o.OrderExpiryTime != nil {
		return true
	}

	return false
}

// SetOrderExpiryTime gets a reference to the given string and assigns it to the OrderExpiryTime field.
func (o *CFOrder) SetOrderExpiryTime(v string) {
	o.OrderExpiryTime = &v
}

// GetOrderNote returns the OrderNote field value if set, zero value otherwise.
func (o *CFOrder) GetOrderNote() string {
	if o == nil || o.OrderNote == nil {
		var ret string
		return ret
	}
	return *o.OrderNote
}

// GetOrderNoteOk returns a tuple with the OrderNote field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CFOrder) GetOrderNoteOk() (*string, bool) {
	if o == nil || o.OrderNote == nil {
		return nil, false
	}
	return o.OrderNote, true
}

// HasOrderNote returns a boolean if a field has been set.
func (o *CFOrder) HasOrderNote() bool {
	if o != nil && o.OrderNote != nil {
		return true
	}

	return false
}

// SetOrderNote gets a reference to the given string and assigns it to the OrderNote field.
func (o *CFOrder) SetOrderNote(v string) {
	o.OrderNote = &v
}

// GetPaymentLink returns the PaymentLink field value if set, zero value otherwise.
func (o *CFOrder) GetPaymentLink() string {
	if o == nil || o.PaymentLink == nil {
		var ret string
		return ret
	}
	return *o.PaymentLink
}

// GetPaymentLinkOk returns a tuple with the PaymentLink field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CFOrder) GetPaymentLinkOk() (*string, bool) {
	if o == nil || o.PaymentLink == nil {
		return nil, false
	}
	return o.PaymentLink, true
}

// HasPaymentLink returns a boolean if a field has been set.
func (o *CFOrder) HasPaymentLink() bool {
	if o != nil && o.PaymentLink != nil {
		return true
	}

	return false
}

// SetPaymentLink gets a reference to the given string and assigns it to the PaymentLink field.
func (o *CFOrder) SetPaymentLink(v string) {
	o.PaymentLink = &v
}

// GetCustomerDetails returns the CustomerDetails field value if set, zero value otherwise.
func (o *CFOrder) GetCustomerDetails() CFCustomerDetails {
	if o == nil || o.CustomerDetails == nil {
		var ret CFCustomerDetails
		return ret
	}
	return *o.CustomerDetails
}

// GetCustomerDetailsOk returns a tuple with the CustomerDetails field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CFOrder) GetCustomerDetailsOk() (*CFCustomerDetails, bool) {
	if o == nil || o.CustomerDetails == nil {
		return nil, false
	}
	return o.CustomerDetails, true
}

// HasCustomerDetails returns a boolean if a field has been set.
func (o *CFOrder) HasCustomerDetails() bool {
	if o != nil && o.CustomerDetails != nil {
		return true
	}

	return false
}

// SetCustomerDetails gets a reference to the given CFCustomerDetails and assigns it to the CustomerDetails field.
func (o *CFOrder) SetCustomerDetails(v CFCustomerDetails) {
	o.CustomerDetails = &v
}

// GetOrderMeta returns the OrderMeta field value if set, zero value otherwise.
func (o *CFOrder) GetOrderMeta() CFOrderMeta {
	if o == nil || o.OrderMeta == nil {
		var ret CFOrderMeta
		return ret
	}
	return *o.OrderMeta
}

// GetOrderMetaOk returns a tuple with the OrderMeta field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CFOrder) GetOrderMetaOk() (*CFOrderMeta, bool) {
	if o == nil || o.OrderMeta == nil {
		return nil, false
	}
	return o.OrderMeta, true
}

// HasOrderMeta returns a boolean if a field has been set.
func (o *CFOrder) HasOrderMeta() bool {
	if o != nil && o.OrderMeta != nil {
		return true
	}

	return false
}

// SetOrderMeta gets a reference to the given CFOrderMeta and assigns it to the OrderMeta field.
func (o *CFOrder) SetOrderMeta(v CFOrderMeta) {
	o.OrderMeta = &v
}

// GetPayments returns the Payments field value if set, zero value otherwise.
func (o *CFOrder) GetPayments() CFPaymentURLObject {
	if o == nil || o.Payments == nil {
		var ret CFPaymentURLObject
		return ret
	}
	return *o.Payments
}

// GetPaymentsOk returns a tuple with the Payments field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CFOrder) GetPaymentsOk() (*CFPaymentURLObject, bool) {
	if o == nil || o.Payments == nil {
		return nil, false
	}
	return o.Payments, true
}

// HasPayments returns a boolean if a field has been set.
func (o *CFOrder) HasPayments() bool {
	if o != nil && o.Payments != nil {
		return true
	}

	return false
}

// SetPayments gets a reference to the given CFPaymentURLObject and assigns it to the Payments field.
func (o *CFOrder) SetPayments(v CFPaymentURLObject) {
	o.Payments = &v
}

// GetSettlements returns the Settlements field value if set, zero value otherwise.
func (o *CFOrder) GetSettlements() CFSettlementURLObject {
	if o == nil || o.Settlements == nil {
		var ret CFSettlementURLObject
		return ret
	}
	return *o.Settlements
}

// GetSettlementsOk returns a tuple with the Settlements field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CFOrder) GetSettlementsOk() (*CFSettlementURLObject, bool) {
	if o == nil || o.Settlements == nil {
		return nil, false
	}
	return o.Settlements, true
}

// HasSettlements returns a boolean if a field has been set.
func (o *CFOrder) HasSettlements() bool {
	if o != nil && o.Settlements != nil {
		return true
	}

	return false
}

// SetSettlements gets a reference to the given CFSettlementURLObject and assigns it to the Settlements field.
func (o *CFOrder) SetSettlements(v CFSettlementURLObject) {
	o.Settlements = &v
}

// GetRefunds returns the Refunds field value if set, zero value otherwise.
func (o *CFOrder) GetRefunds() CFRefundURLObject {
	if o == nil || o.Refunds == nil {
		var ret CFRefundURLObject
		return ret
	}
	return *o.Refunds
}

// GetRefundsOk returns a tuple with the Refunds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CFOrder) GetRefundsOk() (*CFRefundURLObject, bool) {
	if o == nil || o.Refunds == nil {
		return nil, false
	}
	return o.Refunds, true
}

// HasRefunds returns a boolean if a field has been set.
func (o *CFOrder) HasRefunds() bool {
	if o != nil && o.Refunds != nil {
		return true
	}

	return false
}

// SetRefunds gets a reference to the given CFRefundURLObject and assigns it to the Refunds field.
func (o *CFOrder) SetRefunds(v CFRefundURLObject) {
	o.Refunds = &v
}

func (o CFOrder) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.CfOrderId != nil {
		toSerialize["cf_order_id"] = o.CfOrderId
	}
	if o.OrderId != nil {
		toSerialize["order_id"] = o.OrderId
	}
	if o.Entity != nil {
		toSerialize["entity"] = o.Entity
	}
	if o.OrderCurrency != nil {
		toSerialize["order_currency"] = o.OrderCurrency
	}
	if o.OrderAmount != nil {
		toSerialize["order_amount"] = o.OrderAmount
	}
	if o.OrderStatus != nil {
		toSerialize["order_status"] = o.OrderStatus
	}
	if o.OrderToken != nil {
		toSerialize["order_token"] = o.OrderToken
	}
	if o.OrderExpiryTime != nil {
		toSerialize["order_expiry_time"] = o.OrderExpiryTime
	}
	if o.OrderNote != nil {
		toSerialize["order_note"] = o.OrderNote
	}
	if o.PaymentLink != nil {
		toSerialize["payment_link"] = o.PaymentLink
	}
	if o.CustomerDetails != nil {
		toSerialize["customer_details"] = o.CustomerDetails
	}
	if o.OrderMeta != nil {
		toSerialize["order_meta"] = o.OrderMeta
	}
	if o.Payments != nil {
		toSerialize["payments"] = o.Payments
	}
	if o.Settlements != nil {
		toSerialize["settlements"] = o.Settlements
	}
	if o.Refunds != nil {
		toSerialize["refunds"] = o.Refunds
	}
	return json.Marshal(toSerialize)
}

type NullableCFOrder struct {
	value *CFOrder
	isSet bool
}

func (v NullableCFOrder) Get() *CFOrder {
	return v.value
}

func (v *NullableCFOrder) Set(val *CFOrder) {
	v.value = val
	v.isSet = true
}

func (v NullableCFOrder) IsSet() bool {
	return v.isSet
}

func (v *NullableCFOrder) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCFOrder(val *CFOrder) *NullableCFOrder {
	return &NullableCFOrder{value: val, isSet: true}
}

func (v NullableCFOrder) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCFOrder) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


