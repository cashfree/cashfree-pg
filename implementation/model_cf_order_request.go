/*
New Payment Gateway APIs

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2022-01-01
Contact: nextgenapi@cashfree.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cashfree_pg_sdk_go

import (
	"encoding/json"
)

// CFOrderRequest struct for CFOrderRequest
type CFOrderRequest struct {
	// Order identifier present in your system. Alphanumeric and only - and _ allowed.
	OrderId *string `json:"order_id,omitempty"`
	// Bill amount for the order. Provide upto two decimals. 10.15 means Rs 10 and 15 paisa
	OrderAmount float64 `json:"order_amount"`
	// Currency for the order. INR if left empty. Contact care@cashfree.com to enable new currencies. 
	OrderCurrency string `json:"order_currency"`
	CustomerDetails CFCustomerDetails `json:"customer_details"`
	OrderMeta *CFOrderMeta `json:"order_meta,omitempty"`
	// Time after which the order expires. Customers will not be able to make the payment beyond the time specified here. We store timestamps in IST, but you can provide them in a valid ISO 8601 time format.
	OrderExpiryTime *string `json:"order_expiry_time,omitempty"`
	// Order note for reference.
	OrderNote *string `json:"order_note,omitempty"`
	// Custom Tags which can be passed for an order. A maximum of 6 tags can be added
	OrderTags *map[string]string `json:"order_tags,omitempty"`
	OrderSplits []CFVendorSplit `json:"order_splits,omitempty"`
}

// NewCFOrderRequest instantiates a new CFOrderRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCFOrderRequest(orderAmount float64, orderCurrency string, customerDetails CFCustomerDetails) *CFOrderRequest {
	this := CFOrderRequest{}
	this.OrderAmount = orderAmount
	this.OrderCurrency = orderCurrency
	this.CustomerDetails = customerDetails
	return &this
}

// NewCFOrderRequestWithDefaults instantiates a new CFOrderRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCFOrderRequestWithDefaults() *CFOrderRequest {
	this := CFOrderRequest{}
	return &this
}

// GetOrderId returns the OrderId field value if set, zero value otherwise.
func (o *CFOrderRequest) GetOrderId() string {
	if o == nil || o.OrderId == nil {
		var ret string
		return ret
	}
	return *o.OrderId
}

// GetOrderIdOk returns a tuple with the OrderId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CFOrderRequest) GetOrderIdOk() (*string, bool) {
	if o == nil || o.OrderId == nil {
		return nil, false
	}
	return o.OrderId, true
}

// HasOrderId returns a boolean if a field has been set.
func (o *CFOrderRequest) HasOrderId() bool {
	if o != nil && o.OrderId != nil {
		return true
	}

	return false
}

// SetOrderId gets a reference to the given string and assigns it to the OrderId field.
func (o *CFOrderRequest) SetOrderId(v string) {
	o.OrderId = &v
}

// GetOrderAmount returns the OrderAmount field value
func (o *CFOrderRequest) GetOrderAmount() float64 {
	if o == nil {
		var ret float64
		return ret
	}

	return o.OrderAmount
}

// GetOrderAmountOk returns a tuple with the OrderAmount field value
// and a boolean to check if the value has been set.
func (o *CFOrderRequest) GetOrderAmountOk() (*float64, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.OrderAmount, true
}

// SetOrderAmount sets field value
func (o *CFOrderRequest) SetOrderAmount(v float64) {
	o.OrderAmount = v
}

// GetOrderCurrency returns the OrderCurrency field value
func (o *CFOrderRequest) GetOrderCurrency() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.OrderCurrency
}

// GetOrderCurrencyOk returns a tuple with the OrderCurrency field value
// and a boolean to check if the value has been set.
func (o *CFOrderRequest) GetOrderCurrencyOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.OrderCurrency, true
}

// SetOrderCurrency sets field value
func (o *CFOrderRequest) SetOrderCurrency(v string) {
	o.OrderCurrency = v
}

// GetCustomerDetails returns the CustomerDetails field value
func (o *CFOrderRequest) GetCustomerDetails() CFCustomerDetails {
	if o == nil {
		var ret CFCustomerDetails
		return ret
	}

	return o.CustomerDetails
}

// GetCustomerDetailsOk returns a tuple with the CustomerDetails field value
// and a boolean to check if the value has been set.
func (o *CFOrderRequest) GetCustomerDetailsOk() (*CFCustomerDetails, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.CustomerDetails, true
}

// SetCustomerDetails sets field value
func (o *CFOrderRequest) SetCustomerDetails(v CFCustomerDetails) {
	o.CustomerDetails = v
}

// GetOrderMeta returns the OrderMeta field value if set, zero value otherwise.
func (o *CFOrderRequest) GetOrderMeta() CFOrderMeta {
	if o == nil || o.OrderMeta == nil {
		var ret CFOrderMeta
		return ret
	}
	return *o.OrderMeta
}

// GetOrderMetaOk returns a tuple with the OrderMeta field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CFOrderRequest) GetOrderMetaOk() (*CFOrderMeta, bool) {
	if o == nil || o.OrderMeta == nil {
		return nil, false
	}
	return o.OrderMeta, true
}

// HasOrderMeta returns a boolean if a field has been set.
func (o *CFOrderRequest) HasOrderMeta() bool {
	if o != nil && o.OrderMeta != nil {
		return true
	}

	return false
}

// SetOrderMeta gets a reference to the given CFOrderMeta and assigns it to the OrderMeta field.
func (o *CFOrderRequest) SetOrderMeta(v CFOrderMeta) {
	o.OrderMeta = &v
}

// GetOrderExpiryTime returns the OrderExpiryTime field value if set, zero value otherwise.
func (o *CFOrderRequest) GetOrderExpiryTime() string {
	if o == nil || o.OrderExpiryTime == nil {
		var ret string
		return ret
	}
	return *o.OrderExpiryTime
}

// GetOrderExpiryTimeOk returns a tuple with the OrderExpiryTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CFOrderRequest) GetOrderExpiryTimeOk() (*string, bool) {
	if o == nil || o.OrderExpiryTime == nil {
		return nil, false
	}
	return o.OrderExpiryTime, true
}

// HasOrderExpiryTime returns a boolean if a field has been set.
func (o *CFOrderRequest) HasOrderExpiryTime() bool {
	if o != nil && o.OrderExpiryTime != nil {
		return true
	}

	return false
}

// SetOrderExpiryTime gets a reference to the given string and assigns it to the OrderExpiryTime field.
func (o *CFOrderRequest) SetOrderExpiryTime(v string) {
	o.OrderExpiryTime = &v
}

// GetOrderNote returns the OrderNote field value if set, zero value otherwise.
func (o *CFOrderRequest) GetOrderNote() string {
	if o == nil || o.OrderNote == nil {
		var ret string
		return ret
	}
	return *o.OrderNote
}

// GetOrderNoteOk returns a tuple with the OrderNote field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CFOrderRequest) GetOrderNoteOk() (*string, bool) {
	if o == nil || o.OrderNote == nil {
		return nil, false
	}
	return o.OrderNote, true
}

// HasOrderNote returns a boolean if a field has been set.
func (o *CFOrderRequest) HasOrderNote() bool {
	if o != nil && o.OrderNote != nil {
		return true
	}

	return false
}

// SetOrderNote gets a reference to the given string and assigns it to the OrderNote field.
func (o *CFOrderRequest) SetOrderNote(v string) {
	o.OrderNote = &v
}

// GetOrderTags returns the OrderTags field value if set, zero value otherwise.
func (o *CFOrderRequest) GetOrderTags() map[string]string {
	if o == nil || o.OrderTags == nil {
		var ret map[string]string
		return ret
	}
	return *o.OrderTags
}

// GetOrderTagsOk returns a tuple with the OrderTags field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CFOrderRequest) GetOrderTagsOk() (*map[string]string, bool) {
	if o == nil || o.OrderTags == nil {
		return nil, false
	}
	return o.OrderTags, true
}

// HasOrderTags returns a boolean if a field has been set.
func (o *CFOrderRequest) HasOrderTags() bool {
	if o != nil && o.OrderTags != nil {
		return true
	}

	return false
}

// SetOrderTags gets a reference to the given map[string]string and assigns it to the OrderTags field.
func (o *CFOrderRequest) SetOrderTags(v map[string]string) {
	o.OrderTags = &v
}

// GetOrderSplits returns the OrderSplits field value if set, zero value otherwise.
func (o *CFOrderRequest) GetOrderSplits() []CFVendorSplit {
	if o == nil || o.OrderSplits == nil {
		var ret []CFVendorSplit
		return ret
	}
	return o.OrderSplits
}

// GetOrderSplitsOk returns a tuple with the OrderSplits field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CFOrderRequest) GetOrderSplitsOk() ([]CFVendorSplit, bool) {
	if o == nil || o.OrderSplits == nil {
		return nil, false
	}
	return o.OrderSplits, true
}

// HasOrderSplits returns a boolean if a field has been set.
func (o *CFOrderRequest) HasOrderSplits() bool {
	if o != nil && o.OrderSplits != nil {
		return true
	}

	return false
}

// SetOrderSplits gets a reference to the given []CFVendorSplit and assigns it to the OrderSplits field.
func (o *CFOrderRequest) SetOrderSplits(v []CFVendorSplit) {
	o.OrderSplits = v
}

func (o CFOrderRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.OrderId != nil {
		toSerialize["order_id"] = o.OrderId
	}
	if true {
		toSerialize["order_amount"] = o.OrderAmount
	}
	if true {
		toSerialize["order_currency"] = o.OrderCurrency
	}
	if true {
		toSerialize["customer_details"] = o.CustomerDetails
	}
	if o.OrderMeta != nil {
		toSerialize["order_meta"] = o.OrderMeta
	}
	if o.OrderExpiryTime != nil {
		toSerialize["order_expiry_time"] = o.OrderExpiryTime
	}
	if o.OrderNote != nil {
		toSerialize["order_note"] = o.OrderNote
	}
	if o.OrderTags != nil {
		toSerialize["order_tags"] = o.OrderTags
	}
	if o.OrderSplits != nil {
		toSerialize["order_splits"] = o.OrderSplits
	}
	return json.Marshal(toSerialize)
}

type NullableCFOrderRequest struct {
	value *CFOrderRequest
	isSet bool
}

func (v NullableCFOrderRequest) Get() *CFOrderRequest {
	return v.value
}

func (v *NullableCFOrderRequest) Set(val *CFOrderRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCFOrderRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCFOrderRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCFOrderRequest(val *CFOrderRequest) *NullableCFOrderRequest {
	return &NullableCFOrderRequest{value: val, isSet: true}
}

func (v NullableCFOrderRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCFOrderRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


