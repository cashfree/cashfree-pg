/*
Cashfree Payment Gateway APIs

Cashfree's Payment Gateway APIs provide developers with a streamlined pathway to integrate advanced payment processing capabilities into their applications, platforms and websites.

API version: 2022-09-01
Contact: developers@cashfree.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cashfree_pg

import (
	"encoding/json"
)

// checks if the PaylaterPaymentMethod type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PaylaterPaymentMethod{}

// PaylaterPaymentMethod paylater payment method
type PaylaterPaymentMethod struct {
	Paylater *Paylater `json:"paylater,omitempty"`
}

// NewPaylaterPaymentMethod instantiates a new PaylaterPaymentMethod object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPaylaterPaymentMethod() *PaylaterPaymentMethod {
	this := PaylaterPaymentMethod{}
	return &this
}

// NewPaylaterPaymentMethodWithDefaults instantiates a new PaylaterPaymentMethod object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPaylaterPaymentMethodWithDefaults() *PaylaterPaymentMethod {
	this := PaylaterPaymentMethod{}
	return &this
}

// GetPaylater returns the Paylater field value if set, zero value otherwise.
func (o *PaylaterPaymentMethod) GetPaylater() Paylater {
	if o == nil || IsNil(o.Paylater) {
		var ret Paylater
		return ret
	}
	return *o.Paylater
}

// GetPaylaterOk returns a tuple with the Paylater field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaylaterPaymentMethod) GetPaylaterOk() (*Paylater, bool) {
	if o == nil || IsNil(o.Paylater) {
		return nil, false
	}
	return o.Paylater, true
}

// HasPaylater returns a boolean if a field has been set.
func (o *PaylaterPaymentMethod) HasPaylater() bool {
	if o != nil && !IsNil(o.Paylater) {
		return true
	}

	return false
}

// SetPaylater gets a reference to the given Paylater and assigns it to the Paylater field.
func (o *PaylaterPaymentMethod) SetPaylater(v Paylater) {
	o.Paylater = &v
}

func (o PaylaterPaymentMethod) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PaylaterPaymentMethod) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Paylater) {
		toSerialize["paylater"] = o.Paylater
	}
	return toSerialize, nil
}

type NullablePaylaterPaymentMethod struct {
	value *PaylaterPaymentMethod
	isSet bool
}

func (v NullablePaylaterPaymentMethod) Get() *PaylaterPaymentMethod {
	return v.value
}

func (v *NullablePaylaterPaymentMethod) Set(val *PaylaterPaymentMethod) {
	v.value = val
	v.isSet = true
}

func (v NullablePaylaterPaymentMethod) IsSet() bool {
	return v.isSet
}

func (v *NullablePaylaterPaymentMethod) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePaylaterPaymentMethod(val *PaylaterPaymentMethod) *NullablePaylaterPaymentMethod {
	return &NullablePaylaterPaymentMethod{value: val, isSet: true}
}

func (v NullablePaylaterPaymentMethod) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePaylaterPaymentMethod) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


