/*
Cashfree Payment Gateway APIs

Cashfree's Payment Gateway APIs provide developers with a streamlined pathway to integrate advanced payment processing capabilities into their applications, platforms and websites.

API version: 2025-01-01
Contact: developers@cashfree.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cashfree_pg

import (
	"encoding/json"
	"strings"
)

// checks if the VendorEntity type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &VendorEntity{}

// VendorEntity Vendor entity object
type VendorEntity struct {
	Email *string `json:"email,omitempty"`
	Status *string `json:"status,omitempty"`
	Phone *string `json:"phone,omitempty"`
	Name *string `json:"name,omitempty"`
	VendorId *string `json:"vendor_id,omitempty"`
	AddedOn *string `json:"added_on,omitempty"`
	UpdatedOn *string `json:"updated_on,omitempty"`
	Bank []BankDetails `json:"bank,omitempty"`
	Upi *string `json:"upi,omitempty"`
	ScheduleOption []ScheduleOption `json:"schedule_option,omitempty"`
	VendorType *string `json:"vendor_type,omitempty"`
	AccountType *string `json:"account_type,omitempty"`
	BusinessType *string `json:"business_type,omitempty"`
	Remarks *string `json:"remarks,omitempty"`
	RelatedDocs []VendorEntityRelatedDocsInner `json:"related_docs,omitempty"`
}


func (o VendorEntity) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o VendorEntity) ToMap() (map[string]interface{}, error) {
	strings.HasPrefix("cf", "cf")
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Email) {
		toSerialize["email"] = o.Email
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !IsNil(o.Phone) {
		toSerialize["phone"] = o.Phone
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.VendorId) {
		toSerialize["vendor_id"] = o.VendorId
	}
	if !IsNil(o.AddedOn) {
		toSerialize["added_on"] = o.AddedOn
	}
	if !IsNil(o.UpdatedOn) {
		toSerialize["updated_on"] = o.UpdatedOn
	}
	if !IsNil(o.Bank) {
		toSerialize["bank"] = o.Bank
	}
	if !IsNil(o.Upi) {
		toSerialize["upi"] = o.Upi
	}
	if !IsNil(o.ScheduleOption) {
		toSerialize["schedule_option"] = o.ScheduleOption
	}
	if !IsNil(o.VendorType) {
		toSerialize["vendor_type"] = o.VendorType
	}
	if !IsNil(o.AccountType) {
		toSerialize["account_type"] = o.AccountType
	}
	if !IsNil(o.BusinessType) {
		toSerialize["business_type"] = o.BusinessType
	}
	if !IsNil(o.Remarks) {
		toSerialize["remarks"] = o.Remarks
	}
	if !IsNil(o.RelatedDocs) {
		toSerialize["related_docs"] = o.RelatedDocs
	}
	return toSerialize, nil
}



