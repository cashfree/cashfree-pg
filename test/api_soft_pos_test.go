/*
Cashfree Payment Gateway APIs

Testing SoftPOSAPIService

*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech);

package cashfree_pg

import (
	"context"
	"github.com/stretchr/testify/assert"
	"github.com/stretchr/testify/require"
	"testing"
	cashfree "github.com/cashfree/cashfree-pg/v3"
)

func Test_cashfree_pg_SoftPOSAPIService(t *testing.T) {

	configuration := cashfree.NewConfiguration()
	apiClient := cashfree.NewAPIClient(configuration)

	t.Run("Test SoftPOSAPIService SposCreateTerminal", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		resp, httpRes, err := apiClient.SoftPOSAPI.SposCreateTerminal(context.Background()).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test SoftPOSAPIService SposCreateTerminalTransaction", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		resp, httpRes, err := apiClient.SoftPOSAPI.SposCreateTerminalTransaction(context.Background()).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test SoftPOSAPIService SposFetchTerminal", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var terminalPhoneNo string

		resp, httpRes, err := apiClient.SoftPOSAPI.SposFetchTerminal(context.Background(), terminalPhoneNo).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test SoftPOSAPIService SposFetchTerminalQRCodes", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		resp, httpRes, err := apiClient.SoftPOSAPI.SposFetchTerminalQRCodes(context.Background()).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

}
