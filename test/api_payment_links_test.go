/*
Cashfree Payment Gateway APIs

Testing PaymentLinksAPIService

*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech);

package cashfree_pg

import (
	"context"
	"github.com/stretchr/testify/assert"
	"github.com/stretchr/testify/require"
	"testing"
	cashfree "github.com/cashfree/cashfree-pg-sdk-go"
)

func Test_cashfree_pg_PaymentLinksAPIService(t *testing.T) {

	configuration := cashfree.NewConfiguration()
	apiClient := cashfree.NewAPIClient(configuration)

	t.Run("Test PaymentLinksAPIService PGCancelLink", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var linkId string

		resp, httpRes, err := apiClient.PaymentLinksAPI.PGCancelLink(context.Background(), linkId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test PaymentLinksAPIService PGCreateLink", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		resp, httpRes, err := apiClient.PaymentLinksAPI.PGCreateLink(context.Background()).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test PaymentLinksAPIService PGFetchLink", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var linkId string

		resp, httpRes, err := apiClient.PaymentLinksAPI.PGFetchLink(context.Background(), linkId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test PaymentLinksAPIService PGLinkFetchOrders", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var linkId string

		resp, httpRes, err := apiClient.PaymentLinksAPI.PGLinkFetchOrders(context.Background(), linkId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

}
