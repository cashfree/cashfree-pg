/*
Cashfree Payment Gateway APIs

Cashfree's Payment Gateway APIs provide developers with a streamlined pathway to integrate advanced payment processing capabilities into their applications, platforms and websites.

API version: 2022-09-01
Contact: developers@cashfree.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cashfree_pg

import (
	"encoding/json"
)

// checks if the OrderAuthenticateEntity type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &OrderAuthenticateEntity{}

// OrderAuthenticateEntity This is the response shared when merchant inovkes the OTP submit or resend API
type OrderAuthenticateEntity struct {
	// The payment id for which this request was sent
	CfPaymentId *float32 `json:"cf_payment_id,omitempty"`
	// The action that was invoked for this request.
	Action *string `json:"action,omitempty"`
	// Status of the is action. Will be either failed or successful. If the action is successful, you should still call the authorization status to verify the final payment status.
	AuthenticateStatus *string `json:"authenticate_status,omitempty"`
	// Human readable message which describes the status in more detail
	PaymentMessage *string `json:"payment_message,omitempty"`
}

// NewOrderAuthenticateEntity instantiates a new OrderAuthenticateEntity object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOrderAuthenticateEntity() *OrderAuthenticateEntity {
	this := OrderAuthenticateEntity{}
	return &this
}

// NewOrderAuthenticateEntityWithDefaults instantiates a new OrderAuthenticateEntity object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOrderAuthenticateEntityWithDefaults() *OrderAuthenticateEntity {
	this := OrderAuthenticateEntity{}
	return &this
}

// GetCfPaymentId returns the CfPaymentId field value if set, zero value otherwise.
func (o *OrderAuthenticateEntity) GetCfPaymentId() float32 {
	if o == nil || IsNil(o.CfPaymentId) {
		var ret float32
		return ret
	}
	return *o.CfPaymentId
}

// GetCfPaymentIdOk returns a tuple with the CfPaymentId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderAuthenticateEntity) GetCfPaymentIdOk() (*float32, bool) {
	if o == nil || IsNil(o.CfPaymentId) {
		return nil, false
	}
	return o.CfPaymentId, true
}

// HasCfPaymentId returns a boolean if a field has been set.
func (o *OrderAuthenticateEntity) HasCfPaymentId() bool {
	if o != nil && !IsNil(o.CfPaymentId) {
		return true
	}

	return false
}

// SetCfPaymentId gets a reference to the given float32 and assigns it to the CfPaymentId field.
func (o *OrderAuthenticateEntity) SetCfPaymentId(v float32) {
	o.CfPaymentId = &v
}

// GetAction returns the Action field value if set, zero value otherwise.
func (o *OrderAuthenticateEntity) GetAction() string {
	if o == nil || IsNil(o.Action) {
		var ret string
		return ret
	}
	return *o.Action
}

// GetActionOk returns a tuple with the Action field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderAuthenticateEntity) GetActionOk() (*string, bool) {
	if o == nil || IsNil(o.Action) {
		return nil, false
	}
	return o.Action, true
}

// HasAction returns a boolean if a field has been set.
func (o *OrderAuthenticateEntity) HasAction() bool {
	if o != nil && !IsNil(o.Action) {
		return true
	}

	return false
}

// SetAction gets a reference to the given string and assigns it to the Action field.
func (o *OrderAuthenticateEntity) SetAction(v string) {
	o.Action = &v
}

// GetAuthenticateStatus returns the AuthenticateStatus field value if set, zero value otherwise.
func (o *OrderAuthenticateEntity) GetAuthenticateStatus() string {
	if o == nil || IsNil(o.AuthenticateStatus) {
		var ret string
		return ret
	}
	return *o.AuthenticateStatus
}

// GetAuthenticateStatusOk returns a tuple with the AuthenticateStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderAuthenticateEntity) GetAuthenticateStatusOk() (*string, bool) {
	if o == nil || IsNil(o.AuthenticateStatus) {
		return nil, false
	}
	return o.AuthenticateStatus, true
}

// HasAuthenticateStatus returns a boolean if a field has been set.
func (o *OrderAuthenticateEntity) HasAuthenticateStatus() bool {
	if o != nil && !IsNil(o.AuthenticateStatus) {
		return true
	}

	return false
}

// SetAuthenticateStatus gets a reference to the given string and assigns it to the AuthenticateStatus field.
func (o *OrderAuthenticateEntity) SetAuthenticateStatus(v string) {
	o.AuthenticateStatus = &v
}

// GetPaymentMessage returns the PaymentMessage field value if set, zero value otherwise.
func (o *OrderAuthenticateEntity) GetPaymentMessage() string {
	if o == nil || IsNil(o.PaymentMessage) {
		var ret string
		return ret
	}
	return *o.PaymentMessage
}

// GetPaymentMessageOk returns a tuple with the PaymentMessage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderAuthenticateEntity) GetPaymentMessageOk() (*string, bool) {
	if o == nil || IsNil(o.PaymentMessage) {
		return nil, false
	}
	return o.PaymentMessage, true
}

// HasPaymentMessage returns a boolean if a field has been set.
func (o *OrderAuthenticateEntity) HasPaymentMessage() bool {
	if o != nil && !IsNil(o.PaymentMessage) {
		return true
	}

	return false
}

// SetPaymentMessage gets a reference to the given string and assigns it to the PaymentMessage field.
func (o *OrderAuthenticateEntity) SetPaymentMessage(v string) {
	o.PaymentMessage = &v
}

func (o OrderAuthenticateEntity) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o OrderAuthenticateEntity) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.CfPaymentId) {
		toSerialize["cf_payment_id"] = o.CfPaymentId
	}
	if !IsNil(o.Action) {
		toSerialize["action"] = o.Action
	}
	if !IsNil(o.AuthenticateStatus) {
		toSerialize["authenticate_status"] = o.AuthenticateStatus
	}
	if !IsNil(o.PaymentMessage) {
		toSerialize["payment_message"] = o.PaymentMessage
	}
	return toSerialize, nil
}

type NullableOrderAuthenticateEntity struct {
	value *OrderAuthenticateEntity
	isSet bool
}

func (v NullableOrderAuthenticateEntity) Get() *OrderAuthenticateEntity {
	return v.value
}

func (v *NullableOrderAuthenticateEntity) Set(val *OrderAuthenticateEntity) {
	v.value = val
	v.isSet = true
}

func (v NullableOrderAuthenticateEntity) IsSet() bool {
	return v.isSet
}

func (v *NullableOrderAuthenticateEntity) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOrderAuthenticateEntity(val *OrderAuthenticateEntity) *NullableOrderAuthenticateEntity {
	return &NullableOrderAuthenticateEntity{value: val, isSet: true}
}

func (v NullableOrderAuthenticateEntity) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOrderAuthenticateEntity) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


