/*
Cashfree Payment Gateway APIs

Cashfree's Payment Gateway APIs provide developers with a streamlined pathway to integrate advanced payment processing capabilities into their applications, platforms and websites.

API version: 2025-01-01
Contact: developers@cashfree.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cashfree_pg

import (
	"encoding/json"
	"strings"
)

// checks if the SubscriptionEntity type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SubscriptionEntity{}

// SubscriptionEntity The response returned for Get, Create or Manage Subscription APIs.
type SubscriptionEntity struct {
	AuthorisationDetails *AuthorizationDetails `json:"authorisation_details,omitempty"`
	// Cashfree subscription reference number
	CfSubscriptionId *string `json:"cf_subscription_id,omitempty"`
	CustomerDetails *SubscriptionCustomerDetails `json:"customer_details,omitempty"`
	PlanDetails *PlanEntity `json:"plan_details,omitempty"`
	// Time at which the subscription will expire.
	SubscriptionExpiryTime *string `json:"subscription_expiry_time,omitempty"`
	// Time at which the first charge will be made for the subscription. Applicable only for PERIODIC plans.
	SubscriptionFirstChargeTime *string `json:"subscription_first_charge_time,omitempty"`
	// A unique ID passed by merchant for identifying the subscription.
	SubscriptionId *string `json:"subscription_id,omitempty"`
	SubscriptionMeta *SubscriptionEntitySubscriptionMeta `json:"subscription_meta,omitempty"`
	// Note for the subscription.
	SubscriptionNote *string `json:"subscription_note,omitempty"`
	// Subscription Session Id.
	SubscriptionSessionId *string `json:"subscription_session_id,omitempty"`
	// Payment splits for the subscription.
	SubscriptionPaymentSplits []SubscriptionPaymentSplitItem `json:"subscription_payment_splits,omitempty"`
	// Status of the subscription.
	SubscriptionStatus *string `json:"subscription_status,omitempty"`
	// Tags for the subscription.
	SubscriptionTags map[string]interface{} `json:"subscription_tags,omitempty"`
}


func (o SubscriptionEntity) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SubscriptionEntity) ToMap() (map[string]interface{}, error) {
	strings.HasPrefix("cf", "cf")
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AuthorisationDetails) {
		toSerialize["authorisation_details"] = o.AuthorisationDetails
	}
	if !IsNil(o.CfSubscriptionId) {
		toSerialize["cf_subscription_id"] = o.CfSubscriptionId
	}
	if !IsNil(o.CustomerDetails) {
		toSerialize["customer_details"] = o.CustomerDetails
	}
	if !IsNil(o.PlanDetails) {
		toSerialize["plan_details"] = o.PlanDetails
	}
	if !IsNil(o.SubscriptionExpiryTime) {
		toSerialize["subscription_expiry_time"] = o.SubscriptionExpiryTime
	}
	if !IsNil(o.SubscriptionFirstChargeTime) {
		toSerialize["subscription_first_charge_time"] = o.SubscriptionFirstChargeTime
	}
	if !IsNil(o.SubscriptionId) {
		toSerialize["subscription_id"] = o.SubscriptionId
	}
	if !IsNil(o.SubscriptionMeta) {
		toSerialize["subscription_meta"] = o.SubscriptionMeta
	}
	if !IsNil(o.SubscriptionNote) {
		toSerialize["subscription_note"] = o.SubscriptionNote
	}
	if !IsNil(o.SubscriptionSessionId) {
		toSerialize["subscription_session_id"] = o.SubscriptionSessionId
	}
	if !IsNil(o.SubscriptionPaymentSplits) {
		toSerialize["subscription_payment_splits"] = o.SubscriptionPaymentSplits
	}
	if !IsNil(o.SubscriptionStatus) {
		toSerialize["subscription_status"] = o.SubscriptionStatus
	}
	if !IsNil(o.SubscriptionTags) {
		toSerialize["subscription_tags"] = o.SubscriptionTags
	}
	return toSerialize, nil
}



