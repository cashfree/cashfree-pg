/*
Cashfree Payment Gateway APIs

Cashfree's Payment Gateway APIs provide developers with a streamlined pathway to integrate advanced payment processing capabilities into their applications, platforms and websites.

API version: 2023-08-01
Contact: developers@cashfree.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cashfree_pg

import (
	"encoding/json"
	"strings"
)

// checks if the SettlementEntity type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SettlementEntity{}

// SettlementEntity Settlement entity object
type SettlementEntity struct {
	CfPaymentId *string `json:"cf_payment_id,omitempty"`
	CfSettlementId *string `json:"cf_settlement_id,omitempty"`
	SettlementCurrency *string `json:"settlement_currency,omitempty"`
	OrderId *string `json:"order_id,omitempty"`
	Entity *string `json:"entity,omitempty"`
	OrderAmount *float32 `json:"order_amount,omitempty"`
	PaymentTime *string `json:"payment_time,omitempty"`
	ServiceCharge *float32 `json:"service_charge,omitempty"`
	ServiceTax *float32 `json:"service_tax,omitempty"`
	SettlementAmount *float32 `json:"settlement_amount,omitempty"`
	SettlementId *int32 `json:"settlement_id,omitempty"`
	TransferId *int32 `json:"transfer_id,omitempty"`
	TransferTime *string `json:"transfer_time,omitempty"`
	TransferUtr *string `json:"transfer_utr,omitempty"`
}


func (o SettlementEntity) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SettlementEntity) ToMap() (map[string]interface{}, error) {
	strings.HasPrefix("cf", "cf")
	toSerialize := map[string]interface{}{}
	if !IsNil(o.CfPaymentId) {
		toSerialize["cf_payment_id"] = o.CfPaymentId
	}
	if !IsNil(o.CfSettlementId) {
		toSerialize["cf_settlement_id"] = o.CfSettlementId
	}
	if !IsNil(o.SettlementCurrency) {
		toSerialize["settlement_currency"] = o.SettlementCurrency
	}
	if !IsNil(o.OrderId) {
		toSerialize["order_id"] = o.OrderId
	}
	if !IsNil(o.Entity) {
		toSerialize["entity"] = o.Entity
	}
	if !IsNil(o.OrderAmount) {
		toSerialize["order_amount"] = o.OrderAmount
	}
	if !IsNil(o.PaymentTime) {
		toSerialize["payment_time"] = o.PaymentTime
	}
	if !IsNil(o.ServiceCharge) {
		toSerialize["service_charge"] = o.ServiceCharge
	}
	if !IsNil(o.ServiceTax) {
		toSerialize["service_tax"] = o.ServiceTax
	}
	if !IsNil(o.SettlementAmount) {
		toSerialize["settlement_amount"] = o.SettlementAmount
	}
	if !IsNil(o.SettlementId) {
		toSerialize["settlement_id"] = o.SettlementId
	}
	if !IsNil(o.TransferId) {
		toSerialize["transfer_id"] = o.TransferId
	}
	if !IsNil(o.TransferTime) {
		toSerialize["transfer_time"] = o.TransferTime
	}
	if !IsNil(o.TransferUtr) {
		toSerialize["transfer_utr"] = o.TransferUtr
	}
	return toSerialize, nil
}



