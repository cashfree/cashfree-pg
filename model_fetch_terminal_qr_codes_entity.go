/*
Cashfree Payment Gateway APIs

Cashfree's Payment Gateway APIs provide developers with a streamlined pathway to integrate advanced payment processing capabilities into their applications, platforms and websites.

API version: 2022-09-01
Contact: developers@cashfree.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cashfree_pg

import (
	"encoding/json"
)

// checks if the FetchTerminalQRCodesEntity type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &FetchTerminalQRCodesEntity{}

// FetchTerminalQRCodesEntity Fetch Static QR Codes using terminal ID or phone number
type FetchTerminalQRCodesEntity struct {
	// Name of the bank that is linked to the Static QR.
	Bank *string `json:"bank,omitempty"`
	// Base-64 Encoded QR Code URL
	QrCode *string `json:"qrCode,omitempty"`
	// URL of the qr Code.
	QrCodeUrl *string `json:"qrCodeUrl,omitempty"`
	// Status of the static QR.
	Status *string `json:"status,omitempty"`
}

// NewFetchTerminalQRCodesEntity instantiates a new FetchTerminalQRCodesEntity object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFetchTerminalQRCodesEntity() *FetchTerminalQRCodesEntity {
	this := FetchTerminalQRCodesEntity{}
	return &this
}

// NewFetchTerminalQRCodesEntityWithDefaults instantiates a new FetchTerminalQRCodesEntity object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFetchTerminalQRCodesEntityWithDefaults() *FetchTerminalQRCodesEntity {
	this := FetchTerminalQRCodesEntity{}
	return &this
}

// GetBank returns the Bank field value if set, zero value otherwise.
func (o *FetchTerminalQRCodesEntity) GetBank() string {
	if o == nil || IsNil(o.Bank) {
		var ret string
		return ret
	}
	return *o.Bank
}

// GetBankOk returns a tuple with the Bank field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FetchTerminalQRCodesEntity) GetBankOk() (*string, bool) {
	if o == nil || IsNil(o.Bank) {
		return nil, false
	}
	return o.Bank, true
}

// HasBank returns a boolean if a field has been set.
func (o *FetchTerminalQRCodesEntity) HasBank() bool {
	if o != nil && !IsNil(o.Bank) {
		return true
	}

	return false
}

// SetBank gets a reference to the given string and assigns it to the Bank field.
func (o *FetchTerminalQRCodesEntity) SetBank(v string) {
	o.Bank = &v
}

// GetQrCode returns the QrCode field value if set, zero value otherwise.
func (o *FetchTerminalQRCodesEntity) GetQrCode() string {
	if o == nil || IsNil(o.QrCode) {
		var ret string
		return ret
	}
	return *o.QrCode
}

// GetQrCodeOk returns a tuple with the QrCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FetchTerminalQRCodesEntity) GetQrCodeOk() (*string, bool) {
	if o == nil || IsNil(o.QrCode) {
		return nil, false
	}
	return o.QrCode, true
}

// HasQrCode returns a boolean if a field has been set.
func (o *FetchTerminalQRCodesEntity) HasQrCode() bool {
	if o != nil && !IsNil(o.QrCode) {
		return true
	}

	return false
}

// SetQrCode gets a reference to the given string and assigns it to the QrCode field.
func (o *FetchTerminalQRCodesEntity) SetQrCode(v string) {
	o.QrCode = &v
}

// GetQrCodeUrl returns the QrCodeUrl field value if set, zero value otherwise.
func (o *FetchTerminalQRCodesEntity) GetQrCodeUrl() string {
	if o == nil || IsNil(o.QrCodeUrl) {
		var ret string
		return ret
	}
	return *o.QrCodeUrl
}

// GetQrCodeUrlOk returns a tuple with the QrCodeUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FetchTerminalQRCodesEntity) GetQrCodeUrlOk() (*string, bool) {
	if o == nil || IsNil(o.QrCodeUrl) {
		return nil, false
	}
	return o.QrCodeUrl, true
}

// HasQrCodeUrl returns a boolean if a field has been set.
func (o *FetchTerminalQRCodesEntity) HasQrCodeUrl() bool {
	if o != nil && !IsNil(o.QrCodeUrl) {
		return true
	}

	return false
}

// SetQrCodeUrl gets a reference to the given string and assigns it to the QrCodeUrl field.
func (o *FetchTerminalQRCodesEntity) SetQrCodeUrl(v string) {
	o.QrCodeUrl = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *FetchTerminalQRCodesEntity) GetStatus() string {
	if o == nil || IsNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FetchTerminalQRCodesEntity) GetStatusOk() (*string, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *FetchTerminalQRCodesEntity) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *FetchTerminalQRCodesEntity) SetStatus(v string) {
	o.Status = &v
}

func (o FetchTerminalQRCodesEntity) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o FetchTerminalQRCodesEntity) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Bank) {
		toSerialize["bank"] = o.Bank
	}
	if !IsNil(o.QrCode) {
		toSerialize["qrCode"] = o.QrCode
	}
	if !IsNil(o.QrCodeUrl) {
		toSerialize["qrCodeUrl"] = o.QrCodeUrl
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	return toSerialize, nil
}

type NullableFetchTerminalQRCodesEntity struct {
	value *FetchTerminalQRCodesEntity
	isSet bool
}

func (v NullableFetchTerminalQRCodesEntity) Get() *FetchTerminalQRCodesEntity {
	return v.value
}

func (v *NullableFetchTerminalQRCodesEntity) Set(val *FetchTerminalQRCodesEntity) {
	v.value = val
	v.isSet = true
}

func (v NullableFetchTerminalQRCodesEntity) IsSet() bool {
	return v.isSet
}

func (v *NullableFetchTerminalQRCodesEntity) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFetchTerminalQRCodesEntity(val *FetchTerminalQRCodesEntity) *NullableFetchTerminalQRCodesEntity {
	return &NullableFetchTerminalQRCodesEntity{value: val, isSet: true}
}

func (v NullableFetchTerminalQRCodesEntity) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFetchTerminalQRCodesEntity) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


