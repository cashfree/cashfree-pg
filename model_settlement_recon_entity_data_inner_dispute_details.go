/*
Cashfree Payment Gateway APIs

Cashfree's Payment Gateway APIs provide developers with a streamlined pathway to integrate advanced payment processing capabilities into their applications, platforms and websites.

API version: 2025-01-01
Contact: developers@cashfree.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cashfree_pg

import (
	"encoding/json"
	"strings"
)

// checks if the SettlementReconEntityDataInnerDisputeDetails type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SettlementReconEntityDataInnerDisputeDetails{}

// SettlementReconEntityDataInnerDisputeDetails struct for SettlementReconEntityDataInnerDisputeDetails
type SettlementReconEntityDataInnerDisputeDetails struct {
	// Specifies whether the dispute was closed in favor of the merchant or customer. Possible values - Merchant, Customer.
	ClosedInFavorOf *string `json:"closed_in_favor_of,omitempty"`
	// Date and time when the dispute was resolved.
	DisputeResolvedOn *string `json:"dispute_resolved_on,omitempty"`
	// Category of the dispute - Dispute code and the reason for dispute is shown.
	DisputeCategory *string `json:"dispute_category,omitempty"`
	// Note regarding the dispute.
	DisputeNote *string `json:"dispute_note,omitempty"`
}


func (o SettlementReconEntityDataInnerDisputeDetails) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SettlementReconEntityDataInnerDisputeDetails) ToMap() (map[string]interface{}, error) {
	strings.HasPrefix("cf", "cf")
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ClosedInFavorOf) {
		toSerialize["closed_in_favor_of"] = o.ClosedInFavorOf
	}
	if !IsNil(o.DisputeResolvedOn) {
		toSerialize["dispute_resolved_on"] = o.DisputeResolvedOn
	}
	if !IsNil(o.DisputeCategory) {
		toSerialize["dispute_category"] = o.DisputeCategory
	}
	if !IsNil(o.DisputeNote) {
		toSerialize["dispute_note"] = o.DisputeNote
	}
	return toSerialize, nil
}



