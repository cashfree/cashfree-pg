/*
Cashfree Payment Gateway APIs

Cashfree's Payment Gateway APIs provide developers with a streamlined pathway to integrate advanced payment processing capabilities into their applications, platforms and websites.

API version: 2022-09-01
Contact: developers@cashfree.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cashfree_pg

import (
	"encoding/json"
)

// checks if the TerminalTransactionEntity type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TerminalTransactionEntity{}

// TerminalTransactionEntity Create terminal response object
type TerminalTransactionEntity struct {
	CfPaymentId *int64 `json:"cf_payment_id,omitempty"`
	PaymentAmount *int32 `json:"payment_amount,omitempty"`
	PaymentMethod *string `json:"payment_method,omitempty"`
	PaymentUrl *string `json:"payment_url,omitempty"`
	Qrcode *string `json:"qrcode,omitempty"`
	Timeout *string `json:"timeout,omitempty"`
}

// NewTerminalTransactionEntity instantiates a new TerminalTransactionEntity object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTerminalTransactionEntity() *TerminalTransactionEntity {
	this := TerminalTransactionEntity{}
	return &this
}

// NewTerminalTransactionEntityWithDefaults instantiates a new TerminalTransactionEntity object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTerminalTransactionEntityWithDefaults() *TerminalTransactionEntity {
	this := TerminalTransactionEntity{}
	return &this
}

// GetCfPaymentId returns the CfPaymentId field value if set, zero value otherwise.
func (o *TerminalTransactionEntity) GetCfPaymentId() int64 {
	if o == nil || IsNil(o.CfPaymentId) {
		var ret int64
		return ret
	}
	return *o.CfPaymentId
}

// GetCfPaymentIdOk returns a tuple with the CfPaymentId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TerminalTransactionEntity) GetCfPaymentIdOk() (*int64, bool) {
	if o == nil || IsNil(o.CfPaymentId) {
		return nil, false
	}
	return o.CfPaymentId, true
}

// HasCfPaymentId returns a boolean if a field has been set.
func (o *TerminalTransactionEntity) HasCfPaymentId() bool {
	if o != nil && !IsNil(o.CfPaymentId) {
		return true
	}

	return false
}

// SetCfPaymentId gets a reference to the given int64 and assigns it to the CfPaymentId field.
func (o *TerminalTransactionEntity) SetCfPaymentId(v int64) {
	o.CfPaymentId = &v
}

// GetPaymentAmount returns the PaymentAmount field value if set, zero value otherwise.
func (o *TerminalTransactionEntity) GetPaymentAmount() int32 {
	if o == nil || IsNil(o.PaymentAmount) {
		var ret int32
		return ret
	}
	return *o.PaymentAmount
}

// GetPaymentAmountOk returns a tuple with the PaymentAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TerminalTransactionEntity) GetPaymentAmountOk() (*int32, bool) {
	if o == nil || IsNil(o.PaymentAmount) {
		return nil, false
	}
	return o.PaymentAmount, true
}

// HasPaymentAmount returns a boolean if a field has been set.
func (o *TerminalTransactionEntity) HasPaymentAmount() bool {
	if o != nil && !IsNil(o.PaymentAmount) {
		return true
	}

	return false
}

// SetPaymentAmount gets a reference to the given int32 and assigns it to the PaymentAmount field.
func (o *TerminalTransactionEntity) SetPaymentAmount(v int32) {
	o.PaymentAmount = &v
}

// GetPaymentMethod returns the PaymentMethod field value if set, zero value otherwise.
func (o *TerminalTransactionEntity) GetPaymentMethod() string {
	if o == nil || IsNil(o.PaymentMethod) {
		var ret string
		return ret
	}
	return *o.PaymentMethod
}

// GetPaymentMethodOk returns a tuple with the PaymentMethod field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TerminalTransactionEntity) GetPaymentMethodOk() (*string, bool) {
	if o == nil || IsNil(o.PaymentMethod) {
		return nil, false
	}
	return o.PaymentMethod, true
}

// HasPaymentMethod returns a boolean if a field has been set.
func (o *TerminalTransactionEntity) HasPaymentMethod() bool {
	if o != nil && !IsNil(o.PaymentMethod) {
		return true
	}

	return false
}

// SetPaymentMethod gets a reference to the given string and assigns it to the PaymentMethod field.
func (o *TerminalTransactionEntity) SetPaymentMethod(v string) {
	o.PaymentMethod = &v
}

// GetPaymentUrl returns the PaymentUrl field value if set, zero value otherwise.
func (o *TerminalTransactionEntity) GetPaymentUrl() string {
	if o == nil || IsNil(o.PaymentUrl) {
		var ret string
		return ret
	}
	return *o.PaymentUrl
}

// GetPaymentUrlOk returns a tuple with the PaymentUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TerminalTransactionEntity) GetPaymentUrlOk() (*string, bool) {
	if o == nil || IsNil(o.PaymentUrl) {
		return nil, false
	}
	return o.PaymentUrl, true
}

// HasPaymentUrl returns a boolean if a field has been set.
func (o *TerminalTransactionEntity) HasPaymentUrl() bool {
	if o != nil && !IsNil(o.PaymentUrl) {
		return true
	}

	return false
}

// SetPaymentUrl gets a reference to the given string and assigns it to the PaymentUrl field.
func (o *TerminalTransactionEntity) SetPaymentUrl(v string) {
	o.PaymentUrl = &v
}

// GetQrcode returns the Qrcode field value if set, zero value otherwise.
func (o *TerminalTransactionEntity) GetQrcode() string {
	if o == nil || IsNil(o.Qrcode) {
		var ret string
		return ret
	}
	return *o.Qrcode
}

// GetQrcodeOk returns a tuple with the Qrcode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TerminalTransactionEntity) GetQrcodeOk() (*string, bool) {
	if o == nil || IsNil(o.Qrcode) {
		return nil, false
	}
	return o.Qrcode, true
}

// HasQrcode returns a boolean if a field has been set.
func (o *TerminalTransactionEntity) HasQrcode() bool {
	if o != nil && !IsNil(o.Qrcode) {
		return true
	}

	return false
}

// SetQrcode gets a reference to the given string and assigns it to the Qrcode field.
func (o *TerminalTransactionEntity) SetQrcode(v string) {
	o.Qrcode = &v
}

// GetTimeout returns the Timeout field value if set, zero value otherwise.
func (o *TerminalTransactionEntity) GetTimeout() string {
	if o == nil || IsNil(o.Timeout) {
		var ret string
		return ret
	}
	return *o.Timeout
}

// GetTimeoutOk returns a tuple with the Timeout field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TerminalTransactionEntity) GetTimeoutOk() (*string, bool) {
	if o == nil || IsNil(o.Timeout) {
		return nil, false
	}
	return o.Timeout, true
}

// HasTimeout returns a boolean if a field has been set.
func (o *TerminalTransactionEntity) HasTimeout() bool {
	if o != nil && !IsNil(o.Timeout) {
		return true
	}

	return false
}

// SetTimeout gets a reference to the given string and assigns it to the Timeout field.
func (o *TerminalTransactionEntity) SetTimeout(v string) {
	o.Timeout = &v
}

func (o TerminalTransactionEntity) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TerminalTransactionEntity) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.CfPaymentId) {
		toSerialize["cf_payment_id"] = o.CfPaymentId
	}
	if !IsNil(o.PaymentAmount) {
		toSerialize["payment_amount"] = o.PaymentAmount
	}
	if !IsNil(o.PaymentMethod) {
		toSerialize["payment_method"] = o.PaymentMethod
	}
	if !IsNil(o.PaymentUrl) {
		toSerialize["payment_url"] = o.PaymentUrl
	}
	if !IsNil(o.Qrcode) {
		toSerialize["qrcode"] = o.Qrcode
	}
	if !IsNil(o.Timeout) {
		toSerialize["timeout"] = o.Timeout
	}
	return toSerialize, nil
}

type NullableTerminalTransactionEntity struct {
	value *TerminalTransactionEntity
	isSet bool
}

func (v NullableTerminalTransactionEntity) Get() *TerminalTransactionEntity {
	return v.value
}

func (v *NullableTerminalTransactionEntity) Set(val *TerminalTransactionEntity) {
	v.value = val
	v.isSet = true
}

func (v NullableTerminalTransactionEntity) IsSet() bool {
	return v.isSet
}

func (v *NullableTerminalTransactionEntity) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTerminalTransactionEntity(val *TerminalTransactionEntity) *NullableTerminalTransactionEntity {
	return &NullableTerminalTransactionEntity{value: val, isSet: true}
}

func (v NullableTerminalTransactionEntity) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTerminalTransactionEntity) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


