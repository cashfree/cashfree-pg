/*
Cashfree Payment Gateway APIs

Cashfree's Payment Gateway APIs provide developers with a streamlined pathway to integrate advanced payment processing capabilities into their applications, platforms and websites.

API version: 2022-09-01
Contact: developers@cashfree.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cashfree_pg

import (
	"encoding/json"
)

// checks if the SettlementFetchReconRequestFilters type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SettlementFetchReconRequestFilters{}

// SettlementFetchReconRequestFilters Specify either the Settlement ID, Settlement UTR, or start date and end date to fetch the settlement details.
type SettlementFetchReconRequestFilters struct {
	// List of settlement IDs for which you want the settlement reconciliation details.
	CfSettlementIds []int32 `json:"cf_settlement_ids,omitempty"`
	// List of settlement UTRs for which you want the settlement reconciliation details.
	SettlementUtrs []string `json:"settlement_utrs,omitempty"`
	// Specify the start date from when you want the settlement reconciliation details.
	StartDate *string `json:"start_date,omitempty"`
	// Specify the end date till when you want the settlement reconciliation details.
	EndDate *string `json:"end_date,omitempty"`
}

// NewSettlementFetchReconRequestFilters instantiates a new SettlementFetchReconRequestFilters object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSettlementFetchReconRequestFilters() *SettlementFetchReconRequestFilters {
	this := SettlementFetchReconRequestFilters{}
	return &this
}

// NewSettlementFetchReconRequestFiltersWithDefaults instantiates a new SettlementFetchReconRequestFilters object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSettlementFetchReconRequestFiltersWithDefaults() *SettlementFetchReconRequestFilters {
	this := SettlementFetchReconRequestFilters{}
	return &this
}

// GetCfSettlementIds returns the CfSettlementIds field value if set, zero value otherwise.
func (o *SettlementFetchReconRequestFilters) GetCfSettlementIds() []int32 {
	if o == nil || IsNil(o.CfSettlementIds) {
		var ret []int32
		return ret
	}
	return o.CfSettlementIds
}

// GetCfSettlementIdsOk returns a tuple with the CfSettlementIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SettlementFetchReconRequestFilters) GetCfSettlementIdsOk() ([]int32, bool) {
	if o == nil || IsNil(o.CfSettlementIds) {
		return nil, false
	}
	return o.CfSettlementIds, true
}

// HasCfSettlementIds returns a boolean if a field has been set.
func (o *SettlementFetchReconRequestFilters) HasCfSettlementIds() bool {
	if o != nil && !IsNil(o.CfSettlementIds) {
		return true
	}

	return false
}

// SetCfSettlementIds gets a reference to the given []int32 and assigns it to the CfSettlementIds field.
func (o *SettlementFetchReconRequestFilters) SetCfSettlementIds(v []int32) {
	o.CfSettlementIds = v
}

// GetSettlementUtrs returns the SettlementUtrs field value if set, zero value otherwise.
func (o *SettlementFetchReconRequestFilters) GetSettlementUtrs() []string {
	if o == nil || IsNil(o.SettlementUtrs) {
		var ret []string
		return ret
	}
	return o.SettlementUtrs
}

// GetSettlementUtrsOk returns a tuple with the SettlementUtrs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SettlementFetchReconRequestFilters) GetSettlementUtrsOk() ([]string, bool) {
	if o == nil || IsNil(o.SettlementUtrs) {
		return nil, false
	}
	return o.SettlementUtrs, true
}

// HasSettlementUtrs returns a boolean if a field has been set.
func (o *SettlementFetchReconRequestFilters) HasSettlementUtrs() bool {
	if o != nil && !IsNil(o.SettlementUtrs) {
		return true
	}

	return false
}

// SetSettlementUtrs gets a reference to the given []string and assigns it to the SettlementUtrs field.
func (o *SettlementFetchReconRequestFilters) SetSettlementUtrs(v []string) {
	o.SettlementUtrs = v
}

// GetStartDate returns the StartDate field value if set, zero value otherwise.
func (o *SettlementFetchReconRequestFilters) GetStartDate() string {
	if o == nil || IsNil(o.StartDate) {
		var ret string
		return ret
	}
	return *o.StartDate
}

// GetStartDateOk returns a tuple with the StartDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SettlementFetchReconRequestFilters) GetStartDateOk() (*string, bool) {
	if o == nil || IsNil(o.StartDate) {
		return nil, false
	}
	return o.StartDate, true
}

// HasStartDate returns a boolean if a field has been set.
func (o *SettlementFetchReconRequestFilters) HasStartDate() bool {
	if o != nil && !IsNil(o.StartDate) {
		return true
	}

	return false
}

// SetStartDate gets a reference to the given string and assigns it to the StartDate field.
func (o *SettlementFetchReconRequestFilters) SetStartDate(v string) {
	o.StartDate = &v
}

// GetEndDate returns the EndDate field value if set, zero value otherwise.
func (o *SettlementFetchReconRequestFilters) GetEndDate() string {
	if o == nil || IsNil(o.EndDate) {
		var ret string
		return ret
	}
	return *o.EndDate
}

// GetEndDateOk returns a tuple with the EndDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SettlementFetchReconRequestFilters) GetEndDateOk() (*string, bool) {
	if o == nil || IsNil(o.EndDate) {
		return nil, false
	}
	return o.EndDate, true
}

// HasEndDate returns a boolean if a field has been set.
func (o *SettlementFetchReconRequestFilters) HasEndDate() bool {
	if o != nil && !IsNil(o.EndDate) {
		return true
	}

	return false
}

// SetEndDate gets a reference to the given string and assigns it to the EndDate field.
func (o *SettlementFetchReconRequestFilters) SetEndDate(v string) {
	o.EndDate = &v
}

func (o SettlementFetchReconRequestFilters) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SettlementFetchReconRequestFilters) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.CfSettlementIds) {
		toSerialize["cf_settlement_ids"] = o.CfSettlementIds
	}
	if !IsNil(o.SettlementUtrs) {
		toSerialize["settlement_utrs"] = o.SettlementUtrs
	}
	if !IsNil(o.StartDate) {
		toSerialize["start_date"] = o.StartDate
	}
	if !IsNil(o.EndDate) {
		toSerialize["end_date"] = o.EndDate
	}
	return toSerialize, nil
}

type NullableSettlementFetchReconRequestFilters struct {
	value *SettlementFetchReconRequestFilters
	isSet bool
}

func (v NullableSettlementFetchReconRequestFilters) Get() *SettlementFetchReconRequestFilters {
	return v.value
}

func (v *NullableSettlementFetchReconRequestFilters) Set(val *SettlementFetchReconRequestFilters) {
	v.value = val
	v.isSet = true
}

func (v NullableSettlementFetchReconRequestFilters) IsSet() bool {
	return v.isSet
}

func (v *NullableSettlementFetchReconRequestFilters) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSettlementFetchReconRequestFilters(val *SettlementFetchReconRequestFilters) *NullableSettlementFetchReconRequestFilters {
	return &NullableSettlementFetchReconRequestFilters{value: val, isSet: true}
}

func (v NullableSettlementFetchReconRequestFilters) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSettlementFetchReconRequestFilters) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


