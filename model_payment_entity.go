/*
Cashfree Payment Gateway APIs

Cashfree's Payment Gateway APIs provide developers with a streamlined pathway to integrate advanced payment processing capabilities into their applications, platforms and websites.

API version: 2022-09-01
Contact: developers@cashfree.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cashfree_pg

import (
	"encoding/json"
)

// checks if the PaymentEntity type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PaymentEntity{}

// PaymentEntity payment entity full object
type PaymentEntity struct {
	CfPaymentId *int64 `json:"cf_payment_id,omitempty"`
	OrderId *string `json:"order_id,omitempty"`
	Entity *string `json:"entity,omitempty"`
	ErrorDetails *ErrorDetailsInPaymentsEntity `json:"error_details,omitempty"`
	IsCaptured *bool `json:"is_captured,omitempty"`
	// Order amount can be different from payment amount if you collect service fee from the customer
	OrderAmount *float32 `json:"order_amount,omitempty"`
	// Type of payment group. One of ['upi', 'card', 'app', 'netbanking', 'paylater', 'cardless_emi']
	PaymentGroup *string `json:"payment_group,omitempty"`
	PaymentCurrency *string `json:"payment_currency,omitempty"`
	PaymentAmount *float32 `json:"payment_amount,omitempty"`
	// This is the time when the payment was initiated
	PaymentTime *string `json:"payment_time,omitempty"`
	// This is the time when the payment reaches its terminal state
	PaymentCompletionTime *string `json:"payment_completion_time,omitempty"`
	// The transaction status can be one of  [\"SUCCESS\", \"NOT_ATTEMPTED\", \"FAILED\", \"USER_DROPPED\", \"VOID\", \"CANCELLED\", \"PENDING\"]
	PaymentStatus *string `json:"payment_status,omitempty"`
	PaymentMessage *string `json:"payment_message,omitempty"`
	BankReference *string `json:"bank_reference,omitempty"`
	AuthId *string `json:"auth_id,omitempty"`
	Authorization NullableAuthorizationInPaymentsEntity `json:"authorization,omitempty"`
	PaymentMethod *PaymentMethodInPaymentsEntity `json:"payment_method,omitempty"`
}

// NewPaymentEntity instantiates a new PaymentEntity object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPaymentEntity() *PaymentEntity {
	this := PaymentEntity{}
	return &this
}

// NewPaymentEntityWithDefaults instantiates a new PaymentEntity object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPaymentEntityWithDefaults() *PaymentEntity {
	this := PaymentEntity{}
	return &this
}

// GetCfPaymentId returns the CfPaymentId field value if set, zero value otherwise.
func (o *PaymentEntity) GetCfPaymentId() int64 {
	if o == nil || IsNil(o.CfPaymentId) {
		var ret int64
		return ret
	}
	return *o.CfPaymentId
}

// GetCfPaymentIdOk returns a tuple with the CfPaymentId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentEntity) GetCfPaymentIdOk() (*int64, bool) {
	if o == nil || IsNil(o.CfPaymentId) {
		return nil, false
	}
	return o.CfPaymentId, true
}

// HasCfPaymentId returns a boolean if a field has been set.
func (o *PaymentEntity) HasCfPaymentId() bool {
	if o != nil && !IsNil(o.CfPaymentId) {
		return true
	}

	return false
}

// SetCfPaymentId gets a reference to the given int64 and assigns it to the CfPaymentId field.
func (o *PaymentEntity) SetCfPaymentId(v int64) {
	o.CfPaymentId = &v
}

// GetOrderId returns the OrderId field value if set, zero value otherwise.
func (o *PaymentEntity) GetOrderId() string {
	if o == nil || IsNil(o.OrderId) {
		var ret string
		return ret
	}
	return *o.OrderId
}

// GetOrderIdOk returns a tuple with the OrderId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentEntity) GetOrderIdOk() (*string, bool) {
	if o == nil || IsNil(o.OrderId) {
		return nil, false
	}
	return o.OrderId, true
}

// HasOrderId returns a boolean if a field has been set.
func (o *PaymentEntity) HasOrderId() bool {
	if o != nil && !IsNil(o.OrderId) {
		return true
	}

	return false
}

// SetOrderId gets a reference to the given string and assigns it to the OrderId field.
func (o *PaymentEntity) SetOrderId(v string) {
	o.OrderId = &v
}

// GetEntity returns the Entity field value if set, zero value otherwise.
func (o *PaymentEntity) GetEntity() string {
	if o == nil || IsNil(o.Entity) {
		var ret string
		return ret
	}
	return *o.Entity
}

// GetEntityOk returns a tuple with the Entity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentEntity) GetEntityOk() (*string, bool) {
	if o == nil || IsNil(o.Entity) {
		return nil, false
	}
	return o.Entity, true
}

// HasEntity returns a boolean if a field has been set.
func (o *PaymentEntity) HasEntity() bool {
	if o != nil && !IsNil(o.Entity) {
		return true
	}

	return false
}

// SetEntity gets a reference to the given string and assigns it to the Entity field.
func (o *PaymentEntity) SetEntity(v string) {
	o.Entity = &v
}

// GetErrorDetails returns the ErrorDetails field value if set, zero value otherwise.
func (o *PaymentEntity) GetErrorDetails() ErrorDetailsInPaymentsEntity {
	if o == nil || IsNil(o.ErrorDetails) {
		var ret ErrorDetailsInPaymentsEntity
		return ret
	}
	return *o.ErrorDetails
}

// GetErrorDetailsOk returns a tuple with the ErrorDetails field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentEntity) GetErrorDetailsOk() (*ErrorDetailsInPaymentsEntity, bool) {
	if o == nil || IsNil(o.ErrorDetails) {
		return nil, false
	}
	return o.ErrorDetails, true
}

// HasErrorDetails returns a boolean if a field has been set.
func (o *PaymentEntity) HasErrorDetails() bool {
	if o != nil && !IsNil(o.ErrorDetails) {
		return true
	}

	return false
}

// SetErrorDetails gets a reference to the given ErrorDetailsInPaymentsEntity and assigns it to the ErrorDetails field.
func (o *PaymentEntity) SetErrorDetails(v ErrorDetailsInPaymentsEntity) {
	o.ErrorDetails = &v
}

// GetIsCaptured returns the IsCaptured field value if set, zero value otherwise.
func (o *PaymentEntity) GetIsCaptured() bool {
	if o == nil || IsNil(o.IsCaptured) {
		var ret bool
		return ret
	}
	return *o.IsCaptured
}

// GetIsCapturedOk returns a tuple with the IsCaptured field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentEntity) GetIsCapturedOk() (*bool, bool) {
	if o == nil || IsNil(o.IsCaptured) {
		return nil, false
	}
	return o.IsCaptured, true
}

// HasIsCaptured returns a boolean if a field has been set.
func (o *PaymentEntity) HasIsCaptured() bool {
	if o != nil && !IsNil(o.IsCaptured) {
		return true
	}

	return false
}

// SetIsCaptured gets a reference to the given bool and assigns it to the IsCaptured field.
func (o *PaymentEntity) SetIsCaptured(v bool) {
	o.IsCaptured = &v
}

// GetOrderAmount returns the OrderAmount field value if set, zero value otherwise.
func (o *PaymentEntity) GetOrderAmount() float32 {
	if o == nil || IsNil(o.OrderAmount) {
		var ret float32
		return ret
	}
	return *o.OrderAmount
}

// GetOrderAmountOk returns a tuple with the OrderAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentEntity) GetOrderAmountOk() (*float32, bool) {
	if o == nil || IsNil(o.OrderAmount) {
		return nil, false
	}
	return o.OrderAmount, true
}

// HasOrderAmount returns a boolean if a field has been set.
func (o *PaymentEntity) HasOrderAmount() bool {
	if o != nil && !IsNil(o.OrderAmount) {
		return true
	}

	return false
}

// SetOrderAmount gets a reference to the given float32 and assigns it to the OrderAmount field.
func (o *PaymentEntity) SetOrderAmount(v float32) {
	o.OrderAmount = &v
}

// GetPaymentGroup returns the PaymentGroup field value if set, zero value otherwise.
func (o *PaymentEntity) GetPaymentGroup() string {
	if o == nil || IsNil(o.PaymentGroup) {
		var ret string
		return ret
	}
	return *o.PaymentGroup
}

// GetPaymentGroupOk returns a tuple with the PaymentGroup field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentEntity) GetPaymentGroupOk() (*string, bool) {
	if o == nil || IsNil(o.PaymentGroup) {
		return nil, false
	}
	return o.PaymentGroup, true
}

// HasPaymentGroup returns a boolean if a field has been set.
func (o *PaymentEntity) HasPaymentGroup() bool {
	if o != nil && !IsNil(o.PaymentGroup) {
		return true
	}

	return false
}

// SetPaymentGroup gets a reference to the given string and assigns it to the PaymentGroup field.
func (o *PaymentEntity) SetPaymentGroup(v string) {
	o.PaymentGroup = &v
}

// GetPaymentCurrency returns the PaymentCurrency field value if set, zero value otherwise.
func (o *PaymentEntity) GetPaymentCurrency() string {
	if o == nil || IsNil(o.PaymentCurrency) {
		var ret string
		return ret
	}
	return *o.PaymentCurrency
}

// GetPaymentCurrencyOk returns a tuple with the PaymentCurrency field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentEntity) GetPaymentCurrencyOk() (*string, bool) {
	if o == nil || IsNil(o.PaymentCurrency) {
		return nil, false
	}
	return o.PaymentCurrency, true
}

// HasPaymentCurrency returns a boolean if a field has been set.
func (o *PaymentEntity) HasPaymentCurrency() bool {
	if o != nil && !IsNil(o.PaymentCurrency) {
		return true
	}

	return false
}

// SetPaymentCurrency gets a reference to the given string and assigns it to the PaymentCurrency field.
func (o *PaymentEntity) SetPaymentCurrency(v string) {
	o.PaymentCurrency = &v
}

// GetPaymentAmount returns the PaymentAmount field value if set, zero value otherwise.
func (o *PaymentEntity) GetPaymentAmount() float32 {
	if o == nil || IsNil(o.PaymentAmount) {
		var ret float32
		return ret
	}
	return *o.PaymentAmount
}

// GetPaymentAmountOk returns a tuple with the PaymentAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentEntity) GetPaymentAmountOk() (*float32, bool) {
	if o == nil || IsNil(o.PaymentAmount) {
		return nil, false
	}
	return o.PaymentAmount, true
}

// HasPaymentAmount returns a boolean if a field has been set.
func (o *PaymentEntity) HasPaymentAmount() bool {
	if o != nil && !IsNil(o.PaymentAmount) {
		return true
	}

	return false
}

// SetPaymentAmount gets a reference to the given float32 and assigns it to the PaymentAmount field.
func (o *PaymentEntity) SetPaymentAmount(v float32) {
	o.PaymentAmount = &v
}

// GetPaymentTime returns the PaymentTime field value if set, zero value otherwise.
func (o *PaymentEntity) GetPaymentTime() string {
	if o == nil || IsNil(o.PaymentTime) {
		var ret string
		return ret
	}
	return *o.PaymentTime
}

// GetPaymentTimeOk returns a tuple with the PaymentTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentEntity) GetPaymentTimeOk() (*string, bool) {
	if o == nil || IsNil(o.PaymentTime) {
		return nil, false
	}
	return o.PaymentTime, true
}

// HasPaymentTime returns a boolean if a field has been set.
func (o *PaymentEntity) HasPaymentTime() bool {
	if o != nil && !IsNil(o.PaymentTime) {
		return true
	}

	return false
}

// SetPaymentTime gets a reference to the given string and assigns it to the PaymentTime field.
func (o *PaymentEntity) SetPaymentTime(v string) {
	o.PaymentTime = &v
}

// GetPaymentCompletionTime returns the PaymentCompletionTime field value if set, zero value otherwise.
func (o *PaymentEntity) GetPaymentCompletionTime() string {
	if o == nil || IsNil(o.PaymentCompletionTime) {
		var ret string
		return ret
	}
	return *o.PaymentCompletionTime
}

// GetPaymentCompletionTimeOk returns a tuple with the PaymentCompletionTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentEntity) GetPaymentCompletionTimeOk() (*string, bool) {
	if o == nil || IsNil(o.PaymentCompletionTime) {
		return nil, false
	}
	return o.PaymentCompletionTime, true
}

// HasPaymentCompletionTime returns a boolean if a field has been set.
func (o *PaymentEntity) HasPaymentCompletionTime() bool {
	if o != nil && !IsNil(o.PaymentCompletionTime) {
		return true
	}

	return false
}

// SetPaymentCompletionTime gets a reference to the given string and assigns it to the PaymentCompletionTime field.
func (o *PaymentEntity) SetPaymentCompletionTime(v string) {
	o.PaymentCompletionTime = &v
}

// GetPaymentStatus returns the PaymentStatus field value if set, zero value otherwise.
func (o *PaymentEntity) GetPaymentStatus() string {
	if o == nil || IsNil(o.PaymentStatus) {
		var ret string
		return ret
	}
	return *o.PaymentStatus
}

// GetPaymentStatusOk returns a tuple with the PaymentStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentEntity) GetPaymentStatusOk() (*string, bool) {
	if o == nil || IsNil(o.PaymentStatus) {
		return nil, false
	}
	return o.PaymentStatus, true
}

// HasPaymentStatus returns a boolean if a field has been set.
func (o *PaymentEntity) HasPaymentStatus() bool {
	if o != nil && !IsNil(o.PaymentStatus) {
		return true
	}

	return false
}

// SetPaymentStatus gets a reference to the given string and assigns it to the PaymentStatus field.
func (o *PaymentEntity) SetPaymentStatus(v string) {
	o.PaymentStatus = &v
}

// GetPaymentMessage returns the PaymentMessage field value if set, zero value otherwise.
func (o *PaymentEntity) GetPaymentMessage() string {
	if o == nil || IsNil(o.PaymentMessage) {
		var ret string
		return ret
	}
	return *o.PaymentMessage
}

// GetPaymentMessageOk returns a tuple with the PaymentMessage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentEntity) GetPaymentMessageOk() (*string, bool) {
	if o == nil || IsNil(o.PaymentMessage) {
		return nil, false
	}
	return o.PaymentMessage, true
}

// HasPaymentMessage returns a boolean if a field has been set.
func (o *PaymentEntity) HasPaymentMessage() bool {
	if o != nil && !IsNil(o.PaymentMessage) {
		return true
	}

	return false
}

// SetPaymentMessage gets a reference to the given string and assigns it to the PaymentMessage field.
func (o *PaymentEntity) SetPaymentMessage(v string) {
	o.PaymentMessage = &v
}

// GetBankReference returns the BankReference field value if set, zero value otherwise.
func (o *PaymentEntity) GetBankReference() string {
	if o == nil || IsNil(o.BankReference) {
		var ret string
		return ret
	}
	return *o.BankReference
}

// GetBankReferenceOk returns a tuple with the BankReference field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentEntity) GetBankReferenceOk() (*string, bool) {
	if o == nil || IsNil(o.BankReference) {
		return nil, false
	}
	return o.BankReference, true
}

// HasBankReference returns a boolean if a field has been set.
func (o *PaymentEntity) HasBankReference() bool {
	if o != nil && !IsNil(o.BankReference) {
		return true
	}

	return false
}

// SetBankReference gets a reference to the given string and assigns it to the BankReference field.
func (o *PaymentEntity) SetBankReference(v string) {
	o.BankReference = &v
}

// GetAuthId returns the AuthId field value if set, zero value otherwise.
func (o *PaymentEntity) GetAuthId() string {
	if o == nil || IsNil(o.AuthId) {
		var ret string
		return ret
	}
	return *o.AuthId
}

// GetAuthIdOk returns a tuple with the AuthId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentEntity) GetAuthIdOk() (*string, bool) {
	if o == nil || IsNil(o.AuthId) {
		return nil, false
	}
	return o.AuthId, true
}

// HasAuthId returns a boolean if a field has been set.
func (o *PaymentEntity) HasAuthId() bool {
	if o != nil && !IsNil(o.AuthId) {
		return true
	}

	return false
}

// SetAuthId gets a reference to the given string and assigns it to the AuthId field.
func (o *PaymentEntity) SetAuthId(v string) {
	o.AuthId = &v
}

// GetAuthorization returns the Authorization field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PaymentEntity) GetAuthorization() AuthorizationInPaymentsEntity {
	if o == nil || IsNil(o.Authorization.Get()) {
		var ret AuthorizationInPaymentsEntity
		return ret
	}
	return *o.Authorization.Get()
}

// GetAuthorizationOk returns a tuple with the Authorization field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PaymentEntity) GetAuthorizationOk() (*AuthorizationInPaymentsEntity, bool) {
	if o == nil {
		return nil, false
	}
	return o.Authorization.Get(), o.Authorization.IsSet()
}

// HasAuthorization returns a boolean if a field has been set.
func (o *PaymentEntity) HasAuthorization() bool {
	if o != nil && o.Authorization.IsSet() {
		return true
	}

	return false
}

// SetAuthorization gets a reference to the given NullableAuthorizationInPaymentsEntity and assigns it to the Authorization field.
func (o *PaymentEntity) SetAuthorization(v AuthorizationInPaymentsEntity) {
	o.Authorization.Set(&v)
}
// SetAuthorizationNil sets the value for Authorization to be an explicit nil
func (o *PaymentEntity) SetAuthorizationNil() {
	o.Authorization.Set(nil)
}

// UnsetAuthorization ensures that no value is present for Authorization, not even an explicit nil
func (o *PaymentEntity) UnsetAuthorization() {
	o.Authorization.Unset()
}

// GetPaymentMethod returns the PaymentMethod field value if set, zero value otherwise.
func (o *PaymentEntity) GetPaymentMethod() PaymentMethodInPaymentsEntity {
	if o == nil || IsNil(o.PaymentMethod) {
		var ret PaymentMethodInPaymentsEntity
		return ret
	}
	return *o.PaymentMethod
}

// GetPaymentMethodOk returns a tuple with the PaymentMethod field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentEntity) GetPaymentMethodOk() (*PaymentMethodInPaymentsEntity, bool) {
	if o == nil || IsNil(o.PaymentMethod) {
		return nil, false
	}
	return o.PaymentMethod, true
}

// HasPaymentMethod returns a boolean if a field has been set.
func (o *PaymentEntity) HasPaymentMethod() bool {
	if o != nil && !IsNil(o.PaymentMethod) {
		return true
	}

	return false
}

// SetPaymentMethod gets a reference to the given PaymentMethodInPaymentsEntity and assigns it to the PaymentMethod field.
func (o *PaymentEntity) SetPaymentMethod(v PaymentMethodInPaymentsEntity) {
	o.PaymentMethod = &v
}

func (o PaymentEntity) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PaymentEntity) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.CfPaymentId) {
		toSerialize["cf_payment_id"] = o.CfPaymentId
	}
	if !IsNil(o.OrderId) {
		toSerialize["order_id"] = o.OrderId
	}
	if !IsNil(o.Entity) {
		toSerialize["entity"] = o.Entity
	}
	if !IsNil(o.ErrorDetails) {
		toSerialize["error_details"] = o.ErrorDetails
	}
	if !IsNil(o.IsCaptured) {
		toSerialize["is_captured"] = o.IsCaptured
	}
	if !IsNil(o.OrderAmount) {
		toSerialize["order_amount"] = o.OrderAmount
	}
	if !IsNil(o.PaymentGroup) {
		toSerialize["payment_group"] = o.PaymentGroup
	}
	if !IsNil(o.PaymentCurrency) {
		toSerialize["payment_currency"] = o.PaymentCurrency
	}
	if !IsNil(o.PaymentAmount) {
		toSerialize["payment_amount"] = o.PaymentAmount
	}
	if !IsNil(o.PaymentTime) {
		toSerialize["payment_time"] = o.PaymentTime
	}
	if !IsNil(o.PaymentCompletionTime) {
		toSerialize["payment_completion_time"] = o.PaymentCompletionTime
	}
	if !IsNil(o.PaymentStatus) {
		toSerialize["payment_status"] = o.PaymentStatus
	}
	if !IsNil(o.PaymentMessage) {
		toSerialize["payment_message"] = o.PaymentMessage
	}
	if !IsNil(o.BankReference) {
		toSerialize["bank_reference"] = o.BankReference
	}
	if !IsNil(o.AuthId) {
		toSerialize["auth_id"] = o.AuthId
	}
	if o.Authorization.IsSet() {
		toSerialize["authorization"] = o.Authorization.Get()
	}
	if !IsNil(o.PaymentMethod) {
		toSerialize["payment_method"] = o.PaymentMethod
	}
	return toSerialize, nil
}

type NullablePaymentEntity struct {
	value *PaymentEntity
	isSet bool
}

func (v NullablePaymentEntity) Get() *PaymentEntity {
	return v.value
}

func (v *NullablePaymentEntity) Set(val *PaymentEntity) {
	v.value = val
	v.isSet = true
}

func (v NullablePaymentEntity) IsSet() bool {
	return v.isSet
}

func (v *NullablePaymentEntity) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePaymentEntity(val *PaymentEntity) *NullablePaymentEntity {
	return &NullablePaymentEntity{value: val, isSet: true}
}

func (v NullablePaymentEntity) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePaymentEntity) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


