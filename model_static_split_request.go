/*
Cashfree Payment Gateway APIs

Cashfree's Payment Gateway APIs provide developers with a streamlined pathway to integrate advanced payment processing capabilities into their applications, platforms and websites.

API version: 2023-08-01
Contact: developers@cashfree.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cashfree_pg

import (
	"encoding/json"
	"strings"
)

// checks if the StaticSplitRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &StaticSplitRequest{}

// StaticSplitRequest Static Split Request
type StaticSplitRequest struct {
	// Specify if the split is to be active or not. Possible values: true/false
	Active bool `json:"active"`
	// For Subscription payments, the subscription reference ID is to be shared as the terminal ID. Incase for Payment Gateway terminal ID is non-mandatory. Mention as 0 if not applicable.
	TerminalId *string `json:"terminal_id,omitempty"`
	// You can share additional information using the reference ID.
	TerminalReferenceId *float32 `json:"terminal_reference_id,omitempty"`
	// Specify the product for which the split should be created. If you want split to be created for Payment Gateway pass value as \"PG\". If you want split to be created for Subscription, pass value as \"SBC\". Accepted values - \"STATIC_QR\", \"SBC\", \"PG\", \"EPOS\".
	ProductType string `json:"product_type"`
	// Provide the split scheme details.
	Scheme []StaticSplitRequestSchemeInner `json:"scheme"`
}


func (o StaticSplitRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o StaticSplitRequest) ToMap() (map[string]interface{}, error) {
	strings.HasPrefix("cf", "cf")
	toSerialize := map[string]interface{}{}
	toSerialize["active"] = o.Active
	if !IsNil(o.TerminalId) {
		toSerialize["terminal_id"] = o.TerminalId
	}
	if !IsNil(o.TerminalReferenceId) {
		toSerialize["terminal_reference_id"] = o.TerminalReferenceId
	}
	toSerialize["product_type"] = o.ProductType
	toSerialize["scheme"] = o.Scheme
	return toSerialize, nil
}



