/*
Cashfree Payment Gateway APIs

Cashfree's Payment Gateway APIs provide developers with a streamlined pathway to integrate advanced payment processing capabilities into their applications, platforms and websites.

API version: 2022-09-01
Contact: developers@cashfree.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cashfree_pg

import (
	"encoding/json"
)

// checks if the SettlementReconEntity type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SettlementReconEntity{}

// SettlementReconEntity Recon object for settlement
type SettlementReconEntity struct {
	// Specifies from where the next set of settlement details should be fetched.
	Cursor *string `json:"cursor,omitempty"`
	// Number of settlements you want to fetch in the next iteration.
	Limit *int32 `json:"limit,omitempty"`
	Data []SettlementReconEntityDataInner `json:"data,omitempty"`
}

// NewSettlementReconEntity instantiates a new SettlementReconEntity object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSettlementReconEntity() *SettlementReconEntity {
	this := SettlementReconEntity{}
	return &this
}

// NewSettlementReconEntityWithDefaults instantiates a new SettlementReconEntity object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSettlementReconEntityWithDefaults() *SettlementReconEntity {
	this := SettlementReconEntity{}
	return &this
}

// GetCursor returns the Cursor field value if set, zero value otherwise.
func (o *SettlementReconEntity) GetCursor() string {
	if o == nil || IsNil(o.Cursor) {
		var ret string
		return ret
	}
	return *o.Cursor
}

// GetCursorOk returns a tuple with the Cursor field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SettlementReconEntity) GetCursorOk() (*string, bool) {
	if o == nil || IsNil(o.Cursor) {
		return nil, false
	}
	return o.Cursor, true
}

// HasCursor returns a boolean if a field has been set.
func (o *SettlementReconEntity) HasCursor() bool {
	if o != nil && !IsNil(o.Cursor) {
		return true
	}

	return false
}

// SetCursor gets a reference to the given string and assigns it to the Cursor field.
func (o *SettlementReconEntity) SetCursor(v string) {
	o.Cursor = &v
}

// GetLimit returns the Limit field value if set, zero value otherwise.
func (o *SettlementReconEntity) GetLimit() int32 {
	if o == nil || IsNil(o.Limit) {
		var ret int32
		return ret
	}
	return *o.Limit
}

// GetLimitOk returns a tuple with the Limit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SettlementReconEntity) GetLimitOk() (*int32, bool) {
	if o == nil || IsNil(o.Limit) {
		return nil, false
	}
	return o.Limit, true
}

// HasLimit returns a boolean if a field has been set.
func (o *SettlementReconEntity) HasLimit() bool {
	if o != nil && !IsNil(o.Limit) {
		return true
	}

	return false
}

// SetLimit gets a reference to the given int32 and assigns it to the Limit field.
func (o *SettlementReconEntity) SetLimit(v int32) {
	o.Limit = &v
}

// GetData returns the Data field value if set, zero value otherwise.
func (o *SettlementReconEntity) GetData() []SettlementReconEntityDataInner {
	if o == nil || IsNil(o.Data) {
		var ret []SettlementReconEntityDataInner
		return ret
	}
	return o.Data
}

// GetDataOk returns a tuple with the Data field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SettlementReconEntity) GetDataOk() ([]SettlementReconEntityDataInner, bool) {
	if o == nil || IsNil(o.Data) {
		return nil, false
	}
	return o.Data, true
}

// HasData returns a boolean if a field has been set.
func (o *SettlementReconEntity) HasData() bool {
	if o != nil && !IsNil(o.Data) {
		return true
	}

	return false
}

// SetData gets a reference to the given []SettlementReconEntityDataInner and assigns it to the Data field.
func (o *SettlementReconEntity) SetData(v []SettlementReconEntityDataInner) {
	o.Data = v
}

func (o SettlementReconEntity) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SettlementReconEntity) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Cursor) {
		toSerialize["cursor"] = o.Cursor
	}
	if !IsNil(o.Limit) {
		toSerialize["limit"] = o.Limit
	}
	if !IsNil(o.Data) {
		toSerialize["data"] = o.Data
	}
	return toSerialize, nil
}

type NullableSettlementReconEntity struct {
	value *SettlementReconEntity
	isSet bool
}

func (v NullableSettlementReconEntity) Get() *SettlementReconEntity {
	return v.value
}

func (v *NullableSettlementReconEntity) Set(val *SettlementReconEntity) {
	v.value = val
	v.isSet = true
}

func (v NullableSettlementReconEntity) IsSet() bool {
	return v.isSet
}

func (v *NullableSettlementReconEntity) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSettlementReconEntity(val *SettlementReconEntity) *NullableSettlementReconEntity {
	return &NullableSettlementReconEntity{value: val, isSet: true}
}

func (v NullableSettlementReconEntity) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSettlementReconEntity) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


