/*
Cashfree Payment Gateway APIs

Cashfree's Payment Gateway APIs provide developers with a streamlined pathway to integrate advanced payment processing capabilities into their applications, platforms and websites.

API version: 2022-09-01
Contact: developers@cashfree.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cashfree_pg

import (
	"encoding/json"
)

// checks if the OrderCreateRefundRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &OrderCreateRefundRequest{}

// OrderCreateRefundRequest create refund request object
type OrderCreateRefundRequest struct {
	// Amount to be refunded. Should be lesser than or equal to the transaction amount. (Decimals allowed)
	RefundAmount float64 `json:"refund_amount"`
	// An unique ID to associate the refund with. Provie alphanumeric values
	RefundId string `json:"refund_id"`
	// A refund note for your reference.
	RefundNote *string `json:"refund_note,omitempty"`
	// Speed at which the refund is processed. It's an optional field with default being STANDARD
	RefundSpeed *string `json:"refund_speed,omitempty"`
	RefundSplits []VendorSplit `json:"refund_splits,omitempty"`
}

// NewOrderCreateRefundRequest instantiates a new OrderCreateRefundRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOrderCreateRefundRequest(refundAmount float64, refundId string) *OrderCreateRefundRequest {
	this := OrderCreateRefundRequest{}
	this.RefundAmount = refundAmount
	this.RefundId = refundId
	return &this
}

// NewOrderCreateRefundRequestWithDefaults instantiates a new OrderCreateRefundRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOrderCreateRefundRequestWithDefaults() *OrderCreateRefundRequest {
	this := OrderCreateRefundRequest{}
	return &this
}

// GetRefundAmount returns the RefundAmount field value
func (o *OrderCreateRefundRequest) GetRefundAmount() float64 {
	if o == nil {
		var ret float64
		return ret
	}

	return o.RefundAmount
}

// GetRefundAmountOk returns a tuple with the RefundAmount field value
// and a boolean to check if the value has been set.
func (o *OrderCreateRefundRequest) GetRefundAmountOk() (*float64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.RefundAmount, true
}

// SetRefundAmount sets field value
func (o *OrderCreateRefundRequest) SetRefundAmount(v float64) {
	o.RefundAmount = v
}

// GetRefundId returns the RefundId field value
func (o *OrderCreateRefundRequest) GetRefundId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.RefundId
}

// GetRefundIdOk returns a tuple with the RefundId field value
// and a boolean to check if the value has been set.
func (o *OrderCreateRefundRequest) GetRefundIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.RefundId, true
}

// SetRefundId sets field value
func (o *OrderCreateRefundRequest) SetRefundId(v string) {
	o.RefundId = v
}

// GetRefundNote returns the RefundNote field value if set, zero value otherwise.
func (o *OrderCreateRefundRequest) GetRefundNote() string {
	if o == nil || IsNil(o.RefundNote) {
		var ret string
		return ret
	}
	return *o.RefundNote
}

// GetRefundNoteOk returns a tuple with the RefundNote field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderCreateRefundRequest) GetRefundNoteOk() (*string, bool) {
	if o == nil || IsNil(o.RefundNote) {
		return nil, false
	}
	return o.RefundNote, true
}

// HasRefundNote returns a boolean if a field has been set.
func (o *OrderCreateRefundRequest) HasRefundNote() bool {
	if o != nil && !IsNil(o.RefundNote) {
		return true
	}

	return false
}

// SetRefundNote gets a reference to the given string and assigns it to the RefundNote field.
func (o *OrderCreateRefundRequest) SetRefundNote(v string) {
	o.RefundNote = &v
}

// GetRefundSpeed returns the RefundSpeed field value if set, zero value otherwise.
func (o *OrderCreateRefundRequest) GetRefundSpeed() string {
	if o == nil || IsNil(o.RefundSpeed) {
		var ret string
		return ret
	}
	return *o.RefundSpeed
}

// GetRefundSpeedOk returns a tuple with the RefundSpeed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderCreateRefundRequest) GetRefundSpeedOk() (*string, bool) {
	if o == nil || IsNil(o.RefundSpeed) {
		return nil, false
	}
	return o.RefundSpeed, true
}

// HasRefundSpeed returns a boolean if a field has been set.
func (o *OrderCreateRefundRequest) HasRefundSpeed() bool {
	if o != nil && !IsNil(o.RefundSpeed) {
		return true
	}

	return false
}

// SetRefundSpeed gets a reference to the given string and assigns it to the RefundSpeed field.
func (o *OrderCreateRefundRequest) SetRefundSpeed(v string) {
	o.RefundSpeed = &v
}

// GetRefundSplits returns the RefundSplits field value if set, zero value otherwise.
func (o *OrderCreateRefundRequest) GetRefundSplits() []VendorSplit {
	if o == nil || IsNil(o.RefundSplits) {
		var ret []VendorSplit
		return ret
	}
	return o.RefundSplits
}

// GetRefundSplitsOk returns a tuple with the RefundSplits field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderCreateRefundRequest) GetRefundSplitsOk() ([]VendorSplit, bool) {
	if o == nil || IsNil(o.RefundSplits) {
		return nil, false
	}
	return o.RefundSplits, true
}

// HasRefundSplits returns a boolean if a field has been set.
func (o *OrderCreateRefundRequest) HasRefundSplits() bool {
	if o != nil && !IsNil(o.RefundSplits) {
		return true
	}

	return false
}

// SetRefundSplits gets a reference to the given []VendorSplit and assigns it to the RefundSplits field.
func (o *OrderCreateRefundRequest) SetRefundSplits(v []VendorSplit) {
	o.RefundSplits = v
}

func (o OrderCreateRefundRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o OrderCreateRefundRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["refund_amount"] = o.RefundAmount
	toSerialize["refund_id"] = o.RefundId
	if !IsNil(o.RefundNote) {
		toSerialize["refund_note"] = o.RefundNote
	}
	if !IsNil(o.RefundSpeed) {
		toSerialize["refund_speed"] = o.RefundSpeed
	}
	if !IsNil(o.RefundSplits) {
		toSerialize["refund_splits"] = o.RefundSplits
	}
	return toSerialize, nil
}

type NullableOrderCreateRefundRequest struct {
	value *OrderCreateRefundRequest
	isSet bool
}

func (v NullableOrderCreateRefundRequest) Get() *OrderCreateRefundRequest {
	return v.value
}

func (v *NullableOrderCreateRefundRequest) Set(val *OrderCreateRefundRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableOrderCreateRefundRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableOrderCreateRefundRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOrderCreateRefundRequest(val *OrderCreateRefundRequest) *NullableOrderCreateRefundRequest {
	return &NullableOrderCreateRefundRequest{value: val, isSet: true}
}

func (v NullableOrderCreateRefundRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOrderCreateRefundRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


