/*
Cashfree Payment Gateway APIs

Cashfree's Payment Gateway APIs provide developers with a streamlined pathway to integrate advanced payment processing capabilities into their applications, platforms and websites.

API version: 2022-09-01
Contact: developers@cashfree.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cashfree_pg

import (
	"encoding/json"
)

// checks if the OfferWallet type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &OfferWallet{}

// OfferWallet Offer object for wallet payment method
type OfferWallet struct {
	App *WalletOffer `json:"app,omitempty"`
}

// NewOfferWallet instantiates a new OfferWallet object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOfferWallet() *OfferWallet {
	this := OfferWallet{}
	return &this
}

// NewOfferWalletWithDefaults instantiates a new OfferWallet object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOfferWalletWithDefaults() *OfferWallet {
	this := OfferWallet{}
	return &this
}

// GetApp returns the App field value if set, zero value otherwise.
func (o *OfferWallet) GetApp() WalletOffer {
	if o == nil || IsNil(o.App) {
		var ret WalletOffer
		return ret
	}
	return *o.App
}

// GetAppOk returns a tuple with the App field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OfferWallet) GetAppOk() (*WalletOffer, bool) {
	if o == nil || IsNil(o.App) {
		return nil, false
	}
	return o.App, true
}

// HasApp returns a boolean if a field has been set.
func (o *OfferWallet) HasApp() bool {
	if o != nil && !IsNil(o.App) {
		return true
	}

	return false
}

// SetApp gets a reference to the given WalletOffer and assigns it to the App field.
func (o *OfferWallet) SetApp(v WalletOffer) {
	o.App = &v
}

func (o OfferWallet) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o OfferWallet) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.App) {
		toSerialize["app"] = o.App
	}
	return toSerialize, nil
}

type NullableOfferWallet struct {
	value *OfferWallet
	isSet bool
}

func (v NullableOfferWallet) Get() *OfferWallet {
	return v.value
}

func (v *NullableOfferWallet) Set(val *OfferWallet) {
	v.value = val
	v.isSet = true
}

func (v NullableOfferWallet) IsSet() bool {
	return v.isSet
}

func (v *NullableOfferWallet) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOfferWallet(val *OfferWallet) *NullableOfferWallet {
	return &NullableOfferWallet{value: val, isSet: true}
}

func (v NullableOfferWallet) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOfferWallet) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


