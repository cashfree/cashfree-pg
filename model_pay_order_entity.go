/*
Cashfree Payment Gateway APIs

Cashfree's Payment Gateway APIs provide developers with a streamlined pathway to integrate advanced payment processing capabilities into their applications, platforms and websites.

API version: 2022-09-01
Contact: developers@cashfree.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cashfree_pg

import (
	"encoding/json"
)

// checks if the PayOrderEntity type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PayOrderEntity{}

// PayOrderEntity Order Pay response once you create a transaction for that order
type PayOrderEntity struct {
	// total amount payable
	PaymentAmount *float32 `json:"payment_amount,omitempty"`
	// Payment identifier created by Cashfree
	CfPaymentId *int64 `json:"cf_payment_id,omitempty"`
	// One of [\"upi\", \"netbanking\", \"card\", \"app\", \"cardless_emi\", \"paylater\", \"banktransfer\"] 
	PaymentMethod *string `json:"payment_method,omitempty"`
	// One of [\"link\", \"collect\", \"qrcode\"]. In an older version we used to support different channels like 'gpay', 'phonepe' etc. However, we now support only the following channels - link, collect and qrcode. To process payments using gpay, you will have to provide channel as 'link' and provider as 'gpay'
	Channel *string `json:"channel,omitempty"`
	// One of [\"link\", \"custom\", \"form\"]
	Action NullableString `json:"action,omitempty"`
	Data *OrderPayData `json:"data,omitempty"`
}

// NewPayOrderEntity instantiates a new PayOrderEntity object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPayOrderEntity() *PayOrderEntity {
	this := PayOrderEntity{}
	return &this
}

// NewPayOrderEntityWithDefaults instantiates a new PayOrderEntity object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPayOrderEntityWithDefaults() *PayOrderEntity {
	this := PayOrderEntity{}
	return &this
}

// GetPaymentAmount returns the PaymentAmount field value if set, zero value otherwise.
func (o *PayOrderEntity) GetPaymentAmount() float32 {
	if o == nil || IsNil(o.PaymentAmount) {
		var ret float32
		return ret
	}
	return *o.PaymentAmount
}

// GetPaymentAmountOk returns a tuple with the PaymentAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PayOrderEntity) GetPaymentAmountOk() (*float32, bool) {
	if o == nil || IsNil(o.PaymentAmount) {
		return nil, false
	}
	return o.PaymentAmount, true
}

// HasPaymentAmount returns a boolean if a field has been set.
func (o *PayOrderEntity) HasPaymentAmount() bool {
	if o != nil && !IsNil(o.PaymentAmount) {
		return true
	}

	return false
}

// SetPaymentAmount gets a reference to the given float32 and assigns it to the PaymentAmount field.
func (o *PayOrderEntity) SetPaymentAmount(v float32) {
	o.PaymentAmount = &v
}

// GetCfPaymentId returns the CfPaymentId field value if set, zero value otherwise.
func (o *PayOrderEntity) GetCfPaymentId() int64 {
	if o == nil || IsNil(o.CfPaymentId) {
		var ret int64
		return ret
	}
	return *o.CfPaymentId
}

// GetCfPaymentIdOk returns a tuple with the CfPaymentId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PayOrderEntity) GetCfPaymentIdOk() (*int64, bool) {
	if o == nil || IsNil(o.CfPaymentId) {
		return nil, false
	}
	return o.CfPaymentId, true
}

// HasCfPaymentId returns a boolean if a field has been set.
func (o *PayOrderEntity) HasCfPaymentId() bool {
	if o != nil && !IsNil(o.CfPaymentId) {
		return true
	}

	return false
}

// SetCfPaymentId gets a reference to the given int64 and assigns it to the CfPaymentId field.
func (o *PayOrderEntity) SetCfPaymentId(v int64) {
	o.CfPaymentId = &v
}

// GetPaymentMethod returns the PaymentMethod field value if set, zero value otherwise.
func (o *PayOrderEntity) GetPaymentMethod() string {
	if o == nil || IsNil(o.PaymentMethod) {
		var ret string
		return ret
	}
	return *o.PaymentMethod
}

// GetPaymentMethodOk returns a tuple with the PaymentMethod field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PayOrderEntity) GetPaymentMethodOk() (*string, bool) {
	if o == nil || IsNil(o.PaymentMethod) {
		return nil, false
	}
	return o.PaymentMethod, true
}

// HasPaymentMethod returns a boolean if a field has been set.
func (o *PayOrderEntity) HasPaymentMethod() bool {
	if o != nil && !IsNil(o.PaymentMethod) {
		return true
	}

	return false
}

// SetPaymentMethod gets a reference to the given string and assigns it to the PaymentMethod field.
func (o *PayOrderEntity) SetPaymentMethod(v string) {
	o.PaymentMethod = &v
}

// GetChannel returns the Channel field value if set, zero value otherwise.
func (o *PayOrderEntity) GetChannel() string {
	if o == nil || IsNil(o.Channel) {
		var ret string
		return ret
	}
	return *o.Channel
}

// GetChannelOk returns a tuple with the Channel field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PayOrderEntity) GetChannelOk() (*string, bool) {
	if o == nil || IsNil(o.Channel) {
		return nil, false
	}
	return o.Channel, true
}

// HasChannel returns a boolean if a field has been set.
func (o *PayOrderEntity) HasChannel() bool {
	if o != nil && !IsNil(o.Channel) {
		return true
	}

	return false
}

// SetChannel gets a reference to the given string and assigns it to the Channel field.
func (o *PayOrderEntity) SetChannel(v string) {
	o.Channel = &v
}

// GetAction returns the Action field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PayOrderEntity) GetAction() string {
	if o == nil || IsNil(o.Action.Get()) {
		var ret string
		return ret
	}
	return *o.Action.Get()
}

// GetActionOk returns a tuple with the Action field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PayOrderEntity) GetActionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Action.Get(), o.Action.IsSet()
}

// HasAction returns a boolean if a field has been set.
func (o *PayOrderEntity) HasAction() bool {
	if o != nil && o.Action.IsSet() {
		return true
	}

	return false
}

// SetAction gets a reference to the given NullableString and assigns it to the Action field.
func (o *PayOrderEntity) SetAction(v string) {
	o.Action.Set(&v)
}
// SetActionNil sets the value for Action to be an explicit nil
func (o *PayOrderEntity) SetActionNil() {
	o.Action.Set(nil)
}

// UnsetAction ensures that no value is present for Action, not even an explicit nil
func (o *PayOrderEntity) UnsetAction() {
	o.Action.Unset()
}

// GetData returns the Data field value if set, zero value otherwise.
func (o *PayOrderEntity) GetData() OrderPayData {
	if o == nil || IsNil(o.Data) {
		var ret OrderPayData
		return ret
	}
	return *o.Data
}

// GetDataOk returns a tuple with the Data field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PayOrderEntity) GetDataOk() (*OrderPayData, bool) {
	if o == nil || IsNil(o.Data) {
		return nil, false
	}
	return o.Data, true
}

// HasData returns a boolean if a field has been set.
func (o *PayOrderEntity) HasData() bool {
	if o != nil && !IsNil(o.Data) {
		return true
	}

	return false
}

// SetData gets a reference to the given OrderPayData and assigns it to the Data field.
func (o *PayOrderEntity) SetData(v OrderPayData) {
	o.Data = &v
}

func (o PayOrderEntity) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PayOrderEntity) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.PaymentAmount) {
		toSerialize["payment_amount"] = o.PaymentAmount
	}
	if !IsNil(o.CfPaymentId) {
		toSerialize["cf_payment_id"] = o.CfPaymentId
	}
	if !IsNil(o.PaymentMethod) {
		toSerialize["payment_method"] = o.PaymentMethod
	}
	if !IsNil(o.Channel) {
		toSerialize["channel"] = o.Channel
	}
	if o.Action.IsSet() {
		toSerialize["action"] = o.Action.Get()
	}
	if !IsNil(o.Data) {
		toSerialize["data"] = o.Data
	}
	return toSerialize, nil
}

type NullablePayOrderEntity struct {
	value *PayOrderEntity
	isSet bool
}

func (v NullablePayOrderEntity) Get() *PayOrderEntity {
	return v.value
}

func (v *NullablePayOrderEntity) Set(val *PayOrderEntity) {
	v.value = val
	v.isSet = true
}

func (v NullablePayOrderEntity) IsSet() bool {
	return v.isSet
}

func (v *NullablePayOrderEntity) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePayOrderEntity(val *PayOrderEntity) *NullablePayOrderEntity {
	return &NullablePayOrderEntity{value: val, isSet: true}
}

func (v NullablePayOrderEntity) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePayOrderEntity) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


